webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(toastr, $, __webpack_provided_L_dot_esri, within, tokml) {// ------------------------------------------------------------------------------\n// ----- NY QW Mapper ----------------------------------------------------------\n// ------------------------------------------------------------------------------\n\n// copyright:   2016 Martyn Smith - USGS NY WSC\n\n// authors:  Martyn J. Smith - USGS NY WSC\n\n// purpose:  Web Mapping interface for NY QW data\n\n// updates:\n// 12.02.2016 mjs - Created\n\n//config variables\nvar MapX = '-76.2';\nvar MapY = '42.7';\nvar map;\nvar sitesGeoJSON; //master geoJSON object of universe of sitesGeoJSON\nvar sitesLayer; //leaflet feature group representing current filtered set of sites\nvar baseMapLayer, basemapLayerLabels;\nvar filterGroupList = ['County', 'HUC', 'Aquifer', 'WellDepth'];\nvar geojsonMarkerOptions = {\n\tradius: 4,\n\tfillColor: '#ff7800',\n\tcolor: '#000',\n\tweight: 1,\n\topacity: 1,\n\tfillOpacity: 0.8\n};\nvar geoFilterFlag;\nvar parentArray = [];\n\nvar layerList = [{ layerID: \"1\", layerName: \"NY WSC Sub-district\", outFields: [\"subdist\", \"FID\"], dropDownID: \"WSCsubDist\" }, { layerID: \"2\", layerName: \"Senate District\", outFields: [\"NAMELSAD\", \"FID\", \"Rep_Name\"], dropDownID: \"SenateDist\" }, { layerID: \"3\", layerName: \"Assembly District\", outFields: [\"NAMELSAD\", \"FID\", \"AD_Name\"], dropDownID: \"AssemDist\" }, { layerID: \"4\", layerName: \"Congressional District\", outFields: [\"NAMELSAD\", \"FID\", \"CD_Name\"], dropDownID: \"CongDist\" }, { layerID: \"5\", layerName: \"County\", outFields: [\"County_Nam\", \"FID\"], dropDownID: \"County\" }, { layerID: \"6\", layerName: \"Hydrologic Unit\", outFields: [\"HUC_8\", \"FID\", \"HU_8_Name\"], dropDownID: \"HUC8\" }];\n\nvar allLayers = [{\n\t\"groupHeading\": \"Filters\",\n\t\"showGroupHeading\": true,\n\t\"includeInLayerList\": true,\n\t\"layers\": {\n\t\t\"USGS Sub-district\": {\n\t\t\t\"url\": \"https://www.sciencebase.gov/arcgis/rest/services/Catalog/56ba63bae4b08d617f6490d2/MapServer\",\n\t\t\t\"layers\": [1, 2, 3, 4, 5, 6],\n\t\t\t\"visible\": false,\n\t\t\t\"opacity\": 0.8,\n\t\t\t\"wimOptions\": {\n\t\t\t\t\"type\": \"layer\",\n\t\t\t\t\"layerType\": \"agisDynamic\",\n\t\t\t\t\"includeInLayerList\": true\n\t\t\t}\n\t\t}\n\t}\n}];\n\ntoastr.options = {\n\t'positionClass': 'toast-bottom-right'\n};\n\nif (true) {\n\t__webpack_require__(12);\n}\n\n//instantiate map\n$(document).ready(function () {\n\tconsole.log('Application Information: ' + (\"development\") + ' ' + 'version ' + (\"0.0.1\"));\n\t$('#appVersion').html('Application Information: ' + (\"development\") + ' ' + 'version ' + (\"0.0.1\"));\n\n\t//create map\n\tmap = L.map('mapDiv', { zoomControl: false });\n\n\t//add zoom control with your options\n\tL.control.zoom({ position: 'topright' }).addTo(map);\n\tL.control.scale().addTo(map);\n\n\t//basemap\n\tlayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', {\n\t\tattribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ',\n\t\tmaxZoom: 16\n\t}).addTo(map);\n\n\t//set initial view\n\tmap.setView([MapY, MapX], 7);\n\n\t//define layers\n\tsitesLayer = L.featureGroup().addTo(map);\n\n\t//createFilterGroups();\n\tparseBaseLayers();\n\tloadSites();\n\n\t/*  START EVENT HANDLERS */\n\t$('#mobile-main-menu').click(function () {\n\t\t$('body').toggleClass('isOpenMenu');\n\t});\n\n\t$('.basemapBtn').click(function () {\n\t\t$('.basemapBtn').removeClass('slick-btn-selection');\n\t\t$(this).addClass('slick-btn-selection');\n\t\tvar baseMap = this.id.replace('btn', '');\n\t\tsetBasemap(baseMap);\n\t});\n\n\t$('#loadSites').click(function () {\n\t\tloadSites();\n\t});\n\n\t$('#resetView').click(function () {\n\t\tresetView();\n\t});\n\n\t$('#resetFilters').click(function () {\n\t\tresetFilters();\n\t});\n\n\t$('#aboutButton').click(function () {\n\t\t$('#aboutModal').modal('show');\n\t});\n\n\t$('#getQWdata').click(function () {\n\t\tgetQWdata();\n\t});\n\n\t$('#exportGeoJSON').click(function () {\n\t\tdownloadGeoJSON();\n\t});\n\n\t$('#exportKML').click(function () {\n\t\tdownloadKML();\n\t});\n\n\t$('.NWISselect').on('change', function () {\n\t\tvar selectName = $('option:selected', this).parent().attr('id');\n\t\tvar optionName = $('option:selected', this).text();\n\t\tvar optionValue = $('option:selected', this).attr('value');\n\t\tvar filterInfo = { selectName: selectName, optionName: optionName, optionValue: optionValue };\n\t\tfilterSites(filterInfo);\n\t});\n\n\t$('#geoFilterSelect').on('changed.bs.select', function (event, clickedIndex, newValue, oldValue) {\n\t\tconsole.log('testing if this works', event.target, clickedIndex, newValue, oldValue);\n\n\t\tvar parentSelectID = $(event.target).attr('id');\n\t\tvar selectArray = $(event.target).find(\"option:selected\");\n\t\tvar singleSelectCount = selectArray.length;\n\t\tvar currentSelected = $(event.target).find(\"option\")[clickedIndex];\n\n\t\tconsole.log('current selected: ', currentSelected, parentSelectID);\n\n\t\tif (selectArray.length == 0) {\n\t\t\tconsole.log('here', parentSelectID, parentArray);\n\t\t\tvar index = parentArray.indexOf(parentSelectID);\n\t\t\tif (index > -1) {\n\t\t\t\tparentArray.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\t//if operation is a deselect, get remaining selected options\n\t\tif (newValue == false) {\n\t\t\tvar layerID = $(this).find(\"option:selected\").attr('layerID');\n\t\t\tvar value = $(this).find(\"option:selected\").attr('value');\n\t\t\tvar name = $(event.target).find(\"option:selected\").text();\n\t\t}\n\n\t\t//otherwise make a new selection\n\t\telse {\n\t\t\t\tvar layerID = $(currentSelected).attr('layerID');\n\t\t\t\tvar value = $(currentSelected).attr('value');\n\t\t\t\tvar name = $(currentSelected).text();\n\t\t\t}\n\n\t\tconsole.log('GeoFilter selected: ', name, value, layerID, parentSelectID, singleSelectCount);\n\n\t\t//find how many different selects have options selected\n\t\t$.each($('#geoFilterSelect').find(\"option:selected\"), function (index, value) {\n\t\t\tvar parent = $(value).parent().attr('id');\n\t\t\tif (parentArray.indexOf(parent) == -1) {\n\t\t\t\tparentArray.push(parent);\n\t\t\t}\n\t\t});\n\t\tconsole.log('geoselect with selections in:', parentArray);\n\n\t\t//if all in a single select are unselected, reset filters\n\t\tif (singleSelectCount == 0 && parentArray.length == 0) {\n\t\t\ttoastr.info('You just unselected all options, resetting filters', 'Info');\n\t\t\t//resetFilters();\n\t\t}\n\n\t\t//otherwise do query\n\t\telse {\n\n\t\t\t\t//make sure there is a selection\n\t\t\t\tif (layerID) {\n\n\t\t\t\t\t//single select query\n\t\t\t\t\tvar query = \"FID = \" + value;\n\n\t\t\t\t\t//if this is a multiple selection from the same select, add to current select\n\t\t\t\t\tif (singleSelectCount > 1) {\n\n\t\t\t\t\t\t//NEW METHOD HERE 'FID IN (1,2,3)'\n\t\t\t\t\t\tquery = $(selectArray).map(function () {\n\t\t\t\t\t\t\treturn \"FID = \" + this.value;\n\t\t\t\t\t\t}).get().join(' or ');\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log('running quere where:', query);\n\t\t\t\t\ttoastr.info(parentSelectID + ' equals ' + name, 'Querying sites where... ');\n\n\t\t\t\t\tmapServer.query().layer(layerID).returnGeometry(true).where(query).run(function (error, clipPolygonGeoJSON) {\n\n\t\t\t\t\t\t//make sure there is a result polygon\n\t\t\t\t\t\tif (clipPolygonGeoJSON.features.length > 0) {\n\n\t\t\t\t\t\t\t//logic here is if there are selections from multiple dropdowns, then\n\t\t\t\t\t\t\t//use the currently selected set to do the clip\n\t\t\t\t\t\t\tif (parentArray.length > 1) {\n\t\t\t\t\t\t\t\tvar inputSitesGeoJSON = sitesLayer.toGeoJSON().features[0];\n\t\t\t\t\t\t\t\tvar ptsWithin = clipSites(inputSitesGeoJSON, clipPolygonGeoJSON);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t//otherwise, use the master list of sites\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvar ptsWithin = clipSites(sitesGeoJSON, clipPolygonGeoJSON);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (ptsWithin) {\n\t\t\t\t\t\t\t\tgeoFilterFlag = true;\n\t\t\t\t\t\t\t\tdrawGeoJSON(ptsWithin);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//if no sites returned from clip, unselect this from select\n\t\t\t\t\t\t\t\tconsole.log('here', currentSelected, $(currentSelected).prop(\"selected\"));\n\t\t\t\t\t\t\t\t$(currentSelected).prop(\"selected\", false);\n\t\t\t\t\t\t\t\t$('.selectpicker').selectpicker('refresh');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttoastr.error('Error', 'Geometry query did not return any features');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t});\n\n\t$('#geoFilterSelect').on('change', '.selectpicker', function () {\n\t\t//$(document).on('change', '.geoFilterSelect', function() {\n\n\n\t});\n\n\t/*  END EVENT HANDLERS */\n});\n\nfunction drawGeoJSON(geoJSON) {\n\t//clear current display layer\n\tsitesLayer.clearLayers();\n\n\tvar geoJSONlayer = L.geoJson(geoJSON, {\n\t\t// //optional filter input\n\t\t// filter: function(feature, layer) {\n\t\t// \tif (filterInfo.selectName === 'CountySelect') return feature.properties.countyCode === filterInfo.optionValue;\n\t\t// \tif (filterInfo.selectName === 'HUCSelect') return feature.properties.hucCode === filterInfo.optionValue;\n\t\t// \tif (filterInfo.selectName === 'AquiferSelect') return feature.properties.aquiferCode === filterInfo.optionValue;\n\t\t// \tif (filterInfo.selectName === 'WellDepthSelect') return feature.properties.wellDepth === filterInfo.optionValue;\n\t\t// },\n\t\tpointToLayer: function (feature, latlng) {\n\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t},\n\t\tonEachFeature: function (feature, layer) {\n\t\t\t//layer.bindPopup('<b>' + feature.properties.siteID + '</b></br></br>' + feature.properties.siteName + '</br><a href=\"https://waterdata.usgs.gov/nwis/inventory/?site_no=' + feature.properties.siteID + '\" target=\"_blank\">Access Data</a></br></br>');\n\t\t\tvar $popupContent = $('<div>', { id: 'popup' });\n\n\t\t\t$.each(feature.properties, function (index, property) {\n\t\t\t\t$popupContent.append('<b>' + index + ':</b>  ' + property + '</br>');\n\t\t\t});\n\n\t\t\tlayer.bindPopup($popupContent.html());\n\t\t}\n\t});\n\tsitesLayer.addLayer(geoJSONlayer);\n\tmap.fitBounds(sitesLayer.getBounds());\n}\n\nfunction resetFilters() {\n\t$('.selectpicker').selectpicker('deselectAll');\n\n\tparentArray = [];\n\n\tresetView();\n\n\tdrawGeoJSON(sitesGeoJSON);\n}\n\nfunction parseBaseLayers() {\n\t$.each(allLayers, function (index, group) {\n\t\tconsole.log('processing: ', group.groupHeading);\n\n\t\t//sub-loop over layers within this groupType\n\t\t$.each(group.layers, function (mapServerName, mapServerDetails) {\n\n\t\t\t// if (mapServerDetails.wimOptions.layerType === 'agisFeature') {\t\n\t\t\t// \tfeatureLayer = L.esri.featureLayer({url:mapServerDetails.url});\n\t\t\t// \t//addLayer(group.groupHeading, group.showGroupHeading, layer, mapServerName, mapServerDetails);\n\t\t\t// }\n\n\t\t\tif (mapServerDetails.wimOptions.layerType === 'agisDynamic') {\n\t\t\t\tmapServer = __webpack_provided_L_dot_esri.dynamicMapLayer(mapServerDetails);\n\t\t\t\t// addMapLayer(mapServer, mapServerName, mapServerDetails);\n\n\t\t\t\tsetupGeoFilters(layerList);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction setupGeoFilters(layerList) {\n\n\t$.each(layerList, function (index, value) {\n\n\t\ttoastr.info(value.layerName, 'Getting geoFilters:');\n\n\t\t//execute the query task then populate the dropdown menu with list\n\t\tmapServer.query().layer(value.layerID).returnGeometry(false).where(\"1=1\").run(function (error, featureCollection) {\n\n\t\t\tif (featureCollection && featureCollection.features.length > 0) {\n\n\t\t\t\t//append a new dropdown\n\t\t\t\t$(\"#geoFilterSelect\").append(\"<select id='\" + value.dropDownID + \"' class='selectpicker geoFilterSelect' multiple data-selected-text-format='count' data-dropup-auto='false' title='\" + value.layerName + \"'></select>\");\n\n\t\t\t\tvar features = featureCollection.features;\n\t\t\t\tfor (var i = 0; i < features.length; i++) {\n\t\t\t\t\t//console.log('adding: ',features[i].properties[value.outFields[0]], 'to the div: ',value.dropDownID);\n\n\t\t\t\t\t$(\"#\" + value.dropDownID).append($('<option></option>').attr('layerID', value.layerID).val(features[i].properties[value.outFields[1]]).html(features[i].properties[value.outFields[0]]));\n\t\t\t\t}\n\t\t\t\t//sort the options list \n\t\t\t\t$(\"#\" + value.dropDownID).html($(\"#\" + value.dropDownID + \" option\").sort(function (a, b) {\n\t\t\t\t\treturn a.text == b.text ? 0 : a.text < b.text ? -1 : 1;\n\t\t\t\t}));\n\t\t\t\t//add the default option\n\t\t\t\t//$(\"#\" + value.dropDownID).prepend(\"<option layerID='' selected='selected'>Select a \" + value.layerName + \"</option>\");\n\t\t\t\t$('.selectpicker').selectpicker('refresh');\n\t\t\t} else {\n\t\t\t\ttoastr.error(error.message, 'Error getting geoFilter list for ' + value.layerName);\n\t\t\t}\n\t\t});\n\t\t//break the loop for testing\n\t\t//return false;\n\t});\n}\n\nfunction clipSites(inputGeoJSON, polyGeoJSON) {\n\n\t//console.log('selected: ', filterInfo);\n\ttoastr.info('Filtering sites...', { timeOut: 0 });\n\n\t//turfjs clip operation\n\tvar ptsWithin = within(inputGeoJSON, polyGeoJSON);\n\n\tconsole.log('clip result features:', ptsWithin.features.length);\n\n\tif (ptsWithin.features.length > 0) {\n\t\ttoastr.clear();\n\t\treturn ptsWithin;\n\t} else {\n\t\ttoastr.clear();\n\t\ttoastr.error('Error', 'No sites to display');\n\t\treturn null;\n\t}\n}\n\nfunction summarizeSites(featureCollection) {\n\n\t//get the first feature and add to map \n\tif (featureCollection.features.length > 0) {\n\n\t\t$.each(featureCollection.features, function (index, value) {\n\n\t\t\tconsole.log(index, value);\n\t\t});\n\t}\n}\n\nfunction filterSites(filterInfo) {\n\n\t//console.log('selected: ', filterInfo);\n\ttoastr.info('Filtering sites...', { timeOut: 0 });\n\n\t//pass in filter info as optional param\n\tdrawGeoJSON(siteGeoJSON); //NEED TO UPDATE THIS IF USING\n\ttoastr.clear();\n}\n\nfunction loadSites() {\n\n\t//reset geo Filter flag\n\tgeoFilterFlag = false;\n\n\tsitesLayer.clearLayers();\n\tsitesGeoJSON = { 'type': 'FeatureCollection', 'features': [] };\n\ttoastr.info('Querying NWIS...', { timeOut: 0 });\n\n\t$.ajax({\n\t\t//url: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata?site_tp_cd=GW&format=sitefile_output&sitefile_output_format=xml&column_name=agency_cd&column_name=site_no&column_name=station_nm&column_name=dec_lat_va&column_name=dec_long_va&column_name=county_cd&column_name=huc_cd&column_name=aqfr_cd&column_name=well_depth_va&inventory_output=0&rdb_inventory_output=file&TZoutput=0&pm_cd_compare=Greater%20than&radio_parm_cds=all_parm_cds&qw_attributes=0&qw_sample_wide=wide&rdb_qw_attributes=0&date_format=YYYY-MM-DD&rdb_compression=file&list_of_search_criteria=site_tp_cd&column_name=site_tp_cd&column_name=dec_lat_va&column_name=dec_long_va&column_name=agency_use_cd'\n\t\turl: './qwdataAll.xml',\n\t\tdataType: 'xml',\n\t\tsuccess: function (xml) {\n\n\t\t\ttoastr.clear();\n\t\t\ttoastr.info('Parsing sites...', { timeOut: 0 });\n\n\t\t\t$(xml).find('site').each(function () {\n\n\t\t\t\t//get properties\n\t\t\t\tvar siteID = $(this).find('site_no').text();\n\t\t\t\tvar siteName = $(this).find('station_nm').text();\n\t\t\t\tvar latDD = $(this).find('dec_lat_va').text();\n\t\t\t\tvar lonDD = $(this).find('dec_long_va').text();\n\t\t\t\tvar agencyCode = $(this).find('agency_cd').text();\n\t\t\t\tvar countyCode = $(this).find('county_cd').text();\n\t\t\t\tvar hucCode = $(this).find('huc_cd').text();\n\t\t\t\tvar aquiferCode = $(this).find('aqfr_cd').text();\n\t\t\t\tvar wellDepth = $(this).find('well_depth_va').text();\n\n\t\t\t\tvar siteGeoJSON = {\n\t\t\t\t\t'type': 'Feature',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'siteID': siteID,\n\t\t\t\t\t\t'siteName': siteName,\n\t\t\t\t\t\t'latDD': latDD,\n\t\t\t\t\t\t'lonDD': lonDD,\n\t\t\t\t\t\t'agencyCode': agencyCode,\n\t\t\t\t\t\t'countyCode': countyCode,\n\t\t\t\t\t\t'hucCode': hucCode,\n\t\t\t\t\t\t'aquiferCode': aquiferCode,\n\t\t\t\t\t\t'wellDepth': wellDepth\n\t\t\t\t\t},\n\t\t\t\t\t'geometry': {\n\t\t\t\t\t\t'type': 'Point',\n\t\t\t\t\t\t'coordinates': [parseFloat(lonDD), parseFloat(latDD)]\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tsitesGeoJSON.features.push(siteGeoJSON);\n\n\t\t\t\t// //add to select dropdown\n\t\t\t\t// $.each(filterGroupList, function(index, filterName) {\n\t\t\t\t// \tif (filterName !== 'WellDepth' && filterName !== 'County') {\n\t\t\t\t// \t\tvar elementName = '#' + filterName + 'Select';\n\t\t\t\t// \t\tvar code;\n\t\t\t\t// \t\tif (filterName === 'HUC') {code = hucCode};\n\t\t\t\t// \t\tif (filterName === 'Aquifer') {code = aquiferCode};\n\t\t\t\t// \t\tif (filterName === 'WellDepth') {code = wellDepth};\n\n\t\t\t\t// \t\t//console.log('here', filterName,code)\n\n\t\t\t\t// \t\t//add it if it doesn't exist\n\t\t\t\t// \t\tif (code && $(elementName + ' option[value=\"' + code + '\"]').length == 0) {\n\t\t\t\t// \t\t\t//console.log('adding an option for:',elementName,code)\n\t\t\t\t// \t\t\t$(elementName).append($('<option></option>').attr('value',code).text(code));\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// });\n\t\t\t});\n\n\t\t\ttoastr.clear();\n\t\t\ttoastr.info('Drawing GeoJSON...', { timeOut: 0 });\n\n\t\t\tdrawGeoJSON(sitesGeoJSON);\n\n\t\t\tconsole.log(sitesGeoJSON.features.length, 'sites loaded');\n\t\t\ttoastr.clear();\n\n\t\t\t//is there a better way to do this?\n\t\t\t$('#sitesPanel').collapse(\"toggle\");\n\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t}\n\t});\n}\n\nfunction loadSites2() {\n\n\t$.getJSON('./siteData.json', function (data) {\n\t\tdrawGeoJSON(data);\n\t});\n}\n\nfunction parseFeatureProperties(properties) {\n\t$.each(properties, function (filterCategory, filterData) {\n\n\t\tvar wellElement = '#' + filterCategory;\n\t\tif (typeof filterData === 'object' && $(wellElement).length == 0) {\n\t\t\t$('#filters').append('<div class=\"well\" id=\"' + filterCategory + '\"><h5>' + filterCategory + '</h5></div>');\n\t\t}\n\n\t\t$.each(filterData, function (filterName, filterItem) {\n\t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t\tconsole.log('here2', filterName, filterItem, elementName, $(elementName).length);\n\t\t\t// if ($(elementName).length == 0) {\n\t\t\t// \tconsole.log(elementName, 'does not exist yet')\n\n\t\t\t// \t//first create the dropdown\n\t\t\t// \t$(wellElement).append('<select class=\"form-control\" id=\"' + filterName + 'Select\"><option selected=\"selected\" value=\"default\">Select a ' + filterName + '</option></select>');\n\n\t\t\t// \t//then append the value\n\t\t\t// \t$(elementName).append($('<option></option>').attr('value',filterItem).text(filterItem));\n\t\t\t// }\n\t\t\t// else {\n\t\t\t// \tconsole.log(elementName, 'EXISTS')\n\n\t\t\t// \t//just append the value\n\t\t\t// \t$(elementName).append($('<option></option>').attr('value',filterItem).text(filterItem));\n\t\t\t// }\n\t\t});\n\t});\n}\n\nfunction addFilterOptions(properties) {\n\t//add county to dropdown\n\tif (properties.countyCode) {\n\t\tif (checkSelectForItem('#CountySelect', properties.countyCode) == false) {\n\t\t\t$('#CountySelect').append($('<option></option>').attr('value', properties.countyCd).text(properties.countyCd));\n\t\t}\n\n\t\t// if (properties.countyCode === 'County') {\n\t\t// \t//from here: https://www.census.gov/geo/reference/codes/cou.html\n\t\t// \t//then converted to json: https://www.csvjson.com/csv2json\n\t\t// \t$.getJSON('./countyCodesNY.json', function(data) {\n\t\t// \t\t$.each(data, function( index, county ) {\n\t\t// \t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t// \t\t\t$(elementName).append($('<option></option>').attr('value',county.CountyCd).text(county.CountyName.replace(' County','')));\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }\n\t}\n}\n\nfunction checkSelectForItem(select, item) {\n\tvar exists = false;\n\t$(select + ' option').each(function () {\n\t\tif (this.value === item) {\n\t\t\texists = true;\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn exists;\n}\n\nfunction createFilterGroups() {\n\t$.each(filterGroupList, function (index, filterName) {\n\n\t\t//only county for now\n\t\tif (filterName === 'County') {\n\t\t\t$('#filters').append('<select class=\"selectpicker NWISselect\" multiple id=\"' + filterName + 'Select\"></select>');\n\n\t\t\t//county is special case so we need a lookup file with codes, other ones get populated in createSites\n\t\t\tif (filterName === 'County') {\n\t\t\t\t//from here: https://www.census.gov/geo/reference/codes/cou.html\n\t\t\t\t//then converted to json: https://www.csvjson.com/csv2json\n\t\t\t\t$.getJSON('./countyCodesNY.json', function (data) {\n\t\t\t\t\t$.each(data, function (index, county) {\n\t\t\t\t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t\t\t\t\t$(elementName).append($('<option></option>').attr('value', county.CountyCd).attr('stateCounty', county.StateCd + county.CountyCd).text(county.CountyName.replace(' County', '')));\n\t\t\t\t\t\t$('.selectpicker').selectpicker('refresh');\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction getQWdata() {\n\t//https://stackoverflow.com/questions/35125036/export-leaflet-map-to-geojson\n\n\ttoastr.info('Getting QW Data...', { timeOut: 0 });\n\n\tvar inputGeoJSON = sitesLayer.toGeoJSON();\n\tvar tempGeoJSON = { 'type': 'FeatureCollection', 'features': [] };\n\n\t//after we get a copy of current filter, clear the display\n\tsitesLayer.clearLayers();\n\n\tif (inputGeoJSON.features.length > 0) {\n\t\tconsole.log('querying NWIS...');\n\n\t\tvar stateCounty = $('#CountySelect :selected').attr('stateCounty');\n\t\tvar paramCodes = $('#parameterCodes').val();\n\t\tvar paramCodesArray = paramCodes.split(',');\n\n\t\tvar params = {\n\t\t\t'site_tp_cd': 'GW',\n\t\t\t'param_cd_operator': '',\n\t\t\t'group_key': 'NONE',\n\t\t\t'sitefile_output_format': 'html_table',\n\t\t\t'column_name': 'agency_cd',\n\t\t\t'column_name': 'site_no',\n\t\t\t'column_name': 'station_nm',\n\t\t\t'inventory_output': 0,\n\t\t\t'rdb_inventory_output': 'file',\n\t\t\t'begin_date': '',\n\t\t\t'end_date': '',\n\t\t\t'TZoutput': 0,\n\t\t\t'pm_cd_va_search': '',\n\t\t\t'pm_cd_compare': 'Greater%20than',\n\t\t\t'pm_cd_result_va': '',\n\t\t\t'radio_parm_cds': 'previous_parm_cds',\n\t\t\t'radio_previous_parm_cds': '',\n\t\t\t'radio_multiple_parm_cds': '',\n\t\t\t'radio_parm_cd_file': '',\n\t\t\t'qw_attributes': 0,\n\t\t\t'format': 'rdb',\n\t\t\t'qw_sample_wide': 'wide',\n\t\t\t'rdb_qw_attributes': 0,\n\t\t\t'date_format': 'YYYY-MM-DD',\n\t\t\t'rdb_compression': 'value'\n\t\t};\n\n\t\t//seperate method if we have a geoFilter\n\t\tif (geoFilterFlag) {\n\t\t\t//var inputFile = 'site_no\\n430138074044601\\n425851074085801\\n425731074172901\\n';\n\n\t\t\tvar inputFile = 'site_no\\n';\n\n\t\t\t//get list of siteIDs and write it out to a string\n\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\t\t\t\tinputFile += feature.properties.siteID + '\\n';\n\t\t\t});\n\n\t\t\t//inputFile = encodeURIComponent(inputFile);\n\n\t\t\t//add method specific params\n\n\t\t\tparams.multiple_parameter_cds = paramCodes ? paramCodes : '00940';\n\t\t\tparams.list_of_search_criteria = 'site_no_file_attachment,multiple_parameter_cds,site_tp_cd';\n\t\t\tparams.site_no_file_attachment = {\n\t\t\t\ttype: 'text/plain',\n\t\t\t\tfilename: 'sites.txt',\n\t\t\t\tcontent: inputFile\n\t\t\t};\n\n\t\t\t// var params = { \n\t\t\t// \t'site_no_file_attachment': {\n\t\t\t// \t\ttype: 'text/plain',\n\t\t\t// \t\tfilename: 'sites.txt',\n\t\t\t// \t\tcontent: inputFile\n\t\t\t// \t},\n\t\t\t// \t'multiple_parameter_cds': (paramCodes ? paramCodes : '00940'),\n\t\t\t// \t'group_key': 'NONE', \n\t\t\t// \t'sitefile_output_format': 'html_table',\n\t\t\t// \t'column_name': 'agency_cd',\n\t\t\t// \t'column_name': 'site_no',\n\t\t\t// \t'column_name': 'station_nm',\n\t\t\t// \t'inventory_output': 0,\n\t\t\t// \t'rdb_inventory_output': 'file',\n\t\t\t// \t'begin_date': '',\n\t\t\t// \t'end_date': '',\n\t\t\t// \t'TZoutput': 0,\n\t\t\t// \t'pm_cd_va_search': '',\n\t\t\t// \t'pm_cd_compare': 'Greater%20than',\n\t\t\t// \t'pm_cd_result_va': '',\n\t\t\t// \t'radio_parm_cds': 'previous_parm_cds',\n\t\t\t// \t'radio_previous_parm_cds': '',\n\t\t\t// \t'param_cd_operator': '',\n\t\t\t// \t'radio_multiple_parm_cds': '',\n\t\t\t// \t'radio_parm_cd_file': '',\n\t\t\t// \t'qw_attributes': 0,\n\t\t\t// \t'format': 'rdb',\n\t\t\t// \t'qw_sample_wide': 'wide',\n\t\t\t// \t'rdb_qw_attributes': 0,\n\t\t\t// \t'date_format': 'YYYY-MM-DD',\n\t\t\t// \t'rdb_compression': 'value',\n\t\t\t// \t'list_of_search_criteria': 'site_no_file_attachment,multiple_parameter_cds'\n\t\t\t// }\n\n\t\t\t//console.log(JSON.stringify(params));\n\n\t\t\tvar boundary = '-----------------------------' + Math.floor(Math.random() * Math.pow(10, 8));\n\n\t\t\tvar content = [];\n\t\t\tfor (var i in params) {\n\t\t\t\tcontent.push('--' + boundary);\n\n\t\t\t\tvar mimeHeader = 'Content-Disposition: form-data; name=\"' + i + '\"; ';\n\t\t\t\tif (params[i].filename) mimeHeader += 'filename=\"' + params[i].filename + '\";';\n\t\t\t\tcontent.push(mimeHeader);\n\n\t\t\t\tif (params[i].type) content.push('Content-Type: ' + params[i].type);\n\n\t\t\t\tcontent.push('');\n\t\t\t\tcontent.push(params[i].content || params[i]);\n\t\t\t};\n\n\t\t\tcontent.push('--' + boundary);\n\n\t\t\t/* Use your favorite toolkit here */\n\t\t\t/* it should still work if you can control headers and POST raw data */\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata',\n\t\t\t\tdata: content.join('\\r\\n'),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data; boundary=' + boundary\n\t\t\t\t},\n\t\t\t\tcache: false,\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tsuccess: function (d) {\n\n\t\t\t\t\tvar qwdata = USGSrdb2JSON(d);\n\t\t\t\t\tconsole.log('got a response:', qwdata.length, 'sites');\n\n\t\t\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\n\t\t\t\t\t\t//create a new feature\n\t\t\t\t\t\tvar siteGeoJSON = feature;\n\t\t\t\t\t\tvar matchFound = false;\n\n\t\t\t\t\t\t//loop over qw results\n\t\t\t\t\t\t$.each(qwdata, function (index, qwSite) {\n\n\t\t\t\t\t\t\t//check for a match\n\t\t\t\t\t\t\tif (feature.properties.siteID === qwSite.site_no) {\n\n\t\t\t\t\t\t\t\t$.each(paramCodesArray, function (index, paramCode) {\n\t\t\t\t\t\t\t\t\tif (qwSite.hasOwnProperty('p' + paramCode)) {\n\t\t\t\t\t\t\t\t\t\tsiteGeoJSON.properties['p' + paramCode + '|' + qwSite.sample_dt + ' ' + qwSite.sample_tm + ' ' + qwSite.sample_start_time_datum_cd + '|' + qwSite.medium_cd] = qwSite['p' + paramCode];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t//console.log(siteGeoJSON.properties);\n\n\t\t\t\t\t\t\t\tmatchFound = true;\n\t\t\t\t\t\t\t\t//console.log('match found:', qwSite);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (matchFound) {\n\t\t\t\t\t\t\ttempGeoJSON.features.push(siteGeoJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tdrawGeoJSON(tempGeoJSON);\n\n\t\t\t\t\tconsole.log(tempGeoJSON.features.length, 'sites loaded');\n\t\t\t\t\ttoastr.clear();\n\n\t\t\t\t\t//is there a better way to do this?\n\t\t\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t\t\t\t$('#exportPanel').collapse(\"toggle\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//otherwise regular paramater request method\n\t\telse {\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t'county_cd': stateCounty ? stateCounty : '',\n\t\t\t\t\t\t'site_tp_cd': 'GW',\n\t\t\t\t\t\t'group_key': 'NONE',\n\t\t\t\t\t\t'sitefile_output_format': 'html_table',\n\t\t\t\t\t\t'column_name': 'agency_cd',\n\t\t\t\t\t\t'column_name': 'site_no',\n\t\t\t\t\t\t'column_name': 'station_nm',\n\t\t\t\t\t\t'inventory_output': 0,\n\t\t\t\t\t\t'rdb_inventory_output': 'file',\n\t\t\t\t\t\t'TZoutput': 0,\n\t\t\t\t\t\t'pm_cd_compare': 'Greater%20than',\n\t\t\t\t\t\t'radio_parm_cds': 'parm_cd_list',\n\t\t\t\t\t\t'radio_multiple_parm_cds': paramCodes ? paramCodes : '00940',\n\t\t\t\t\t\t'qw_attributes': 0,\n\t\t\t\t\t\t'format': 'rdb',\n\t\t\t\t\t\t'qw_sample_wide': 'wide',\n\t\t\t\t\t\t'rdb_qw_attributes': 0,\n\t\t\t\t\t\t'date_format': 'YYYY-MM-DD',\n\t\t\t\t\t\t'rdb_compression': 'YYYY-MM-DD',\n\t\t\t\t\t\t'list_of_search_criteria': 'site_tp_cd'\n\t\t\t\t\t},\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tsuccess: function (d) {\n\n\t\t\t\t\t\tvar qwdata = USGSrdb2JSON(d);\n\t\t\t\t\t\tconsole.log('got a response:', qwdata.length, 'sites');\n\n\t\t\t\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\n\t\t\t\t\t\t\t//create a new feature\n\t\t\t\t\t\t\tvar siteGeoJSON = feature;\n\t\t\t\t\t\t\tvar matchFound = false;\n\n\t\t\t\t\t\t\t//loop over qw results\n\t\t\t\t\t\t\t$.each(qwdata, function (index, qwSite) {\n\n\t\t\t\t\t\t\t\t//check for a match\n\t\t\t\t\t\t\t\tif (feature.properties.siteID === qwSite.site_no) {\n\n\t\t\t\t\t\t\t\t\t$.each(paramCodesArray, function (index, paramCode) {\n\t\t\t\t\t\t\t\t\t\tif (qwSite.hasOwnProperty('p' + paramCode)) {\n\t\t\t\t\t\t\t\t\t\t\tsiteGeoJSON.properties['p' + paramCode + '|' + qwSite.sample_dt + ' ' + qwSite.sample_tm + ' ' + qwSite.sample_start_time_datum_cd + '|' + qwSite.medium_cd] = qwSite['p' + paramCode];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//console.log(siteGeoJSON.properties);\n\n\t\t\t\t\t\t\t\t\tmatchFound = true;\n\t\t\t\t\t\t\t\t\t//console.log('match found:', qwSite);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (matchFound) {\n\t\t\t\t\t\t\t\ttempGeoJSON.features.push(siteGeoJSON);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdrawGeoJSON(tempGeoJSON);\n\n\t\t\t\t\t\tconsole.log(tempGeoJSON.features.length, 'sites loaded');\n\t\t\t\t\t\ttoastr.clear();\n\n\t\t\t\t\t\t//is there a better way to do this?\n\t\t\t\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t\t\t\t\t$('#exportPanel').collapse(\"toggle\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t} else {\n\t\ttoastr.error('Error', 'No sites to display');\n\t}\n}\n\nfunction jsonToTable(json) {\n\n\tvar table = $('<table border=1>');\n\tvar tblHeader = '<tr>';\n\tfor (var k in json[0]) tblHeader += '<th>' + k + '</th>';\n\ttblHeader += '</tr>';\n\t$(tblHeader).appendTo(table);\n\t$.each(json, function (index, value) {\n\t\tvar TableRow = '<tr>';\n\t\t$.each(value, function (key, val) {\n\t\t\tTableRow += '<td>' + val + '</td>';\n\t\t});\n\t\tTableRow += '</tr>';\n\t\t$(table).append(TableRow);\n\t});\n\treturn $(table);\n};\n\nfunction downloadGeoJSON() {\n\n\t//for some reason the leaflet toGeoJSON wraps the geojson in a second feature collection\n\tif (sitesLayer.toGeoJSON().features[0]) {\n\t\tvar GeoJSON = JSON.stringify(sitesLayer.toGeoJSON().features[0]);\n\t\tvar filename = 'data.geojson';\n\t\tdownloadFile(GeoJSON, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export');\n\t}\n}\n\nfunction downloadKML() {\n\t//https://github.com/mapbox/tokml\n\t//https://gis.stackexchange.com/questions/159344/export-to-kml-option-using-leaflet\n\tif (sitesLayer.toGeoJSON().features[0]) {\n\t\tvar GeoJSON = sitesLayer.toGeoJSON().features[0];\n\t\tvar kml = tokml(GeoJSON);\n\t\tvar filename = 'data.kml';\n\t\tdownloadFile(kml, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export');\n\t}\n}\n\nfunction downloadFile(data, filename) {\n\tvar blob = new Blob([data], { type: 'text/csv;charset=utf-8;' });\n\tif (navigator.msSaveBlob) {\n\t\t// IE 10+\n\t\tnavigator.msSaveBlob(blob, filename);\n\t} else {\n\t\tvar link = document.createElement('a');\n\t\tvar url = URL.createObjectURL(blob);\n\t\tif (link.download !== undefined) {\n\t\t\t// feature detection\n\t\t\t// Browsers that support HTML5 download attribute\n\t\t\tlink.setAttribute('href', url);\n\t\t\tlink.setAttribute('download', filename);\n\t\t\tlink.style.visibility = 'hidden';\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t} else {\n\t\t\twindow.open(url);\n\t\t}\n\t}\n}\n\nfunction USGSrdb2JSON(tsv) {\n\n\tvar lines = tsv.split(/\\r?\\n/);\n\tvar result = [];\n\tvar headers;\n\n\t$.each(lines, function (index, line) {\n\t\tvar obj = {};\n\t\tif (line[0] != '#') {\n\t\t\tvar currentline = line.split('\\t');\n\n\t\t\tif (currentline[0] === 'agency_cd') {\n\t\t\t\theaders = currentline;\n\t\t\t}\n\t\t\tif (currentline[0] !== '5s' && currentline[0] !== 'agency_cd') {\n\t\t\t\t//console.log(currentline)\n\n\t\t\t\tfor (var j = 0; j < headers.length; j++) {\n\t\t\t\t\tobj[headers[j]] = currentline[j];\n\t\t\t\t}\n\n\t\t\t\tresult.push(obj);\n\t\t\t}\n\t\t}\n\t});\n\n\t//return result; //JavaScript object\n\treturn result; //JSON\n}\n\nfunction setBasemap(baseMap) {\n\n\tswitch (baseMap) {\n\t\tcase 'Streets':\n\t\t\tbaseMap = 'Streets';break;\n\t\tcase 'Satellite':\n\t\t\tbaseMap = 'Imagery';break;\n\t\tcase 'Topo':\n\t\t\tbaseMap = 'Topographic';break;\n\t\tcase 'Terrain':\n\t\t\tbaseMap = 'Terrain';break;\n\t\tcase 'Gray':\n\t\t\tbaseMap = 'Gray';break;\n\t\tcase 'NatGeo':\n\t\t\tbaseMap = 'NationalGeographic';break;\n\t}\n\n\tif (baseMapLayer) map.removeLayer(baseMapLayer);\n\tbaseMapLayer = __webpack_provided_L_dot_esri.basemapLayer(baseMap);\n\tmap.addLayer(baseMapLayer);\n\tif (basemapLayerLabels) map.removeLayer(basemapLayerLabels);\n\tif (baseMap === 'Gray' || baseMap === 'Imagery' || baseMap === 'Terrain') {\n\t\tbasemapLayerLabels = __webpack_provided_L_dot_esri.basemapLayer(baseMap + 'Labels');\n\t\tmap.addLayer(basemapLayerLabels);\n\t}\n}\n\nfunction resetView() {\n\n\t//reset geo Filter flag\n\tgeoFilterFlag = false;\n\n\t//clear any selection graphics\n\tsitesLayer.clearLayers();\n\n\t//reset view\n\tmap.setView([MapY, MapX], 7);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(4), __webpack_require__(6), __webpack_require__(10)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9hcHAuanM/ODNiMyJdLCJuYW1lcyI6WyJNYXBYIiwiTWFwWSIsIm1hcCIsInNpdGVzR2VvSlNPTiIsInNpdGVzTGF5ZXIiLCJiYXNlTWFwTGF5ZXIiLCJiYXNlbWFwTGF5ZXJMYWJlbHMiLCJmaWx0ZXJHcm91cExpc3QiLCJnZW9qc29uTWFya2VyT3B0aW9ucyIsInJhZGl1cyIsImZpbGxDb2xvciIsImNvbG9yIiwid2VpZ2h0Iiwib3BhY2l0eSIsImZpbGxPcGFjaXR5IiwiZ2VvRmlsdGVyRmxhZyIsInBhcmVudEFycmF5IiwibGF5ZXJMaXN0IiwibGF5ZXJJRCIsImxheWVyTmFtZSIsIm91dEZpZWxkcyIsImRyb3BEb3duSUQiLCJhbGxMYXllcnMiLCJ0b2FzdHIiLCJvcHRpb25zIiwicmVxdWlyZSIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwiY29uc29sZSIsImxvZyIsImh0bWwiLCJMIiwiem9vbUNvbnRyb2wiLCJjb250cm9sIiwiem9vbSIsInBvc2l0aW9uIiwiYWRkVG8iLCJzY2FsZSIsImxheWVyIiwidGlsZUxheWVyIiwiYXR0cmlidXRpb24iLCJtYXhab29tIiwic2V0VmlldyIsImZlYXR1cmVHcm91cCIsInBhcnNlQmFzZUxheWVycyIsImxvYWRTaXRlcyIsImNsaWNrIiwidG9nZ2xlQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiYmFzZU1hcCIsImlkIiwicmVwbGFjZSIsInNldEJhc2VtYXAiLCJyZXNldFZpZXciLCJyZXNldEZpbHRlcnMiLCJtb2RhbCIsImdldFFXZGF0YSIsImRvd25sb2FkR2VvSlNPTiIsImRvd25sb2FkS01MIiwib24iLCJzZWxlY3ROYW1lIiwicGFyZW50IiwiYXR0ciIsIm9wdGlvbk5hbWUiLCJ0ZXh0Iiwib3B0aW9uVmFsdWUiLCJmaWx0ZXJJbmZvIiwiZmlsdGVyU2l0ZXMiLCJldmVudCIsImNsaWNrZWRJbmRleCIsIm5ld1ZhbHVlIiwib2xkVmFsdWUiLCJ0YXJnZXQiLCJwYXJlbnRTZWxlY3RJRCIsInNlbGVjdEFycmF5IiwiZmluZCIsInNpbmdsZVNlbGVjdENvdW50IiwibGVuZ3RoIiwiY3VycmVudFNlbGVjdGVkIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwidmFsdWUiLCJuYW1lIiwiZWFjaCIsInB1c2giLCJpbmZvIiwicXVlcnkiLCJnZXQiLCJqb2luIiwibWFwU2VydmVyIiwicmV0dXJuR2VvbWV0cnkiLCJ3aGVyZSIsInJ1biIsImVycm9yIiwiY2xpcFBvbHlnb25HZW9KU09OIiwiZmVhdHVyZXMiLCJpbnB1dFNpdGVzR2VvSlNPTiIsInRvR2VvSlNPTiIsInB0c1dpdGhpbiIsImNsaXBTaXRlcyIsImRyYXdHZW9KU09OIiwicHJvcCIsInNlbGVjdHBpY2tlciIsImdlb0pTT04iLCJjbGVhckxheWVycyIsImdlb0pTT05sYXllciIsImdlb0pzb24iLCJwb2ludFRvTGF5ZXIiLCJmZWF0dXJlIiwibGF0bG5nIiwiY2lyY2xlTWFya2VyIiwib25FYWNoRmVhdHVyZSIsIiRwb3B1cENvbnRlbnQiLCJwcm9wZXJ0aWVzIiwicHJvcGVydHkiLCJhcHBlbmQiLCJiaW5kUG9wdXAiLCJhZGRMYXllciIsImZpdEJvdW5kcyIsImdldEJvdW5kcyIsImdyb3VwIiwiZ3JvdXBIZWFkaW5nIiwibGF5ZXJzIiwibWFwU2VydmVyTmFtZSIsIm1hcFNlcnZlckRldGFpbHMiLCJ3aW1PcHRpb25zIiwibGF5ZXJUeXBlIiwiZHluYW1pY01hcExheWVyIiwic2V0dXBHZW9GaWx0ZXJzIiwiZmVhdHVyZUNvbGxlY3Rpb24iLCJpIiwidmFsIiwic29ydCIsImEiLCJiIiwibWVzc2FnZSIsImlucHV0R2VvSlNPTiIsInBvbHlHZW9KU09OIiwidGltZU91dCIsIndpdGhpbiIsImNsZWFyIiwic3VtbWFyaXplU2l0ZXMiLCJzaXRlR2VvSlNPTiIsImFqYXgiLCJ1cmwiLCJkYXRhVHlwZSIsInN1Y2Nlc3MiLCJ4bWwiLCJzaXRlSUQiLCJzaXRlTmFtZSIsImxhdEREIiwibG9uREQiLCJhZ2VuY3lDb2RlIiwiY291bnR5Q29kZSIsImh1Y0NvZGUiLCJhcXVpZmVyQ29kZSIsIndlbGxEZXB0aCIsInBhcnNlRmxvYXQiLCJjb2xsYXBzZSIsImxvYWRTaXRlczIiLCJnZXRKU09OIiwiZGF0YSIsInBhcnNlRmVhdHVyZVByb3BlcnRpZXMiLCJmaWx0ZXJDYXRlZ29yeSIsImZpbHRlckRhdGEiLCJ3ZWxsRWxlbWVudCIsImZpbHRlck5hbWUiLCJmaWx0ZXJJdGVtIiwiZWxlbWVudE5hbWUiLCJhZGRGaWx0ZXJPcHRpb25zIiwiY2hlY2tTZWxlY3RGb3JJdGVtIiwiY291bnR5Q2QiLCJzZWxlY3QiLCJpdGVtIiwiZXhpc3RzIiwiY3JlYXRlRmlsdGVyR3JvdXBzIiwiY291bnR5IiwiQ291bnR5Q2QiLCJTdGF0ZUNkIiwiQ291bnR5TmFtZSIsInRlbXBHZW9KU09OIiwic3RhdGVDb3VudHkiLCJwYXJhbUNvZGVzIiwicGFyYW1Db2Rlc0FycmF5Iiwic3BsaXQiLCJwYXJhbXMiLCJpbnB1dEZpbGUiLCJtdWx0aXBsZV9wYXJhbWV0ZXJfY2RzIiwibGlzdF9vZl9zZWFyY2hfY3JpdGVyaWEiLCJzaXRlX25vX2ZpbGVfYXR0YWNobWVudCIsInR5cGUiLCJmaWxlbmFtZSIsImNvbnRlbnQiLCJib3VuZGFyeSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInBvdyIsIm1pbWVIZWFkZXIiLCJoZWFkZXJzIiwiY2FjaGUiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiZCIsInF3ZGF0YSIsIlVTR1NyZGIySlNPTiIsIm1hdGNoRm91bmQiLCJxd1NpdGUiLCJzaXRlX25vIiwicGFyYW1Db2RlIiwiaGFzT3duUHJvcGVydHkiLCJzYW1wbGVfZHQiLCJzYW1wbGVfdG0iLCJzYW1wbGVfc3RhcnRfdGltZV9kYXR1bV9jZCIsIm1lZGl1bV9jZCIsImpzb25Ub1RhYmxlIiwianNvbiIsInRhYmxlIiwidGJsSGVhZGVyIiwiayIsImFwcGVuZFRvIiwiVGFibGVSb3ciLCJrZXkiLCJHZW9KU09OIiwiSlNPTiIsInN0cmluZ2lmeSIsImRvd25sb2FkRmlsZSIsImttbCIsInRva21sIiwiYmxvYiIsIkJsb2IiLCJuYXZpZ2F0b3IiLCJtc1NhdmVCbG9iIiwibGluayIsImNyZWF0ZUVsZW1lbnQiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJkb3dubG9hZCIsInVuZGVmaW5lZCIsInNldEF0dHJpYnV0ZSIsInN0eWxlIiwidmlzaWJpbGl0eSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInJlbW92ZUNoaWxkIiwid2luZG93Iiwib3BlbiIsInRzdiIsImxpbmVzIiwicmVzdWx0IiwibGluZSIsIm9iaiIsImN1cnJlbnRsaW5lIiwiaiIsInJlbW92ZUxheWVyIiwiYmFzZW1hcExheWVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLElBQUlBLE9BQU8sT0FBWDtBQUNBLElBQUlDLE9BQU8sTUFBWDtBQUNBLElBQUlDLEdBQUo7QUFDQSxJQUFJQyxZQUFKLEMsQ0FBbUI7QUFDbkIsSUFBSUMsVUFBSixDLENBQWlCO0FBQ2pCLElBQUlDLFlBQUosRUFBa0JDLGtCQUFsQjtBQUNBLElBQUlDLGtCQUFrQixDQUFDLFFBQUQsRUFBVSxLQUFWLEVBQWlCLFNBQWpCLEVBQTRCLFdBQTVCLENBQXRCO0FBQ0EsSUFBSUMsdUJBQXVCO0FBQzFCQyxTQUFRLENBRGtCO0FBRTFCQyxZQUFXLFNBRmU7QUFHMUJDLFFBQU8sTUFIbUI7QUFJMUJDLFNBQVEsQ0FKa0I7QUFLMUJDLFVBQVMsQ0FMaUI7QUFNMUJDLGNBQWE7QUFOYSxDQUEzQjtBQVFBLElBQUlDLGFBQUo7QUFDQSxJQUFJQyxjQUFjLEVBQWxCOztBQUVBLElBQUlDLFlBQVksQ0FDZixFQUFDQyxTQUFTLEdBQVYsRUFBZUMsV0FBVyxxQkFBMUIsRUFBaURDLFdBQVcsQ0FBQyxTQUFELEVBQVcsS0FBWCxDQUE1RCxFQUE4RUMsWUFBWSxZQUExRixFQURlLEVBRWYsRUFBQ0gsU0FB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OztBQUU1QixTQUFRQSxPQUFSO0FBQ0MsT0FBSyxTQUFMO0FBQWdCQSxhQUFVLFNBQVYsQ0FBcUI7QUFDckMsT0FBSyxXQUFMO0FBQWtCQSxhQUFVLFNBQVYsQ0FBcUI7QUFDdkMsT0FBSyxNQUFMO0FBQWFBLGFBQVUsYUFBVixDQUF5QjtBQUN0QyxPQUFLLFNBQUw7QUFBZ0JBLGFBQVUsU0FBVixDQUFxQjtBQUNyQyxPQUFLLE1BQUw7QUFBYUEsYUFBVSxNQUFWLENBQWtCO0FBQy9CLE9BQUssUUFBTDtBQUFlQSxhQUFVLG9CQUFWLENBQWdDO0FBTmhEOztBQVNBLEtBQUk5QyxZQUFKLEVBQW1CSCxJQUFJK1AsV0FBSixDQUFnQjVQLFlBQWhCO0FBQ25CQSxnQkFBZSw4QkFBTzZQLFlBQVAsQ0FBb0IvTSxPQUFwQixDQUFmO0FBQ0FqRCxLQUFJc0gsUUFBSixDQUFhbkgsWUFBYjtBQUNBLEtBQUlDLGtCQUFKLEVBQXdCSixJQUFJK1AsV0FBSixDQUFnQjNQLGtCQUFoQjtBQUN4QixLQUFJNkMsWUFBWSxNQUFaLElBQXNCQSxZQUFZLFNBQWxDLElBQStDQSxZQUFZLFNBQS9ELEVBQTBFO0FBQ3pFN0MsdUJBQXFCLDhCQUFPNFAsWUFBUCxDQUFvQi9NLFVBQVUsUUFBOUIsQ0FBckI7QUFDQWpELE1BQUlzSCxRQUFKLENBQWFsSCxrQkFBYjtBQUNBO0FBQ0Q7O0FBRUQsU0FBU2lELFNBQVQsR0FBcUI7O0FBRXBCO0FBQ0F4QyxpQkFBZ0IsS0FBaEI7O0FBRUE7QUFDQVgsWUFBV3VHLFdBQVg7O0FBRUE7QUFDQXpHLEtBQUl5QyxPQUFKLENBQVksQ0FBQzFDLElBQUQsRUFBT0QsSUFBUCxDQUFaLEVBQTBCLENBQTFCO0FBQ0EsQyIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAtLS0tLSBOWSBRVyBNYXBwZXIgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIGNvcHlyaWdodDogICAyMDE2IE1hcnR5biBTbWl0aCAtIFVTR1MgTlkgV1NDXG5cbi8vIGF1dGhvcnM6ICBNYXJ0eW4gSi4gU21pdGggLSBVU0dTIE5ZIFdTQ1xuXG4vLyBwdXJwb3NlOiAgV2ViIE1hcHBpbmcgaW50ZXJmYWNlIGZvciBOWSBRVyBkYXRhXG5cbi8vIHVwZGF0ZXM6XG4vLyAxMi4wMi4yMDE2IG1qcyAtIENyZWF0ZWRcblxuLy9jb25maWcgdmFyaWFibGVzXG52YXIgTWFwWCA9ICctNzYuMic7XG52YXIgTWFwWSA9ICc0Mi43JztcbnZhciBtYXA7XG52YXIgc2l0ZXNHZW9KU09OOyAgLy9tYXN0ZXIgZ2VvSlNPTiBvYmplY3Qgb2YgdW5pdmVyc2Ugb2Ygc2l0ZXNHZW9KU09OXG52YXIgc2l0ZXNMYXllcjsgIC8vbGVhZmxldCBmZWF0dXJlIGdyb3VwIHJlcHJlc2VudGluZyBjdXJyZW50IGZpbHRlcmVkIHNldCBvZiBzaXRlc1xudmFyIGJhc2VNYXBMYXllciwgYmFzZW1hcExheWVyTGFiZWxzO1xudmFyIGZpbHRlckdyb3VwTGlzdCA9IFsnQ291bnR5JywnSFVDJywgJ0FxdWlmZXInLCAnV2VsbERlcHRoJ107XG52YXIgZ2VvanNvbk1hcmtlck9wdGlvbnMgPSB7XG5cdHJhZGl1czogNCxcblx0ZmlsbENvbG9yOiAnI2ZmNzgwMCcsXG5cdGNvbG9yOiAnIzAwMCcsXG5cdHdlaWdodDogMSxcblx0b3BhY2l0eTogMSxcblx0ZmlsbE9wYWNpdHk6IDAuOFxufTtcbnZhciBnZW9GaWx0ZXJGbGFnO1xudmFyIHBhcmVudEFycmF5ID0gW107XG5cbnZhciBsYXllckxpc3QgPSBbXG5cdHtsYXllcklEOiBcIjFcIiwgbGF5ZXJOYW1lOiBcIk5ZIFdTQyBTdWItZGlzdHJpY3RcIiwgb3V0RmllbGRzOiBbXCJzdWJkaXN0XCIsXCJGSURcIl0sZHJvcERvd25JRDogXCJXU0NzdWJEaXN0XCJ9LFxuXHR7bGF5ZXJJRDogXCIyXCIsIGxheWVyTmFtZTogXCJTZW5hdGUgRGlzdHJpY3RcIiwgb3V0RmllbGRzOiBbXCJOQU1FTFNBRFwiLFwiRklEXCIsXCJSZXBfTmFtZVwiXSxkcm9wRG93bklEOiBcIlNlbmF0ZURpc3RcIn0sXG5cdHtsYXllcklEOiBcIjNcIiwgbGF5ZXJOYW1lOiBcIkFzc2VtYmx5IERpc3RyaWN0XCIsIG91dEZpZWxkczogW1wiTkFNRUxTQURcIixcIkZJRFwiLFwiQURfTmFtZVwiXSwgZHJvcERvd25JRDogXCJBc3NlbURpc3RcIn0sXG5cdHtsYXllcklEOiBcIjRcIiwgbGF5ZXJOYW1lOiBcIkNvbmdyZXNzaW9uYWwgRGlzdHJpY3RcIixcdG91dEZpZWxkczogW1wiTkFNRUxTQURcIixcIkZJRFwiLFwiQ0RfTmFtZVwiXSwgZHJvcERvd25JRDogXCJDb25nRGlzdFwifSxcblx0e2xheWVySUQ6IFwiNVwiLCBsYXllck5hbWU6IFwiQ291bnR5XCIsXHRvdXRGaWVsZHM6IFtcIkNvdW50eV9OYW1cIixcIkZJRFwiXSxkcm9wRG93bklEOiBcIkNvdW50eVwifSxcblx0e2xheWVySUQ6IFwiNlwiLCBsYXllck5hbWU6IFwiSHlkcm9sb2dpYyBVbml0XCIsXHRvdXRGaWVsZHM6IFtcIkhVQ184XCIsXCJGSURcIixcIkhVXzhfTmFtZVwiXSxcdGRyb3BEb3duSUQ6IFwiSFVDOFwifVx0XG5dO1xuXG52YXIgYWxsTGF5ZXJzID0gW1xuICAgIHtcbiAgICAgICAgXCJncm91cEhlYWRpbmdcIjogXCJGaWx0ZXJzXCIsXG4gICAgICAgIFwic2hvd0dyb3VwSGVhZGluZ1wiOiB0cnVlLFxuICAgICAgICBcImluY2x1ZGVJbkxheWVyTGlzdFwiOiB0cnVlLFxuICAgICAgICBcImxheWVyc1wiOiB7XG5cdFx0XHRcIlVTR1MgU3ViLWRpc3RyaWN0XCIgOiB7XG4gICAgICAgICAgICAgICAgXCJ1cmxcIjogXCJodHRwczovL3d3dy5zY2llbmNlYmFzZS5nb3YvYXJjZ2lzL3Jlc3Qvc2VydmljZXMvQ2F0YWxvZy81NmJhNjNiYWU0YjA4ZDYxN2Y2NDkwZDIvTWFwU2VydmVyXCIsXG5cdFx0XHRcdFwibGF5ZXJzXCI6IFsxLDIsMyw0LDUsNl0sIFxuXHRcdFx0XHRcInZpc2libGVcIjogZmFsc2UsIFxuXHRcdFx0XHRcIm9wYWNpdHlcIjogMC44LFxuICAgICAgICAgICAgICAgIFwid2ltT3B0aW9uc1wiOiB7XG4gICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcImxheWVyXCIsXG4gICAgICAgICAgICAgICAgICAgIFwibGF5ZXJUeXBlXCI6IFwiYWdpc0R5bmFtaWNcIixcbiAgICAgICAgICAgICAgICAgICAgXCJpbmNsdWRlSW5MYXllckxpc3RcIjogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbl07XG5cbnRvYXN0ci5vcHRpb25zID0ge1xuICAncG9zaXRpb25DbGFzcyc6ICd0b2FzdC1ib3R0b20tcmlnaHQnLFxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICByZXF1aXJlKCcuLi9pbmRleC5odG1sJyk7XG59XG5cbi8vaW5zdGFudGlhdGUgbWFwXG4kKCBkb2N1bWVudCApLnJlYWR5KGZ1bmN0aW9uKCkge1xuXHRjb25zb2xlLmxvZygnQXBwbGljYXRpb24gSW5mb3JtYXRpb246ICcgKyBwcm9jZXNzLmVudi5OT0RFX0VOViArICcgJyArICd2ZXJzaW9uICcgKyBWRVJTSU9OKTtcblx0JCgnI2FwcFZlcnNpb24nKS5odG1sKCdBcHBsaWNhdGlvbiBJbmZvcm1hdGlvbjogJyArIHByb2Nlc3MuZW52Lk5PREVfRU5WICsgJyAnICsgJ3ZlcnNpb24gJyArIFZFUlNJT04pO1xuXG5cdC8vY3JlYXRlIG1hcFxuXHRtYXAgPSBMLm1hcCgnbWFwRGl2Jyx7em9vbUNvbnRyb2w6IGZhbHNlfSk7XG5cblx0Ly9hZGQgem9vbSBjb250cm9sIHdpdGggeW91ciBvcHRpb25zXG5cdEwuY29udHJvbC56b29tKHtwb3NpdGlvbjondG9wcmlnaHQnfSkuYWRkVG8obWFwKTsgIFxuXHRMLmNvbnRyb2wuc2NhbGUoKS5hZGRUbyhtYXApO1xuXG5cdC8vYmFzZW1hcFxuXHRsYXllcj0gTC50aWxlTGF5ZXIoJ2h0dHBzOi8vc2VydmVyLmFyY2dpc29ubGluZS5jb20vQXJjR0lTL3Jlc3Qvc2VydmljZXMvQ2FudmFzL1dvcmxkX0xpZ2h0X0dyYXlfQmFzZS9NYXBTZXJ2ZXIvdGlsZS97en0ve3l9L3t4fScsIHtcblx0XHRhdHRyaWJ1dGlvbjogJ1RpbGVzICZjb3B5OyBFc3JpICZtZGFzaDsgRXNyaSwgRGVMb3JtZSwgTkFWVEVRJyxcblx0XHRtYXhab29tOiAxNlxuXHR9KS5hZGRUbyhtYXApO1xuXG5cdC8vc2V0IGluaXRpYWwgdmlld1xuXHRtYXAuc2V0VmlldyhbTWFwWSwgTWFwWF0sIDcpO1xuXHRcdFxuXHQvL2RlZmluZSBsYXllcnNcblx0c2l0ZXNMYXllciA9IEwuZmVhdHVyZUdyb3VwKCkuYWRkVG8obWFwKTtcblxuXHQvL2NyZWF0ZUZpbHRlckdyb3VwcygpO1xuXHRwYXJzZUJhc2VMYXllcnMoKTtcblx0bG9hZFNpdGVzKCk7XG5cdFxuXHQvKiAgU1RBUlQgRVZFTlQgSEFORExFUlMgKi9cblx0JCgnI21vYmlsZS1tYWluLW1lbnUnKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHQkKCdib2R5JykudG9nZ2xlQ2xhc3MoJ2lzT3Blbk1lbnUnKTtcblx0fSk7XG5cblx0JCgnLmJhc2VtYXBCdG4nKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHQkKCcuYmFzZW1hcEJ0bicpLnJlbW92ZUNsYXNzKCdzbGljay1idG4tc2VsZWN0aW9uJyk7XG5cdFx0JCh0aGlzKS5hZGRDbGFzcygnc2xpY2stYnRuLXNlbGVjdGlvbicpO1xuXHRcdHZhciBiYXNlTWFwID0gdGhpcy5pZC5yZXBsYWNlKCdidG4nLCcnKTtcblx0XHRzZXRCYXNlbWFwKGJhc2VNYXApO1xuXHR9KTtcblxuXHQkKCcjbG9hZFNpdGVzJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cdFx0bG9hZFNpdGVzKCk7XG5cdH0pO1xuXG5cdCQoJyNyZXNldFZpZXcnKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHRyZXNldFZpZXcoKTtcblx0fSk7XG5cblx0JCgnI3Jlc2V0RmlsdGVycycpLmNsaWNrKGZ1bmN0aW9uKCkge1xuXHRcdHJlc2V0RmlsdGVycygpO1xuXHR9KTtcblxuXG5cdCQoJyNhYm91dEJ1dHRvbicpLmNsaWNrKGZ1bmN0aW9uKCkge1xuXHRcdCQoJyNhYm91dE1vZGFsJykubW9kYWwoJ3Nob3cnKTtcblx0fSk7XHRcblxuXHQkKCcjZ2V0UVdkYXRhJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cdFx0Z2V0UVdkYXRhKCk7XG5cdH0pO1x0XG5cblx0JCgnI2V4cG9ydEdlb0pTT04nKS5jbGljayhmdW5jdGlvbigpIHtcblx0XHRkb3dubG9hZEdlb0pTT04oKTtcblx0fSk7XHRcblxuXHQkKCcjZXhwb3J0S01MJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cdFx0ZG93bmxvYWRLTUwoKTtcblx0fSk7XHRcblxuXHQkKCcuTldJU3NlbGVjdCcpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgc2VsZWN0TmFtZSA9ICQoJ29wdGlvbjpzZWxlY3RlZCcsdGhpcykucGFyZW50KCkuYXR0cignaWQnKTtcblx0XHR2YXIgb3B0aW9uTmFtZSA9ICQoJ29wdGlvbjpzZWxlY3RlZCcsdGhpcykudGV4dCgpO1xuXHRcdHZhciBvcHRpb25WYWx1ZSA9ICQoJ29wdGlvbjpzZWxlY3RlZCcsdGhpcykuYXR0cigndmFsdWUnKTtcblx0XHR2YXIgZmlsdGVySW5mbyA9IHtzZWxlY3ROYW1lOnNlbGVjdE5hbWUsIG9wdGlvbk5hbWU6b3B0aW9uTmFtZSwgb3B0aW9uVmFsdWU6b3B0aW9uVmFsdWV9O1x0XG5cdFx0ZmlsdGVyU2l0ZXMoZmlsdGVySW5mbyk7XG5cdH0pO1xuXG5cdCQoJyNnZW9GaWx0ZXJTZWxlY3QnKS5vbignY2hhbmdlZC5icy5zZWxlY3QnLCBmdW5jdGlvbiAoZXZlbnQsIGNsaWNrZWRJbmRleCwgbmV3VmFsdWUsIG9sZFZhbHVlKSB7XG5cdFx0Y29uc29sZS5sb2coJ3Rlc3RpbmcgaWYgdGhpcyB3b3JrcycsZXZlbnQudGFyZ2V0LCBjbGlja2VkSW5kZXgsIG5ld1ZhbHVlLCBvbGRWYWx1ZSk7XG5cblx0XHR2YXIgcGFyZW50U2VsZWN0SUQgPSAkKGV2ZW50LnRhcmdldCkuYXR0cignaWQnKTtcblx0XHR2YXIgc2VsZWN0QXJyYXkgPSAkKGV2ZW50LnRhcmdldCkuZmluZChcIm9wdGlvbjpzZWxlY3RlZFwiKTtcblx0XHR2YXIgc2luZ2xlU2VsZWN0Q291bnQgPSBzZWxlY3RBcnJheS5sZW5ndGg7XG5cdFx0dmFyIGN1cnJlbnRTZWxlY3RlZCA9ICQoZXZlbnQudGFyZ2V0KS5maW5kKFwib3B0aW9uXCIpW2NsaWNrZWRJbmRleF07XG5cblx0XHRjb25zb2xlLmxvZygnY3VycmVudCBzZWxlY3RlZDogJywgY3VycmVudFNlbGVjdGVkLCBwYXJlbnRTZWxlY3RJRCApXG5cblx0XHRpZiAoc2VsZWN0QXJyYXkubGVuZ3RoID09IDApIHtcblx0XHRcdGNvbnNvbGUubG9nKCdoZXJlJyxwYXJlbnRTZWxlY3RJRCxwYXJlbnRBcnJheSlcblx0XHRcdHZhciBpbmRleCA9IHBhcmVudEFycmF5LmluZGV4T2YocGFyZW50U2VsZWN0SUQpO1xuXHRcdFx0aWYgKGluZGV4ID4gLTEpIHtcblx0XHRcdFx0cGFyZW50QXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvL2lmIG9wZXJhdGlvbiBpcyBhIGRlc2VsZWN0LCBnZXQgcmVtYWluaW5nIHNlbGVjdGVkIG9wdGlvbnNcblx0XHRpZiAobmV3VmFsdWUgPT0gZmFsc2UpIHtcblx0XHRcdHZhciBsYXllcklEID0gJCh0aGlzKS5maW5kKFwib3B0aW9uOnNlbGVjdGVkXCIpLmF0dHIoJ2xheWVySUQnKTtcblx0XHRcdHZhciB2YWx1ZSA9ICQodGhpcykuZmluZChcIm9wdGlvbjpzZWxlY3RlZFwiKS5hdHRyKCd2YWx1ZScpO1xuXHRcdFx0dmFyIG5hbWUgPSAkKGV2ZW50LnRhcmdldCkuZmluZChcIm9wdGlvbjpzZWxlY3RlZFwiKS50ZXh0KCk7XG5cdFx0fVxuXG5cdFx0Ly9vdGhlcndpc2UgbWFrZSBhIG5ldyBzZWxlY3Rpb25cblx0XHRlbHNlIHtcblx0XHRcdHZhciBsYXllcklEID0gJChjdXJyZW50U2VsZWN0ZWQpLmF0dHIoJ2xheWVySUQnKTtcblx0XHRcdHZhciB2YWx1ZSA9ICQoY3VycmVudFNlbGVjdGVkKS5hdHRyKCd2YWx1ZScpO1xuXHRcdFx0dmFyIG5hbWUgPSAkKGN1cnJlbnRTZWxlY3RlZCkudGV4dCgpO1xuXHRcdH1cblxuXG5cdFx0Y29uc29sZS5sb2coJ0dlb0ZpbHRlciBzZWxlY3RlZDogJyxuYW1lLHZhbHVlLGxheWVySUQscGFyZW50U2VsZWN0SUQsc2luZ2xlU2VsZWN0Q291bnQpO1xuXG5cdFx0Ly9maW5kIGhvdyBtYW55IGRpZmZlcmVudCBzZWxlY3RzIGhhdmUgb3B0aW9ucyBzZWxlY3RlZFxuXHRcdCQuZWFjaCgkKCcjZ2VvRmlsdGVyU2VsZWN0JykuZmluZChcIm9wdGlvbjpzZWxlY3RlZFwiKSwgZnVuY3Rpb24gKGluZGV4LHZhbHVlKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gJCh2YWx1ZSkucGFyZW50KCkuYXR0cignaWQnKTtcblx0XHRcdGlmIChwYXJlbnRBcnJheS5pbmRleE9mKHBhcmVudCkgPT0gLTEpIHtcblx0XHRcdFx0cGFyZW50QXJyYXkucHVzaChwYXJlbnQpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdGNvbnNvbGUubG9nKCdnZW9zZWxlY3Qgd2l0aCBzZWxlY3Rpb25zIGluOicscGFyZW50QXJyYXkpO1xuXHRcdFxuXG5cdFx0Ly9pZiBhbGwgaW4gYSBzaW5nbGUgc2VsZWN0IGFyZSB1bnNlbGVjdGVkLCByZXNldCBmaWx0ZXJzXG5cdFx0aWYgKHNpbmdsZVNlbGVjdENvdW50ID09IDAgJiYgcGFyZW50QXJyYXkubGVuZ3RoID09IDApIHtcblx0XHRcdHRvYXN0ci5pbmZvKCdZb3UganVzdCB1bnNlbGVjdGVkIGFsbCBvcHRpb25zLCByZXNldHRpbmcgZmlsdGVycycsICdJbmZvJyk7XG5cdFx0XHQvL3Jlc2V0RmlsdGVycygpO1xuXHRcdH1cblxuXHRcdC8vb3RoZXJ3aXNlIGRvIHF1ZXJ5XG5cdFx0ZWxzZSB7XG5cblx0XHRcdC8vbWFrZSBzdXJlIHRoZXJlIGlzIGEgc2VsZWN0aW9uXG5cdFx0XHRpZiAobGF5ZXJJRCkge1xuXG5cdFx0XHRcdC8vc2luZ2xlIHNlbGVjdCBxdWVyeVxuXHRcdFx0XHR2YXIgcXVlcnkgPSBcIkZJRCA9IFwiICsgdmFsdWU7XG5cblx0XHRcdFx0Ly9pZiB0aGlzIGlzIGEgbXVsdGlwbGUgc2VsZWN0aW9uIGZyb20gdGhlIHNhbWUgc2VsZWN0LCBhZGQgdG8gY3VycmVudCBzZWxlY3Rcblx0XHRcdFx0aWYgKHNpbmdsZVNlbGVjdENvdW50ID4gMSkge1xuXG5cdFx0XHRcdFx0Ly9ORVcgTUVUSE9EIEhFUkUgJ0ZJRCBJTiAoMSwyLDMpJ1xuXHRcdFx0XHRcdHF1ZXJ5ID0gJChzZWxlY3RBcnJheSkubWFwKGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIFwiRklEID0gXCIgKyB0aGlzLnZhbHVlO1xuXHRcdFx0XHRcdH0pLmdldCgpLmpvaW4oJyBvciAnKTtcdFxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y29uc29sZS5sb2coJ3J1bm5pbmcgcXVlcmUgd2hlcmU6JyxxdWVyeSk7XG5cdFx0XHRcdHRvYXN0ci5pbmZvKHBhcmVudFNlbGVjdElEICsgJyBlcXVhbHMgJyArIG5hbWUsICdRdWVyeWluZyBzaXRlcyB3aGVyZS4uLiAnKTtcblxuXHRcdFx0XHRtYXBTZXJ2ZXIucXVlcnkoKS5sYXllcihsYXllcklEKS5yZXR1cm5HZW9tZXRyeSh0cnVlKS53aGVyZShxdWVyeSkucnVuKGZ1bmN0aW9uKGVycm9yLCBjbGlwUG9seWdvbkdlb0pTT04pe1xuXG5cdFx0XHRcdFx0Ly9tYWtlIHN1cmUgdGhlcmUgaXMgYSByZXN1bHQgcG9seWdvblxuXHRcdFx0XHRcdGlmIChjbGlwUG9seWdvbkdlb0pTT04uZmVhdHVyZXMubGVuZ3RoID4gMCkge1xuXG5cdFx0XHRcdFx0XHQvL2xvZ2ljIGhlcmUgaXMgaWYgdGhlcmUgYXJlIHNlbGVjdGlvbnMgZnJvbSBtdWx0aXBsZSBkcm9wZG93bnMsIHRoZW5cblx0XHRcdFx0XHRcdC8vdXNlIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgc2V0IHRvIGRvIHRoZSBjbGlwXG5cdFx0XHRcdFx0XHRpZiAocGFyZW50QXJyYXkubGVuZ3RoID4gMSkge1xuXHRcdFx0XHRcdFx0XHR2YXIgaW5wdXRTaXRlc0dlb0pTT04gPSBzaXRlc0xheWVyLnRvR2VvSlNPTigpLmZlYXR1cmVzWzBdO1xuXHRcdFx0XHRcdFx0XHR2YXIgcHRzV2l0aGluID0gY2xpcFNpdGVzKGlucHV0U2l0ZXNHZW9KU09OLCBjbGlwUG9seWdvbkdlb0pTT04pO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvL290aGVyd2lzZSwgdXNlIHRoZSBtYXN0ZXIgbGlzdCBvZiBzaXRlc1xuXHRcdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHZhciBwdHNXaXRoaW4gPSBjbGlwU2l0ZXMoc2l0ZXNHZW9KU09OLCBjbGlwUG9seWdvbkdlb0pTT04pO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRpZiAocHRzV2l0aGluKSB7XG5cdFx0XHRcdFx0XHRcdGdlb0ZpbHRlckZsYWcgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRkcmF3R2VvSlNPTihwdHNXaXRoaW4pXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly9pZiBubyBzaXRlcyByZXR1cm5lZCBmcm9tIGNsaXAsIHVuc2VsZWN0IHRoaXMgZnJvbSBzZWxlY3Rcblx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2coJ2hlcmUnLGN1cnJlbnRTZWxlY3RlZCwgJChjdXJyZW50U2VsZWN0ZWQpLnByb3AoXCJzZWxlY3RlZFwiKSlcblx0XHRcdFx0XHRcdFx0JChjdXJyZW50U2VsZWN0ZWQpLnByb3AoXCJzZWxlY3RlZFwiLCBmYWxzZSk7XG5cdFx0XHRcdFx0XHRcdCQoJy5zZWxlY3RwaWNrZXInKS5zZWxlY3RwaWNrZXIoJ3JlZnJlc2gnKTtcblxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XG5cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHR0b2FzdHIuZXJyb3IoJ0Vycm9yJywgJ0dlb21ldHJ5IHF1ZXJ5IGRpZCBub3QgcmV0dXJuIGFueSBmZWF0dXJlcycpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHQkKCcjZ2VvRmlsdGVyU2VsZWN0Jykub24oJ2NoYW5nZScsICcuc2VsZWN0cGlja2VyJywgZnVuY3Rpb24oKSB7XG5cdC8vJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuZ2VvRmlsdGVyU2VsZWN0JywgZnVuY3Rpb24oKSB7XG5cdFx0XG5cblx0fSk7XG5cblx0LyogIEVORCBFVkVOVCBIQU5ETEVSUyAqL1xufSk7XG5cbmZ1bmN0aW9uIGRyYXdHZW9KU09OKGdlb0pTT04pIHtcblx0Ly9jbGVhciBjdXJyZW50IGRpc3BsYXkgbGF5ZXJcblx0c2l0ZXNMYXllci5jbGVhckxheWVycygpO1xuXG5cdHZhciBnZW9KU09ObGF5ZXIgPSBMLmdlb0pzb24oZ2VvSlNPTiwge1xuXHRcdC8vIC8vb3B0aW9uYWwgZmlsdGVyIGlucHV0XG5cdFx0Ly8gZmlsdGVyOiBmdW5jdGlvbihmZWF0dXJlLCBsYXllcikge1xuXHRcdC8vIFx0aWYgKGZpbHRlckluZm8uc2VsZWN0TmFtZSA9PT0gJ0NvdW50eVNlbGVjdCcpIHJldHVybiBmZWF0dXJlLnByb3BlcnRpZXMuY291bnR5Q29kZSA9PT0gZmlsdGVySW5mby5vcHRpb25WYWx1ZTtcblx0XHQvLyBcdGlmIChmaWx0ZXJJbmZvLnNlbGVjdE5hbWUgPT09ICdIVUNTZWxlY3QnKSByZXR1cm4gZmVhdHVyZS5wcm9wZXJ0aWVzLmh1Y0NvZGUgPT09IGZpbHRlckluZm8ub3B0aW9uVmFsdWU7XG5cdFx0Ly8gXHRpZiAoZmlsdGVySW5mby5zZWxlY3ROYW1lID09PSAnQXF1aWZlclNlbGVjdCcpIHJldHVybiBmZWF0dXJlLnByb3BlcnRpZXMuYXF1aWZlckNvZGUgPT09IGZpbHRlckluZm8ub3B0aW9uVmFsdWU7XG5cdFx0Ly8gXHRpZiAoZmlsdGVySW5mby5zZWxlY3ROYW1lID09PSAnV2VsbERlcHRoU2VsZWN0JykgcmV0dXJuIGZlYXR1cmUucHJvcGVydGllcy53ZWxsRGVwdGggPT09IGZpbHRlckluZm8ub3B0aW9uVmFsdWU7XG5cdFx0Ly8gfSxcblx0XHRwb2ludFRvTGF5ZXI6IGZ1bmN0aW9uIChmZWF0dXJlLCBsYXRsbmcpIHtcblx0XHRcdHJldHVybiBMLmNpcmNsZU1hcmtlcihsYXRsbmcsIGdlb2pzb25NYXJrZXJPcHRpb25zKTtcblx0XHR9LFxuXHRcdG9uRWFjaEZlYXR1cmU6IGZ1bmN0aW9uIChmZWF0dXJlLCBsYXllcikge1xuXHRcdFx0Ly9sYXllci5iaW5kUG9wdXAoJzxiPicgKyBmZWF0dXJlLnByb3BlcnRpZXMuc2l0ZUlEICsgJzwvYj48L2JyPjwvYnI+JyArIGZlYXR1cmUucHJvcGVydGllcy5zaXRlTmFtZSArICc8L2JyPjxhIGhyZWY9XCJodHRwczovL3dhdGVyZGF0YS51c2dzLmdvdi9ud2lzL2ludmVudG9yeS8/c2l0ZV9ubz0nICsgZmVhdHVyZS5wcm9wZXJ0aWVzLnNpdGVJRCArICdcIiB0YXJnZXQ9XCJfYmxhbmtcIj5BY2Nlc3MgRGF0YTwvYT48L2JyPjwvYnI+Jyk7XG5cdFx0XHR2YXIgJHBvcHVwQ29udGVudCA9ICQoJzxkaXY+JywgeyBpZDogJ3BvcHVwJyB9KTtcblxuXHRcdFx0JC5lYWNoKGZlYXR1cmUucHJvcGVydGllcywgZnVuY3Rpb24oIGluZGV4LCBwcm9wZXJ0eSApIHtcblx0XHRcdFx0JHBvcHVwQ29udGVudC5hcHBlbmQoJzxiPicgKyBpbmRleCArICc6PC9iPiAgJyArIHByb3BlcnR5ICsgJzwvYnI+Jylcblx0XHRcdH0pO1xuXHRcdFx0XG5cdFx0XHRsYXllci5iaW5kUG9wdXAoJHBvcHVwQ29udGVudC5odG1sKCkpO1xuXHRcdH1cblx0fSk7XG5cdHNpdGVzTGF5ZXIuYWRkTGF5ZXIoZ2VvSlNPTmxheWVyKTtcblx0bWFwLmZpdEJvdW5kcyhzaXRlc0xheWVyLmdldEJvdW5kcygpKTtcbn1cblxuZnVuY3Rpb24gcmVzZXRGaWx0ZXJzKCkge1xuXHQkKCcuc2VsZWN0cGlja2VyJykuc2VsZWN0cGlja2VyKCdkZXNlbGVjdEFsbCcpO1xuXG5cdHBhcmVudEFycmF5ID0gW107XG5cblx0cmVzZXRWaWV3KCk7XG5cblx0ZHJhd0dlb0pTT04oc2l0ZXNHZW9KU09OKVxufVxuXG5mdW5jdGlvbiBwYXJzZUJhc2VMYXllcnMoKSB7XG5cdCQuZWFjaChhbGxMYXllcnMsIGZ1bmN0aW9uIChpbmRleCxncm91cCkge1xuXHRcdGNvbnNvbGUubG9nKCdwcm9jZXNzaW5nOiAnLCBncm91cC5ncm91cEhlYWRpbmcpXG5cblx0XHQvL3N1Yi1sb29wIG92ZXIgbGF5ZXJzIHdpdGhpbiB0aGlzIGdyb3VwVHlwZVxuXHRcdCQuZWFjaChncm91cC5sYXllcnMsIGZ1bmN0aW9uIChtYXBTZXJ2ZXJOYW1lLG1hcFNlcnZlckRldGFpbHMpIHtcblxuXHRcdFx0Ly8gaWYgKG1hcFNlcnZlckRldGFpbHMud2ltT3B0aW9ucy5sYXllclR5cGUgPT09ICdhZ2lzRmVhdHVyZScpIHtcdFxuXHRcdFx0Ly8gXHRmZWF0dXJlTGF5ZXIgPSBMLmVzcmkuZmVhdHVyZUxheWVyKHt1cmw6bWFwU2VydmVyRGV0YWlscy51cmx9KTtcblx0XHRcdC8vIFx0Ly9hZGRMYXllcihncm91cC5ncm91cEhlYWRpbmcsIGdyb3VwLnNob3dHcm91cEhlYWRpbmcsIGxheWVyLCBtYXBTZXJ2ZXJOYW1lLCBtYXBTZXJ2ZXJEZXRhaWxzKTtcblx0XHRcdC8vIH1cblxuXHRcdFx0aWYgKG1hcFNlcnZlckRldGFpbHMud2ltT3B0aW9ucy5sYXllclR5cGUgPT09ICdhZ2lzRHluYW1pYycpIHtcblx0XHRcdFx0bWFwU2VydmVyID0gTC5lc3JpLmR5bmFtaWNNYXBMYXllcihtYXBTZXJ2ZXJEZXRhaWxzKTtcblx0XHRcdFx0Ly8gYWRkTWFwTGF5ZXIobWFwU2VydmVyLCBtYXBTZXJ2ZXJOYW1lLCBtYXBTZXJ2ZXJEZXRhaWxzKTtcblx0XHRcdFx0XG5cdFx0XHRcdHNldHVwR2VvRmlsdGVycyhsYXllckxpc3QpO1xuXHRcdFx0fVxuXHRcdFxuXHRcdH0pOyAgXG5cdH0pO1xufVxuXG5mdW5jdGlvbiBzZXR1cEdlb0ZpbHRlcnMobGF5ZXJMaXN0KSB7XG5cdFxuXHQkLmVhY2gobGF5ZXJMaXN0LCBmdW5jdGlvbihpbmRleCx2YWx1ZSkge1xuXG5cdFx0dG9hc3RyLmluZm8odmFsdWUubGF5ZXJOYW1lLCAnR2V0dGluZyBnZW9GaWx0ZXJzOicpO1xuXHRcdFxuXHRcdC8vZXhlY3V0ZSB0aGUgcXVlcnkgdGFzayB0aGVuIHBvcHVsYXRlIHRoZSBkcm9wZG93biBtZW51IHdpdGggbGlzdFxuXHRcdG1hcFNlcnZlci5xdWVyeSgpLmxheWVyKHZhbHVlLmxheWVySUQpLnJldHVybkdlb21ldHJ5KGZhbHNlKS53aGVyZShcIjE9MVwiKS5ydW4oZnVuY3Rpb24oZXJyb3IsIGZlYXR1cmVDb2xsZWN0aW9uKXtcblxuXHRcdFx0aWYgKGZlYXR1cmVDb2xsZWN0aW9uICYmIGZlYXR1cmVDb2xsZWN0aW9uLmZlYXR1cmVzLmxlbmd0aCA+IDApIHtcblxuXHRcdFx0XHQvL2FwcGVuZCBhIG5ldyBkcm9wZG93blxuXHRcdFx0XHQkKFwiI2dlb0ZpbHRlclNlbGVjdFwiKS5hcHBlbmQoXCI8c2VsZWN0IGlkPSdcIiArIHZhbHVlLmRyb3BEb3duSUQgKyBcIicgY2xhc3M9J3NlbGVjdHBpY2tlciBnZW9GaWx0ZXJTZWxlY3QnIG11bHRpcGxlIGRhdGEtc2VsZWN0ZWQtdGV4dC1mb3JtYXQ9J2NvdW50JyBkYXRhLWRyb3B1cC1hdXRvPSdmYWxzZScgdGl0bGU9J1wiICsgdmFsdWUubGF5ZXJOYW1lICsgXCInPjwvc2VsZWN0PlwiKTtcblxuXHRcdFx0XHR2YXIgZmVhdHVyZXMgPSBmZWF0dXJlQ29sbGVjdGlvbi5mZWF0dXJlczsgICAgICAgICAgICAgXG5cdFx0XHRcdGZvcih2YXIgaT0wOyBpPGZlYXR1cmVzLmxlbmd0aDtpKyspe1xuXHRcdFx0XHRcdC8vY29uc29sZS5sb2coJ2FkZGluZzogJyxmZWF0dXJlc1tpXS5wcm9wZXJ0aWVzW3ZhbHVlLm91dEZpZWxkc1swXV0sICd0byB0aGUgZGl2OiAnLHZhbHVlLmRyb3BEb3duSUQpO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdCQoXCIjXCIgKyB2YWx1ZS5kcm9wRG93bklEKS5hcHBlbmQoICQoJzxvcHRpb24+PC9vcHRpb24+JykuYXR0cignbGF5ZXJJRCcsdmFsdWUubGF5ZXJJRCkudmFsKGZlYXR1cmVzW2ldLnByb3BlcnRpZXNbdmFsdWUub3V0RmllbGRzWzFdXSkuaHRtbChmZWF0dXJlc1tpXS5wcm9wZXJ0aWVzW3ZhbHVlLm91dEZpZWxkc1swXV0pICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly9zb3J0IHRoZSBvcHRpb25zIGxpc3QgXG5cdFx0XHRcdCQoXCIjXCIgKyB2YWx1ZS5kcm9wRG93bklEKS5odG1sKCQoXCIjXCIgKyB2YWx1ZS5kcm9wRG93bklEICsgXCIgb3B0aW9uXCIpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcblx0XHRcdFx0XHRyZXR1cm4gYS50ZXh0ID09IGIudGV4dCA/IDAgOiBhLnRleHQgPCBiLnRleHQgPyAtMSA6IDFcblx0XHRcdFx0fSkpXG5cdFx0XHRcdC8vYWRkIHRoZSBkZWZhdWx0IG9wdGlvblxuXHRcdFx0XHQvLyQoXCIjXCIgKyB2YWx1ZS5kcm9wRG93bklEKS5wcmVwZW5kKFwiPG9wdGlvbiBsYXllcklEPScnIHNlbGVjdGVkPSdzZWxlY3RlZCc+U2VsZWN0IGEgXCIgKyB2YWx1ZS5sYXllck5hbWUgKyBcIjwvb3B0aW9uPlwiKTtcblx0XHRcdFx0JCgnLnNlbGVjdHBpY2tlcicpLnNlbGVjdHBpY2tlcigncmVmcmVzaCcpO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdHRvYXN0ci5lcnJvcihlcnJvci5tZXNzYWdlLCAnRXJyb3IgZ2V0dGluZyBnZW9GaWx0ZXIgbGlzdCBmb3IgJyArIHZhbHVlLmxheWVyTmFtZSk7XG5cdFx0XHR9XG5cblx0XHR9KTtcblx0XHQvL2JyZWFrIHRoZSBsb29wIGZvciB0ZXN0aW5nXG5cdFx0Ly9yZXR1cm4gZmFsc2U7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBjbGlwU2l0ZXMoaW5wdXRHZW9KU09OLCBwb2x5R2VvSlNPTikge1xuXG5cdC8vY29uc29sZS5sb2coJ3NlbGVjdGVkOiAnLCBmaWx0ZXJJbmZvKTtcblx0dG9hc3RyLmluZm8oJ0ZpbHRlcmluZyBzaXRlcy4uLicsIHt0aW1lT3V0OiAwfSk7XG5cdFxuXHQvL3R1cmZqcyBjbGlwIG9wZXJhdGlvblxuXHR2YXIgcHRzV2l0aGluID0gd2l0aGluKGlucHV0R2VvSlNPTiAsIHBvbHlHZW9KU09OKTtcblxuXHRjb25zb2xlLmxvZygnY2xpcCByZXN1bHQgZmVhdHVyZXM6JyxwdHNXaXRoaW4uZmVhdHVyZXMubGVuZ3RoKTtcblxuXHRpZiAocHRzV2l0aGluLmZlYXR1cmVzLmxlbmd0aCA+IDApIHtcblx0XHR0b2FzdHIuY2xlYXIoKTtcblx0XHRyZXR1cm4gcHRzV2l0aGluO1xuXHR9XG5cblx0ZWxzZSB7XG5cdFx0dG9hc3RyLmNsZWFyKCk7XG5cdFx0dG9hc3RyLmVycm9yKCdFcnJvcicsICdObyBzaXRlcyB0byBkaXNwbGF5Jyk7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cdFxufVxuXG5mdW5jdGlvbiBzdW1tYXJpemVTaXRlcyhmZWF0dXJlQ29sbGVjdGlvbikge1xuXG5cdC8vZ2V0IHRoZSBmaXJzdCBmZWF0dXJlIGFuZCBhZGQgdG8gbWFwIFxuXHRpZihmZWF0dXJlQ29sbGVjdGlvbi5mZWF0dXJlcy5sZW5ndGggPiAwKXtcblx0XHRcblx0XHQkLmVhY2goZmVhdHVyZUNvbGxlY3Rpb24uZmVhdHVyZXMsIGZ1bmN0aW9uIChpbmRleCx2YWx1ZSkge1xuXHRcdFx0XG5cdFx0XHRjb25zb2xlLmxvZyhpbmRleCx2YWx1ZSk7XG5cblx0XHRcdFxuXHRcdH0pO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGZpbHRlclNpdGVzKGZpbHRlckluZm8pIHtcblxuXHQvL2NvbnNvbGUubG9nKCdzZWxlY3RlZDogJywgZmlsdGVySW5mbyk7XG5cdHRvYXN0ci5pbmZvKCdGaWx0ZXJpbmcgc2l0ZXMuLi4nLCB7dGltZU91dDogMH0pO1xuXG5cdC8vcGFzcyBpbiBmaWx0ZXIgaW5mbyBhcyBvcHRpb25hbCBwYXJhbVxuXHRkcmF3R2VvSlNPTihzaXRlR2VvSlNPTik7IC8vTkVFRCBUTyBVUERBVEUgVEhJUyBJRiBVU0lOR1xuXHR0b2FzdHIuY2xlYXIoKTtcbn1cblxuZnVuY3Rpb24gbG9hZFNpdGVzKCkge1xuXG5cdC8vcmVzZXQgZ2VvIEZpbHRlciBmbGFnXG5cdGdlb0ZpbHRlckZsYWcgPSBmYWxzZTtcblxuXHRzaXRlc0xheWVyLmNsZWFyTGF5ZXJzKCk7XG5cdHNpdGVzR2VvSlNPTiA9IHsndHlwZSc6ICdGZWF0dXJlQ29sbGVjdGlvbicsJ2ZlYXR1cmVzJzogW119O1xuXHR0b2FzdHIuaW5mbygnUXVlcnlpbmcgTldJUy4uLicsIHt0aW1lT3V0OiAwfSk7XG5cbiAgICAkLmFqYXgoe1xuXHRcdC8vdXJsOiAnaHR0cHM6Ly9ud2lzLndhdGVyZGF0YS51c2dzLmdvdi9ueS9ud2lzL3F3ZGF0YT9zaXRlX3RwX2NkPUdXJmZvcm1hdD1zaXRlZmlsZV9vdXRwdXQmc2l0ZWZpbGVfb3V0cHV0X2Zvcm1hdD14bWwmY29sdW1uX25hbWU9YWdlbmN5X2NkJmNvbHVtbl9uYW1lPXNpdGVfbm8mY29sdW1uX25hbWU9c3RhdGlvbl9ubSZjb2x1bW5fbmFtZT1kZWNfbGF0X3ZhJmNvbHVtbl9uYW1lPWRlY19sb25nX3ZhJmNvbHVtbl9uYW1lPWNvdW50eV9jZCZjb2x1bW5fbmFtZT1odWNfY2QmY29sdW1uX25hbWU9YXFmcl9jZCZjb2x1bW5fbmFtZT13ZWxsX2RlcHRoX3ZhJmludmVudG9yeV9vdXRwdXQ9MCZyZGJfaW52ZW50b3J5X291dHB1dD1maWxlJlRab3V0cHV0PTAmcG1fY2RfY29tcGFyZT1HcmVhdGVyJTIwdGhhbiZyYWRpb19wYXJtX2Nkcz1hbGxfcGFybV9jZHMmcXdfYXR0cmlidXRlcz0wJnF3X3NhbXBsZV93aWRlPXdpZGUmcmRiX3F3X2F0dHJpYnV0ZXM9MCZkYXRlX2Zvcm1hdD1ZWVlZLU1NLUREJnJkYl9jb21wcmVzc2lvbj1maWxlJmxpc3Rfb2Zfc2VhcmNoX2NyaXRlcmlhPXNpdGVfdHBfY2QmY29sdW1uX25hbWU9c2l0ZV90cF9jZCZjb2x1bW5fbmFtZT1kZWNfbGF0X3ZhJmNvbHVtbl9uYW1lPWRlY19sb25nX3ZhJmNvbHVtbl9uYW1lPWFnZW5jeV91c2VfY2QnXG5cdFx0dXJsOiAnLi9xd2RhdGFBbGwueG1sJywgXG5cdFx0ZGF0YVR5cGU6ICd4bWwnLCBcblx0XHRzdWNjZXNzOiBmdW5jdGlvbih4bWwpIHtcblxuXHRcdFx0dG9hc3RyLmNsZWFyKCk7XG5cdFx0XHR0b2FzdHIuaW5mbygnUGFyc2luZyBzaXRlcy4uLicsIHt0aW1lT3V0OiAwfSk7XG5cdFx0XHRcbiAgICAgICAgXHQkKHhtbCkuZmluZCgnc2l0ZScpLmVhY2goZnVuY3Rpb24oKXtcblxuXHRcdFx0XHQvL2dldCBwcm9wZXJ0aWVzXG5cdFx0XHRcdHZhciBzaXRlSUQgPSAkKHRoaXMpLmZpbmQoJ3NpdGVfbm8nKS50ZXh0KCk7XG5cdFx0XHRcdHZhciBzaXRlTmFtZSA9ICQodGhpcykuZmluZCgnc3RhdGlvbl9ubScpLnRleHQoKTtcblx0XHRcdFx0dmFyIGxhdEREID0gJCh0aGlzKS5maW5kKCdkZWNfbGF0X3ZhJykudGV4dCgpO1xuXHRcdFx0XHR2YXIgbG9uREQgPSAkKHRoaXMpLmZpbmQoJ2RlY19sb25nX3ZhJykudGV4dCgpO1xuXHRcdFx0XHR2YXIgYWdlbmN5Q29kZSA9ICQodGhpcykuZmluZCgnYWdlbmN5X2NkJykudGV4dCgpO1xuXHRcdFx0XHR2YXIgY291bnR5Q29kZSA9ICQodGhpcykuZmluZCgnY291bnR5X2NkJykudGV4dCgpO1xuXHRcdFx0XHR2YXIgaHVjQ29kZSA9ICQodGhpcykuZmluZCgnaHVjX2NkJykudGV4dCgpO1xuXHRcdFx0XHR2YXIgYXF1aWZlckNvZGUgPSAkKHRoaXMpLmZpbmQoJ2FxZnJfY2QnKS50ZXh0KCk7XG5cdFx0XHRcdHZhciB3ZWxsRGVwdGggPSAkKHRoaXMpLmZpbmQoJ3dlbGxfZGVwdGhfdmEnKS50ZXh0KCk7XG5cblx0XHRcdFx0dmFyIHNpdGVHZW9KU09OID0ge1xuXHRcdFx0XHRcdCd0eXBlJzonRmVhdHVyZScsXG5cdFx0XHRcdFx0J3Byb3BlcnRpZXMnOntcblx0XHRcdFx0XHRcdCdzaXRlSUQnOnNpdGVJRCxcblx0XHRcdFx0XHRcdCdzaXRlTmFtZSc6c2l0ZU5hbWUsXG5cdFx0XHRcdFx0XHQnbGF0REQnOmxhdERELFxuXHRcdFx0XHRcdFx0J2xvbkREJzpsb25ERCxcblx0XHRcdFx0XHRcdCdhZ2VuY3lDb2RlJzphZ2VuY3lDb2RlLFxuXHRcdFx0XHRcdFx0J2NvdW50eUNvZGUnOmNvdW50eUNvZGUsXG5cdFx0XHRcdFx0XHQnaHVjQ29kZSc6aHVjQ29kZSxcblx0XHRcdFx0XHRcdCdhcXVpZmVyQ29kZSc6YXF1aWZlckNvZGUsXG5cdFx0XHRcdFx0XHQnd2VsbERlcHRoJzp3ZWxsRGVwdGgsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHQnZ2VvbWV0cnknOntcblx0XHRcdFx0XHRcdCd0eXBlJzonUG9pbnQnLFxuXHRcdFx0XHRcdFx0J2Nvb3JkaW5hdGVzJzpbcGFyc2VGbG9hdChsb25ERCkscGFyc2VGbG9hdChsYXRERCldXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdHNpdGVzR2VvSlNPTi5mZWF0dXJlcy5wdXNoKHNpdGVHZW9KU09OKTtcblxuXHRcdFx0XHQvLyAvL2FkZCB0byBzZWxlY3QgZHJvcGRvd25cblx0XHRcdFx0Ly8gJC5lYWNoKGZpbHRlckdyb3VwTGlzdCwgZnVuY3Rpb24oaW5kZXgsIGZpbHRlck5hbWUpIHtcblx0XHRcdFx0Ly8gXHRpZiAoZmlsdGVyTmFtZSAhPT0gJ1dlbGxEZXB0aCcgJiYgZmlsdGVyTmFtZSAhPT0gJ0NvdW50eScpIHtcblx0XHRcdFx0Ly8gXHRcdHZhciBlbGVtZW50TmFtZSA9ICcjJyArIGZpbHRlck5hbWUgKyAnU2VsZWN0Jztcblx0XHRcdFx0Ly8gXHRcdHZhciBjb2RlO1xuXHRcdFx0XHQvLyBcdFx0aWYgKGZpbHRlck5hbWUgPT09ICdIVUMnKSB7Y29kZSA9IGh1Y0NvZGV9O1xuXHRcdFx0XHQvLyBcdFx0aWYgKGZpbHRlck5hbWUgPT09ICdBcXVpZmVyJykge2NvZGUgPSBhcXVpZmVyQ29kZX07XG5cdFx0XHRcdC8vIFx0XHRpZiAoZmlsdGVyTmFtZSA9PT0gJ1dlbGxEZXB0aCcpIHtjb2RlID0gd2VsbERlcHRofTtcblxuXHRcdFx0XHQvLyBcdFx0Ly9jb25zb2xlLmxvZygnaGVyZScsIGZpbHRlck5hbWUsY29kZSlcblxuXHRcdFx0XHQvLyBcdFx0Ly9hZGQgaXQgaWYgaXQgZG9lc24ndCBleGlzdFxuXHRcdFx0XHQvLyBcdFx0aWYgKGNvZGUgJiYgJChlbGVtZW50TmFtZSArICcgb3B0aW9uW3ZhbHVlPVwiJyArIGNvZGUgKyAnXCJdJykubGVuZ3RoID09IDApIHtcblx0XHRcdFx0Ly8gXHRcdFx0Ly9jb25zb2xlLmxvZygnYWRkaW5nIGFuIG9wdGlvbiBmb3I6JyxlbGVtZW50TmFtZSxjb2RlKVxuXHRcdFx0XHQvLyBcdFx0XHQkKGVsZW1lbnROYW1lKS5hcHBlbmQoJCgnPG9wdGlvbj48L29wdGlvbj4nKS5hdHRyKCd2YWx1ZScsY29kZSkudGV4dChjb2RlKSk7XG5cdFx0XHRcdC8vIFx0XHR9XG5cdFx0XHRcdC8vIFx0fVxuXHRcdFx0XHQvLyB9KTtcblx0XHRcdH0pO1xuXG5cdFx0XHR0b2FzdHIuY2xlYXIoKTtcblx0XHRcdHRvYXN0ci5pbmZvKCdEcmF3aW5nIEdlb0pTT04uLi4nLCB7dGltZU91dDogMH0pO1xuXHRcdFxuXHRcdFx0ZHJhd0dlb0pTT04oc2l0ZXNHZW9KU09OKTtcblxuXHRcdFx0Y29uc29sZS5sb2coc2l0ZXNHZW9KU09OLmZlYXR1cmVzLmxlbmd0aCwgJ3NpdGVzIGxvYWRlZCcpO1xuXHRcdFx0dG9hc3RyLmNsZWFyKCk7XG5cblx0XHRcdC8vaXMgdGhlcmUgYSBiZXR0ZXIgd2F5IHRvIGRvIHRoaXM/XG5cdFx0XHQkKCcjc2l0ZXNQYW5lbCcpLmNvbGxhcHNlKFwidG9nZ2xlXCIpO1xuXHRcdFx0JCgnI2ZpbHRlcnNQYW5lbCcpLmNvbGxhcHNlKFwidG9nZ2xlXCIpO1xuICAgXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIGxvYWRTaXRlczIoKSB7XG5cblx0JC5nZXRKU09OKCcuL3NpdGVEYXRhLmpzb24nLCBmdW5jdGlvbihkYXRhKSB7XG5cdFx0ZHJhd0dlb0pTT04oZGF0YSlcblx0fSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRmVhdHVyZVByb3BlcnRpZXMocHJvcGVydGllcykge1xuXHQkLmVhY2gocHJvcGVydGllcywgZnVuY3Rpb24oIGZpbHRlckNhdGVnb3J5LCBmaWx0ZXJEYXRhICkge1xuXG5cdFx0dmFyIHdlbGxFbGVtZW50ID0gJyMnICsgZmlsdGVyQ2F0ZWdvcnk7XG5cdFx0aWYgKHR5cGVvZiBmaWx0ZXJEYXRhID09PSAnb2JqZWN0JyAmJiAkKHdlbGxFbGVtZW50KS5sZW5ndGggPT0gMCkge1xuXHRcdFx0JCgnI2ZpbHRlcnMnKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJ3ZWxsXCIgaWQ9XCInICsgZmlsdGVyQ2F0ZWdvcnkgKyAnXCI+PGg1PicgKyBmaWx0ZXJDYXRlZ29yeSArICc8L2g1PjwvZGl2PicpO1xuXHRcdH1cblxuXHRcdCQuZWFjaChmaWx0ZXJEYXRhLCBmdW5jdGlvbiggZmlsdGVyTmFtZSwgZmlsdGVySXRlbSApIHtcblx0XHRcdHZhciBlbGVtZW50TmFtZSA9ICcjJyArIGZpbHRlck5hbWUgKyAnU2VsZWN0Jztcblx0XHRcdGNvbnNvbGUubG9nKCdoZXJlMicsZmlsdGVyTmFtZSxmaWx0ZXJJdGVtLGVsZW1lbnROYW1lLCAkKGVsZW1lbnROYW1lKS5sZW5ndGggKVxuXHRcdFx0Ly8gaWYgKCQoZWxlbWVudE5hbWUpLmxlbmd0aCA9PSAwKSB7XG5cdFx0XHQvLyBcdGNvbnNvbGUubG9nKGVsZW1lbnROYW1lLCAnZG9lcyBub3QgZXhpc3QgeWV0JylcblxuXHRcdFx0Ly8gXHQvL2ZpcnN0IGNyZWF0ZSB0aGUgZHJvcGRvd25cblx0XHRcdC8vIFx0JCh3ZWxsRWxlbWVudCkuYXBwZW5kKCc8c2VsZWN0IGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCInICsgZmlsdGVyTmFtZSArICdTZWxlY3RcIj48b3B0aW9uIHNlbGVjdGVkPVwic2VsZWN0ZWRcIiB2YWx1ZT1cImRlZmF1bHRcIj5TZWxlY3QgYSAnICsgZmlsdGVyTmFtZSArICc8L29wdGlvbj48L3NlbGVjdD4nKTtcblx0XHRcdFxuXHRcdFx0Ly8gXHQvL3RoZW4gYXBwZW5kIHRoZSB2YWx1ZVxuXHRcdFx0Ly8gXHQkKGVsZW1lbnROYW1lKS5hcHBlbmQoJCgnPG9wdGlvbj48L29wdGlvbj4nKS5hdHRyKCd2YWx1ZScsZmlsdGVySXRlbSkudGV4dChmaWx0ZXJJdGVtKSk7XG5cdFx0XHQvLyB9XG5cdFx0XHQvLyBlbHNlIHtcblx0XHRcdC8vIFx0Y29uc29sZS5sb2coZWxlbWVudE5hbWUsICdFWElTVFMnKVxuXG5cdFx0XHQvLyBcdC8vanVzdCBhcHBlbmQgdGhlIHZhbHVlXG5cdFx0XHQvLyBcdCQoZWxlbWVudE5hbWUpLmFwcGVuZCgkKCc8b3B0aW9uPjwvb3B0aW9uPicpLmF0dHIoJ3ZhbHVlJyxmaWx0ZXJJdGVtKS50ZXh0KGZpbHRlckl0ZW0pKTtcblx0XHRcdC8vIH1cblx0XHR9KTtcblxuXHR9KTtcbn1cblxuZnVuY3Rpb24gYWRkRmlsdGVyT3B0aW9ucyhwcm9wZXJ0aWVzKSB7XG5cdC8vYWRkIGNvdW50eSB0byBkcm9wZG93blxuXHRpZiAocHJvcGVydGllcy5jb3VudHlDb2RlKSB7XG5cdFx0aWYgKGNoZWNrU2VsZWN0Rm9ySXRlbSgnI0NvdW50eVNlbGVjdCcscHJvcGVydGllcy5jb3VudHlDb2RlKSA9PSBmYWxzZSkge1xuXHRcdFx0JCgnI0NvdW50eVNlbGVjdCcpLmFwcGVuZCgkKCc8b3B0aW9uPjwvb3B0aW9uPicpLmF0dHIoJ3ZhbHVlJyxwcm9wZXJ0aWVzLmNvdW50eUNkKS50ZXh0KHByb3BlcnRpZXMuY291bnR5Q2QpKTtcblx0XHR9XG5cdFx0XG5cdFx0Ly8gaWYgKHByb3BlcnRpZXMuY291bnR5Q29kZSA9PT0gJ0NvdW50eScpIHtcblx0XHQvLyBcdC8vZnJvbSBoZXJlOiBodHRwczovL3d3dy5jZW5zdXMuZ292L2dlby9yZWZlcmVuY2UvY29kZXMvY291Lmh0bWxcblx0XHQvLyBcdC8vdGhlbiBjb252ZXJ0ZWQgdG8ganNvbjogaHR0cHM6Ly93d3cuY3N2anNvbi5jb20vY3N2Mmpzb25cblx0XHQvLyBcdCQuZ2V0SlNPTignLi9jb3VudHlDb2Rlc05ZLmpzb24nLCBmdW5jdGlvbihkYXRhKSB7XG5cdFx0Ly8gXHRcdCQuZWFjaChkYXRhLCBmdW5jdGlvbiggaW5kZXgsIGNvdW50eSApIHtcblx0XHQvLyBcdFx0XHR2YXIgZWxlbWVudE5hbWUgPSAnIycgKyBmaWx0ZXJOYW1lICsgJ1NlbGVjdCc7XG5cdFx0Ly8gXHRcdFx0JChlbGVtZW50TmFtZSkuYXBwZW5kKCQoJzxvcHRpb24+PC9vcHRpb24+JykuYXR0cigndmFsdWUnLGNvdW50eS5Db3VudHlDZCkudGV4dChjb3VudHkuQ291bnR5TmFtZS5yZXBsYWNlKCcgQ291bnR5JywnJykpKTtcblx0XHQvLyBcdFx0fSk7XG5cdFx0Ly8gXHR9KTtcblx0XHQvLyB9XG5cdH1cbn1cblxuZnVuY3Rpb24gY2hlY2tTZWxlY3RGb3JJdGVtKHNlbGVjdCxpdGVtKSB7XG5cdHZhciBleGlzdHMgPSBmYWxzZTtcblx0JChzZWxlY3QgKyAnIG9wdGlvbicpLmVhY2goZnVuY3Rpb24oKXtcblx0XHRpZiAodGhpcy52YWx1ZSA9PT0gaXRlbSkge1xuXHRcdFx0ZXhpc3RzID0gdHJ1ZTtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gZXhpc3RzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVGaWx0ZXJHcm91cHMoKSB7XG5cdCQuZWFjaChmaWx0ZXJHcm91cExpc3QsIGZ1bmN0aW9uKGluZGV4LCBmaWx0ZXJOYW1lKSB7XG5cblx0XHQvL29ubHkgY291bnR5IGZvciBub3dcblx0XHRpZiAoZmlsdGVyTmFtZSA9PT0gJ0NvdW50eScpIHtcblx0XHRcdCQoJyNmaWx0ZXJzJykuYXBwZW5kKCc8c2VsZWN0IGNsYXNzPVwic2VsZWN0cGlja2VyIE5XSVNzZWxlY3RcIiBtdWx0aXBsZSBpZD1cIicgKyBmaWx0ZXJOYW1lICsgJ1NlbGVjdFwiPjwvc2VsZWN0PicpO1xuXHRcdFx0XG5cdFx0XHQvL2NvdW50eSBpcyBzcGVjaWFsIGNhc2Ugc28gd2UgbmVlZCBhIGxvb2t1cCBmaWxlIHdpdGggY29kZXMsIG90aGVyIG9uZXMgZ2V0IHBvcHVsYXRlZCBpbiBjcmVhdGVTaXRlc1xuXHRcdFx0aWYgKGZpbHRlck5hbWUgPT09ICdDb3VudHknKSB7XG5cdFx0XHRcdC8vZnJvbSBoZXJlOiBodHRwczovL3d3dy5jZW5zdXMuZ292L2dlby9yZWZlcmVuY2UvY29kZXMvY291Lmh0bWxcblx0XHRcdFx0Ly90aGVuIGNvbnZlcnRlZCB0byBqc29uOiBodHRwczovL3d3dy5jc3Zqc29uLmNvbS9jc3YyanNvblxuXHRcdFx0XHQkLmdldEpTT04oJy4vY291bnR5Q29kZXNOWS5qc29uJywgZnVuY3Rpb24oZGF0YSkge1xuXHRcdFx0XHRcdCQuZWFjaChkYXRhLCBmdW5jdGlvbiggaW5kZXgsIGNvdW50eSApIHtcblx0XHRcdFx0XHRcdHZhciBlbGVtZW50TmFtZSA9ICcjJyArIGZpbHRlck5hbWUgKyAnU2VsZWN0Jztcblx0XHRcdFx0XHRcdCQoZWxlbWVudE5hbWUpLmFwcGVuZCgkKCc8b3B0aW9uPjwvb3B0aW9uPicpLmF0dHIoJ3ZhbHVlJyxjb3VudHkuQ291bnR5Q2QpLmF0dHIoJ3N0YXRlQ291bnR5Jyxjb3VudHkuU3RhdGVDZCArIGNvdW50eS5Db3VudHlDZCkudGV4dChjb3VudHkuQ291bnR5TmFtZS5yZXBsYWNlKCcgQ291bnR5JywnJykpKTtcblx0XHRcdFx0XHRcdCQoJy5zZWxlY3RwaWNrZXInKS5zZWxlY3RwaWNrZXIoJ3JlZnJlc2gnKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0UVdkYXRhKCkge1xuXHQvL2h0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzM1MTI1MDM2L2V4cG9ydC1sZWFmbGV0LW1hcC10by1nZW9qc29uXG5cblx0dG9hc3RyLmluZm8oJ0dldHRpbmcgUVcgRGF0YS4uLicsIHt0aW1lT3V0OiAwfSk7XG5cblx0dmFyIGlucHV0R2VvSlNPTiA9IHNpdGVzTGF5ZXIudG9HZW9KU09OKCk7XG5cdHZhciB0ZW1wR2VvSlNPTiA9IHsndHlwZSc6ICdGZWF0dXJlQ29sbGVjdGlvbicsJ2ZlYXR1cmVzJzogW119O1xuXG5cdC8vYWZ0ZXIgd2UgZ2V0IGEgY29weSBvZiBjdXJyZW50IGZpbHRlciwgY2xlYXIgdGhlIGRpc3BsYXlcblx0c2l0ZXNMYXllci5jbGVhckxheWVycygpO1xuXG5cdGlmIChpbnB1dEdlb0pTT04uZmVhdHVyZXMubGVuZ3RoID4gMCkge1xuXHRcdGNvbnNvbGUubG9nKCdxdWVyeWluZyBOV0lTLi4uJyk7XG5cblx0XHR2YXIgc3RhdGVDb3VudHkgPSAkKCcjQ291bnR5U2VsZWN0IDpzZWxlY3RlZCcpLmF0dHIoJ3N0YXRlQ291bnR5Jyk7XG5cdFx0dmFyIHBhcmFtQ29kZXMgPSAkKCcjcGFyYW1ldGVyQ29kZXMnKS52YWwoKTtcblx0XHR2YXIgcGFyYW1Db2Rlc0FycmF5ID0gcGFyYW1Db2Rlcy5zcGxpdCgnLCcpO1xuXG5cdFx0dmFyIHBhcmFtcyA9IHsgXG5cdFx0XHQnc2l0ZV90cF9jZCc6ICdHVycsXG5cdFx0XHQncGFyYW1fY2Rfb3BlcmF0b3InOiAnJyxcblx0XHRcdCdncm91cF9rZXknOiAnTk9ORScsIFxuXHRcdFx0J3NpdGVmaWxlX291dHB1dF9mb3JtYXQnOiAnaHRtbF90YWJsZScsXG5cdFx0XHQnY29sdW1uX25hbWUnOiAnYWdlbmN5X2NkJyxcblx0XHRcdCdjb2x1bW5fbmFtZSc6ICdzaXRlX25vJyxcblx0XHRcdCdjb2x1bW5fbmFtZSc6ICdzdGF0aW9uX25tJyxcblx0XHRcdCdpbnZlbnRvcnlfb3V0cHV0JzogMCxcblx0XHRcdCdyZGJfaW52ZW50b3J5X291dHB1dCc6ICdmaWxlJyxcblx0XHRcdCdiZWdpbl9kYXRlJzogJycsXG5cdFx0XHQnZW5kX2RhdGUnOiAnJyxcblx0XHRcdCdUWm91dHB1dCc6IDAsXG5cdFx0XHQncG1fY2RfdmFfc2VhcmNoJzogJycsXG5cdFx0XHQncG1fY2RfY29tcGFyZSc6ICdHcmVhdGVyJTIwdGhhbicsXG5cdFx0XHQncG1fY2RfcmVzdWx0X3ZhJzogJycsXG5cdFx0XHQncmFkaW9fcGFybV9jZHMnOiAncHJldmlvdXNfcGFybV9jZHMnLFxuXHRcdFx0J3JhZGlvX3ByZXZpb3VzX3Bhcm1fY2RzJzogJycsXG5cdFx0XHQncmFkaW9fbXVsdGlwbGVfcGFybV9jZHMnOiAnJyxcblx0XHRcdCdyYWRpb19wYXJtX2NkX2ZpbGUnOiAnJyxcdFx0XG5cdFx0XHQncXdfYXR0cmlidXRlcyc6IDAsXG5cdFx0XHQnZm9ybWF0JzogJ3JkYicsXG5cdFx0XHQncXdfc2FtcGxlX3dpZGUnOiAnd2lkZScsXG5cdFx0XHQncmRiX3F3X2F0dHJpYnV0ZXMnOiAwLFxuXHRcdFx0J2RhdGVfZm9ybWF0JzogJ1lZWVktTU0tREQnLFxuXHRcdFx0J3JkYl9jb21wcmVzc2lvbic6ICd2YWx1ZSdcblx0XHR9O1xuXG5cdFx0Ly9zZXBlcmF0ZSBtZXRob2QgaWYgd2UgaGF2ZSBhIGdlb0ZpbHRlclxuXHRcdGlmIChnZW9GaWx0ZXJGbGFnKSB7XG5cdFx0XHQvL3ZhciBpbnB1dEZpbGUgPSAnc2l0ZV9ub1xcbjQzMDEzODA3NDA0NDYwMVxcbjQyNTg1MTA3NDA4NTgwMVxcbjQyNTczMTA3NDE3MjkwMVxcbic7XG5cblx0XHRcdHZhciBpbnB1dEZpbGUgPSAnc2l0ZV9ub1xcbic7XG5cblx0XHRcdC8vZ2V0IGxpc3Qgb2Ygc2l0ZUlEcyBhbmQgd3JpdGUgaXQgb3V0IHRvIGEgc3RyaW5nXG5cdFx0XHQkLmVhY2goaW5wdXRHZW9KU09OLmZlYXR1cmVzWzBdLmZlYXR1cmVzLCBmdW5jdGlvbiggaW5kZXgsIGZlYXR1cmUgKSB7XG5cdFx0XHRcdGlucHV0RmlsZSArPSBmZWF0dXJlLnByb3BlcnRpZXMuc2l0ZUlEICsgJ1xcbic7XG5cdFx0XHR9KTtcblxuXHRcdFx0Ly9pbnB1dEZpbGUgPSBlbmNvZGVVUklDb21wb25lbnQoaW5wdXRGaWxlKTtcblxuXHRcdFx0Ly9hZGQgbWV0aG9kIHNwZWNpZmljIHBhcmFtc1xuXG5cdFx0XHRwYXJhbXMubXVsdGlwbGVfcGFyYW1ldGVyX2NkcyA9IChwYXJhbUNvZGVzID8gcGFyYW1Db2RlcyA6ICcwMDk0MCcpO1xuXHRcdFx0cGFyYW1zLmxpc3Rfb2Zfc2VhcmNoX2NyaXRlcmlhID0gJ3NpdGVfbm9fZmlsZV9hdHRhY2htZW50LG11bHRpcGxlX3BhcmFtZXRlcl9jZHMsc2l0ZV90cF9jZCc7XG5cdFx0XHRwYXJhbXMuc2l0ZV9ub19maWxlX2F0dGFjaG1lbnQgPSB7XG5cdFx0XHRcdHR5cGU6ICd0ZXh0L3BsYWluJyxcblx0XHRcdFx0ZmlsZW5hbWU6ICdzaXRlcy50eHQnLFxuXHRcdFx0XHRjb250ZW50OiBpbnB1dEZpbGVcblx0XHRcdH1cblxuXHRcdFx0Ly8gdmFyIHBhcmFtcyA9IHsgXG5cdFx0XHQvLyBcdCdzaXRlX25vX2ZpbGVfYXR0YWNobWVudCc6IHtcblx0XHRcdC8vIFx0XHR0eXBlOiAndGV4dC9wbGFpbicsXG5cdFx0XHQvLyBcdFx0ZmlsZW5hbWU6ICdzaXRlcy50eHQnLFxuXHRcdFx0Ly8gXHRcdGNvbnRlbnQ6IGlucHV0RmlsZVxuXHRcdFx0Ly8gXHR9LFxuXHRcdFx0Ly8gXHQnbXVsdGlwbGVfcGFyYW1ldGVyX2Nkcyc6IChwYXJhbUNvZGVzID8gcGFyYW1Db2RlcyA6ICcwMDk0MCcpLFxuXHRcdFx0Ly8gXHQnZ3JvdXBfa2V5JzogJ05PTkUnLCBcblx0XHRcdC8vIFx0J3NpdGVmaWxlX291dHB1dF9mb3JtYXQnOiAnaHRtbF90YWJsZScsXG5cdFx0XHQvLyBcdCdjb2x1bW5fbmFtZSc6ICdhZ2VuY3lfY2QnLFxuXHRcdFx0Ly8gXHQnY29sdW1uX25hbWUnOiAnc2l0ZV9ubycsXG5cdFx0XHQvLyBcdCdjb2x1bW5fbmFtZSc6ICdzdGF0aW9uX25tJyxcblx0XHRcdC8vIFx0J2ludmVudG9yeV9vdXRwdXQnOiAwLFxuXHRcdFx0Ly8gXHQncmRiX2ludmVudG9yeV9vdXRwdXQnOiAnZmlsZScsXG5cdFx0XHQvLyBcdCdiZWdpbl9kYXRlJzogJycsXG5cdFx0XHQvLyBcdCdlbmRfZGF0ZSc6ICcnLFxuXHRcdFx0Ly8gXHQnVFpvdXRwdXQnOiAwLFxuXHRcdFx0Ly8gXHQncG1fY2RfdmFfc2VhcmNoJzogJycsXG5cdFx0XHQvLyBcdCdwbV9jZF9jb21wYXJlJzogJ0dyZWF0ZXIlMjB0aGFuJyxcblx0XHRcdC8vIFx0J3BtX2NkX3Jlc3VsdF92YSc6ICcnLFxuXHRcdFx0Ly8gXHQncmFkaW9fcGFybV9jZHMnOiAncHJldmlvdXNfcGFybV9jZHMnLFxuXHRcdFx0Ly8gXHQncmFkaW9fcHJldmlvdXNfcGFybV9jZHMnOiAnJyxcblx0XHRcdC8vIFx0J3BhcmFtX2NkX29wZXJhdG9yJzogJycsXG5cdFx0XHQvLyBcdCdyYWRpb19tdWx0aXBsZV9wYXJtX2Nkcyc6ICcnLFxuXHRcdFx0Ly8gXHQncmFkaW9fcGFybV9jZF9maWxlJzogJycsXG5cdFx0XHQvLyBcdCdxd19hdHRyaWJ1dGVzJzogMCxcblx0XHRcdC8vIFx0J2Zvcm1hdCc6ICdyZGInLFxuXHRcdFx0Ly8gXHQncXdfc2FtcGxlX3dpZGUnOiAnd2lkZScsXG5cdFx0XHQvLyBcdCdyZGJfcXdfYXR0cmlidXRlcyc6IDAsXG5cdFx0XHQvLyBcdCdkYXRlX2Zvcm1hdCc6ICdZWVlZLU1NLUREJyxcblx0XHRcdC8vIFx0J3JkYl9jb21wcmVzc2lvbic6ICd2YWx1ZScsXG5cdFx0XHQvLyBcdCdsaXN0X29mX3NlYXJjaF9jcml0ZXJpYSc6ICdzaXRlX25vX2ZpbGVfYXR0YWNobWVudCxtdWx0aXBsZV9wYXJhbWV0ZXJfY2RzJ1xuXHRcdFx0Ly8gfVxuXG5cdFx0XHQvL2NvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHBhcmFtcykpO1xuXG5cdFx0XHR2YXIgYm91bmRhcnkgPSAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nICtcblx0XHRcdFx0XHRcdE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGgucG93KDEwLCA4KSk7XG5cblx0XHRcdHZhciBjb250ZW50ID0gW107XG5cdFx0XHRmb3IodmFyIGkgaW4gcGFyYW1zKSB7XG5cdFx0XHRcdGNvbnRlbnQucHVzaCgnLS0nICsgYm91bmRhcnkpO1xuXG5cdFx0XHRcdHZhciBtaW1lSGVhZGVyID0gJ0NvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT1cIicraSsnXCI7ICc7XG5cdFx0XHRcdGlmKHBhcmFtc1tpXS5maWxlbmFtZSlcblx0XHRcdFx0XHRtaW1lSGVhZGVyICs9ICdmaWxlbmFtZT1cIicrIHBhcmFtc1tpXS5maWxlbmFtZSArJ1wiOyc7XG5cdFx0XHRcdGNvbnRlbnQucHVzaChtaW1lSGVhZGVyKTtcblxuXHRcdFx0XHRpZihwYXJhbXNbaV0udHlwZSlcblx0XHRcdFx0XHRjb250ZW50LnB1c2goJ0NvbnRlbnQtVHlwZTogJyArIHBhcmFtc1tpXS50eXBlKTtcblxuXHRcdFx0XHRjb250ZW50LnB1c2goJycpO1xuXHRcdFx0XHRjb250ZW50LnB1c2gocGFyYW1zW2ldLmNvbnRlbnQgfHwgcGFyYW1zW2ldKTtcblx0XHRcdH07XG5cblx0XHRcdGNvbnRlbnQucHVzaCgnLS0nICsgYm91bmRhcnkpO1xuXG5cdFx0XHQvKiBVc2UgeW91ciBmYXZvcml0ZSB0b29sa2l0IGhlcmUgKi9cblx0XHRcdC8qIGl0IHNob3VsZCBzdGlsbCB3b3JrIGlmIHlvdSBjYW4gY29udHJvbCBoZWFkZXJzIGFuZCBQT1NUIHJhdyBkYXRhICovXG5cdFx0XHQkLmFqYXgoe1xuXHRcdFx0XHR0eXBlOidQT1NUJyxcblx0XHRcdFx0dXJsOiAnaHR0cHM6Ly9ud2lzLndhdGVyZGF0YS51c2dzLmdvdi9ueS9ud2lzL3F3ZGF0YScsXG5cdFx0XHRcdGRhdGE6IGNvbnRlbnQuam9pbignXFxyXFxuJyksXG5cdFx0XHRcdGhlYWRlcnM6IHtcblx0XHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ211bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PScgKyBib3VuZGFyeVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRjYWNoZTpmYWxzZSxcbiAgICBcdFx0XHRwcm9jZXNzRGF0YTpmYWxzZSxcblx0XHRcdFx0Y29udGVudFR5cGU6IGZhbHNlLFxuXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihkKSB7XG5cblx0XHRcdFx0XHR2YXIgcXdkYXRhID0gVVNHU3JkYjJKU09OKGQpO1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdnb3QgYSByZXNwb25zZTonLHF3ZGF0YS5sZW5ndGgsICdzaXRlcycpO1xuXG5cdFx0XHRcdFx0JC5lYWNoKGlucHV0R2VvSlNPTi5mZWF0dXJlc1swXS5mZWF0dXJlcywgZnVuY3Rpb24oIGluZGV4LCBmZWF0dXJlICkge1xuXG5cdFx0XHRcdFx0XHQvL2NyZWF0ZSBhIG5ldyBmZWF0dXJlXG5cdFx0XHRcdFx0XHR2YXIgc2l0ZUdlb0pTT04gPSBmZWF0dXJlO1xuXHRcdFx0XHRcdFx0dmFyIG1hdGNoRm91bmQgPSBmYWxzZTtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdC8vbG9vcCBvdmVyIHF3IHJlc3VsdHNcblx0XHRcdFx0XHRcdCQuZWFjaChxd2RhdGEsIGZ1bmN0aW9uKCBpbmRleCwgcXdTaXRlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vY2hlY2sgZm9yIGEgbWF0Y2hcblx0XHRcdFx0XHRcdFx0aWYgKGZlYXR1cmUucHJvcGVydGllcy5zaXRlSUQgPT09IHF3U2l0ZS5zaXRlX25vKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQkLmVhY2gocGFyYW1Db2Rlc0FycmF5LCBmdW5jdGlvbiggaW5kZXgsIHBhcmFtQ29kZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmKHF3U2l0ZS5oYXNPd25Qcm9wZXJ0eSgncCcgKyBwYXJhbUNvZGUpKXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2l0ZUdlb0pTT04ucHJvcGVydGllc1sncCcgKyBwYXJhbUNvZGUgKyAnfCcgKyBxd1NpdGUuc2FtcGxlX2R0ICsgJyAnICsgcXdTaXRlLnNhbXBsZV90bSArICcgJyArIHF3U2l0ZS5zYW1wbGVfc3RhcnRfdGltZV9kYXR1bV9jZCArICd8JyArIHF3U2l0ZS5tZWRpdW1fY2RdID0gcXdTaXRlWydwJyArIHBhcmFtQ29kZV07XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvL2NvbnNvbGUubG9nKHNpdGVHZW9KU09OLnByb3BlcnRpZXMpO1xuXHRcdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHRcdG1hdGNoRm91bmQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdC8vY29uc29sZS5sb2coJ21hdGNoIGZvdW5kOicsIHF3U2l0ZSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRpZiAobWF0Y2hGb3VuZCkge1xuXHRcdFx0XHRcdFx0XHR0ZW1wR2VvSlNPTi5mZWF0dXJlcy5wdXNoKHNpdGVHZW9KU09OKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGRyYXdHZW9KU09OKHRlbXBHZW9KU09OKTtcblxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKHRlbXBHZW9KU09OLmZlYXR1cmVzLmxlbmd0aCwgJ3NpdGVzIGxvYWRlZCcpO1xuXHRcdFx0XHRcdHRvYXN0ci5jbGVhcigpO1xuXG5cdFx0XHRcdFx0Ly9pcyB0aGVyZSBhIGJldHRlciB3YXkgdG8gZG8gdGhpcz9cblx0XHRcdFx0XHQkKCcjZmlsdGVyc1BhbmVsJykuY29sbGFwc2UoXCJ0b2dnbGVcIik7XG5cdFx0XHRcdFx0JCgnI2V4cG9ydFBhbmVsJykuY29sbGFwc2UoXCJ0b2dnbGVcIik7XG5cdFx0XHRcdH0sXG5cdFx0XHR9KTtcblx0XHR9XG5cblx0XHQvL290aGVyd2lzZSByZWd1bGFyIHBhcmFtYXRlciByZXF1ZXN0IG1ldGhvZFxuXHRcdGVsc2Uge1xuXG5cdFx0XHQkLmFqYXgoe1xuXHRcdFx0XHR1cmw6ICdodHRwczovL253aXMud2F0ZXJkYXRhLnVzZ3MuZ292L255L253aXMvcXdkYXRhJywgXG5cdFx0XHRcdGRhdGE6IHsgXG5cdFx0XHRcdFx0J2NvdW50eV9jZCc6IChzdGF0ZUNvdW50eSA/IHN0YXRlQ291bnR5IDogJycpLFxuXHRcdFx0XHRcdCdzaXRlX3RwX2NkJzogJ0dXJyxcblx0XHRcdFx0XHQnZ3JvdXBfa2V5JzogJ05PTkUnLCBcblx0XHRcdFx0XHQnc2l0ZWZpbGVfb3V0cHV0X2Zvcm1hdCc6ICdodG1sX3RhYmxlJyxcblx0XHRcdFx0XHQnY29sdW1uX25hbWUnOiAnYWdlbmN5X2NkJyxcblx0XHRcdFx0XHQnY29sdW1uX25hbWUnOiAnc2l0ZV9ubycsXG5cdFx0XHRcdFx0J2NvbHVtbl9uYW1lJzogJ3N0YXRpb25fbm0nLFxuXHRcdFx0XHRcdCdpbnZlbnRvcnlfb3V0cHV0JzogMCxcblx0XHRcdFx0XHQncmRiX2ludmVudG9yeV9vdXRwdXQnOiAnZmlsZScsXG5cdFx0XHRcdFx0J1Rab3V0cHV0JzogMCxcblx0XHRcdFx0XHQncG1fY2RfY29tcGFyZSc6ICdHcmVhdGVyJTIwdGhhbicsXG5cdFx0XHRcdFx0J3JhZGlvX3Bhcm1fY2RzJzogJ3Bhcm1fY2RfbGlzdCcsXG5cdFx0XHRcdFx0J3JhZGlvX211bHRpcGxlX3Bhcm1fY2RzJzogKHBhcmFtQ29kZXMgPyBwYXJhbUNvZGVzIDogJzAwOTQwJyksXG5cdFx0XHRcdFx0J3F3X2F0dHJpYnV0ZXMnOiAwLFxuXHRcdFx0XHRcdCdmb3JtYXQnOiAncmRiJyxcblx0XHRcdFx0XHQncXdfc2FtcGxlX3dpZGUnOiAnd2lkZScsXG5cdFx0XHRcdFx0J3JkYl9xd19hdHRyaWJ1dGVzJzogMCxcblx0XHRcdFx0XHQnZGF0ZV9mb3JtYXQnOiAnWVlZWS1NTS1ERCcsXG5cdFx0XHRcdFx0J3JkYl9jb21wcmVzc2lvbic6ICdZWVlZLU1NLUREJyxcblx0XHRcdFx0XHQnbGlzdF9vZl9zZWFyY2hfY3JpdGVyaWEnOiAnc2l0ZV90cF9jZCcsXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGRhdGFUeXBlOiAndGV4dCcsIFxuXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbihkKSB7XG5cblx0XHRcdFx0XHRcblx0XHRcdFx0XHR2YXIgcXdkYXRhID0gVVNHU3JkYjJKU09OKGQpO1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKCdnb3QgYSByZXNwb25zZTonLHF3ZGF0YS5sZW5ndGgsICdzaXRlcycpO1xuXG5cdFx0XHRcdFx0JC5lYWNoKGlucHV0R2VvSlNPTi5mZWF0dXJlc1swXS5mZWF0dXJlcywgZnVuY3Rpb24oIGluZGV4LCBmZWF0dXJlICkge1xuXG5cdFx0XHRcdFx0XHQvL2NyZWF0ZSBhIG5ldyBmZWF0dXJlXG5cdFx0XHRcdFx0XHR2YXIgc2l0ZUdlb0pTT04gPSBmZWF0dXJlO1xuXHRcdFx0XHRcdFx0dmFyIG1hdGNoRm91bmQgPSBmYWxzZTtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdC8vbG9vcCBvdmVyIHF3IHJlc3VsdHNcblx0XHRcdFx0XHRcdCQuZWFjaChxd2RhdGEsIGZ1bmN0aW9uKCBpbmRleCwgcXdTaXRlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vY2hlY2sgZm9yIGEgbWF0Y2hcblx0XHRcdFx0XHRcdFx0aWYgKGZlYXR1cmUucHJvcGVydGllcy5zaXRlSUQgPT09IHF3U2l0ZS5zaXRlX25vKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQkLmVhY2gocGFyYW1Db2Rlc0FycmF5LCBmdW5jdGlvbiggaW5kZXgsIHBhcmFtQ29kZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmKHF3U2l0ZS5oYXNPd25Qcm9wZXJ0eSgncCcgKyBwYXJhbUNvZGUpKXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2l0ZUdlb0pTT04ucHJvcGVydGllc1sncCcgKyBwYXJhbUNvZGUgKyAnfCcgKyBxd1NpdGUuc2FtcGxlX2R0ICsgJyAnICsgcXdTaXRlLnNhbXBsZV90bSArICcgJyArIHF3U2l0ZS5zYW1wbGVfc3RhcnRfdGltZV9kYXR1bV9jZCArICd8JyArIHF3U2l0ZS5tZWRpdW1fY2RdID0gcXdTaXRlWydwJyArIHBhcmFtQ29kZV07XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvL2NvbnNvbGUubG9nKHNpdGVHZW9KU09OLnByb3BlcnRpZXMpO1xuXHRcdFx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0XHRcdG1hdGNoRm91bmQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0XHRcdC8vY29uc29sZS5sb2coJ21hdGNoIGZvdW5kOicsIHF3U2l0ZSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRpZiAobWF0Y2hGb3VuZCkge1xuXHRcdFx0XHRcdFx0XHR0ZW1wR2VvSlNPTi5mZWF0dXJlcy5wdXNoKHNpdGVHZW9KU09OKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGRyYXdHZW9KU09OKHRlbXBHZW9KU09OKVxuXG5cdFx0XHRcdFx0Y29uc29sZS5sb2codGVtcEdlb0pTT04uZmVhdHVyZXMubGVuZ3RoLCAnc2l0ZXMgbG9hZGVkJyk7XG5cdFx0XHRcdFx0dG9hc3RyLmNsZWFyKCk7XG5cblx0XHRcdFx0XHQvL2lzIHRoZXJlIGEgYmV0dGVyIHdheSB0byBkbyB0aGlzP1xuXHRcdFx0XHRcdCQoJyNmaWx0ZXJzUGFuZWwnKS5jb2xsYXBzZShcInRvZ2dsZVwiKTtcblx0XHRcdFx0XHQkKCcjZXhwb3J0UGFuZWwnKS5jb2xsYXBzZShcInRvZ2dsZVwiKTtcblx0XHRcdFx0fVx0XG5cdFx0XHR9KTtcblx0XHR9XG5cdH1cblx0ZWxzZSB7XG5cdFx0dG9hc3RyLmVycm9yKCdFcnJvcicsICdObyBzaXRlcyB0byBkaXNwbGF5Jylcblx0fVxufVxuXG5mdW5jdGlvbiBqc29uVG9UYWJsZShqc29uKSB7XG5cbiAgICB2YXIgdGFibGUgPSAkKCc8dGFibGUgYm9yZGVyPTE+Jyk7XG4gICAgdmFyIHRibEhlYWRlciA9ICc8dHI+JztcbiAgICBmb3IgKHZhciBrIGluIGpzb25bMF0pIHRibEhlYWRlciArPSAnPHRoPicgKyBrICsgJzwvdGg+JztcbiAgICB0YmxIZWFkZXIgKz0gJzwvdHI+JztcbiAgICAkKHRibEhlYWRlcikuYXBwZW5kVG8odGFibGUpO1xuICAgICQuZWFjaChqc29uLCBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7XG4gICAgICAgIHZhciBUYWJsZVJvdyA9ICc8dHI+JztcbiAgICAgICAgJC5lYWNoKHZhbHVlLCBmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICAgICAgICAgIFRhYmxlUm93ICs9ICc8dGQ+JyArIHZhbCArICc8L3RkPic7XG4gICAgICAgIH0pO1xuICAgICAgICBUYWJsZVJvdyArPSAnPC90cj4nO1xuICAgICAgICAkKHRhYmxlKS5hcHBlbmQoVGFibGVSb3cpO1xuICAgIH0pO1xuICAgIHJldHVybiAoJCh0YWJsZSkpO1xufTtcblxuZnVuY3Rpb24gZG93bmxvYWRHZW9KU09OKCkge1xuXG5cdC8vZm9yIHNvbWUgcmVhc29uIHRoZSBsZWFmbGV0IHRvR2VvSlNPTiB3cmFwcyB0aGUgZ2VvanNvbiBpbiBhIHNlY29uZCBmZWF0dXJlIGNvbGxlY3Rpb25cblx0aWYgKHNpdGVzTGF5ZXIudG9HZW9KU09OKCkuZmVhdHVyZXNbMF0pIHtcblx0XHR2YXIgR2VvSlNPTiA9IEpTT04uc3RyaW5naWZ5KHNpdGVzTGF5ZXIudG9HZW9KU09OKCkuZmVhdHVyZXNbMF0pO1xuXHRcdHZhciBmaWxlbmFtZSA9ICdkYXRhLmdlb2pzb24nO1xuXHRcdGRvd25sb2FkRmlsZShHZW9KU09OLGZpbGVuYW1lKVxuXHR9XG5cdGVsc2Uge1xuXHRcdHRvYXN0ci5lcnJvcignRXJyb3InLCAnTm8gc2l0ZXMgdG8gZXhwb3J0Jylcblx0fVxufVxuXG5mdW5jdGlvbiBkb3dubG9hZEtNTCgpIHtcblx0Ly9odHRwczovL2dpdGh1Yi5jb20vbWFwYm94L3Rva21sXG5cdC8vaHR0cHM6Ly9naXMuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzE1OTM0NC9leHBvcnQtdG8ta21sLW9wdGlvbi11c2luZy1sZWFmbGV0XG5cdGlmIChzaXRlc0xheWVyLnRvR2VvSlNPTigpLmZlYXR1cmVzWzBdKSB7XG5cdFx0dmFyIEdlb0pTT04gPSBzaXRlc0xheWVyLnRvR2VvSlNPTigpLmZlYXR1cmVzWzBdO1xuXHRcdHZhciBrbWwgPSB0b2ttbChHZW9KU09OKTtcblx0XHR2YXIgZmlsZW5hbWUgPSAnZGF0YS5rbWwnO1xuXHRcdGRvd25sb2FkRmlsZShrbWwsZmlsZW5hbWUpO1xuXHR9XG5cdGVsc2Uge1xuXHRcdHRvYXN0ci5lcnJvcignRXJyb3InLCAnTm8gc2l0ZXMgdG8gZXhwb3J0Jylcblx0fVxufVxuXG5mdW5jdGlvbiBkb3dubG9hZEZpbGUoZGF0YSxmaWxlbmFtZSkge1xuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtkYXRhXSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xuXHRpZiAobmF2aWdhdG9yLm1zU2F2ZUJsb2IpIHsgLy8gSUUgMTArXG5cdFx0bmF2aWdhdG9yLm1zU2F2ZUJsb2IoYmxvYiwgZmlsZW5hbWUpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuXHRcdHZhciB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXHRcdGlmIChsaW5rLmRvd25sb2FkICE9PSB1bmRlZmluZWQpIHsgLy8gZmVhdHVyZSBkZXRlY3Rpb25cblx0XHRcdC8vIEJyb3dzZXJzIHRoYXQgc3VwcG9ydCBIVE1MNSBkb3dubG9hZCBhdHRyaWJ1dGVcblx0XHRcdGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcblx0XHRcdGxpbmsuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsIGZpbGVuYW1lKTtcblx0XHRcdGxpbmsuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuXHRcdFx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcblx0XHRcdGxpbmsuY2xpY2soKTtcblx0XHRcdGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0d2luZG93Lm9wZW4odXJsKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gVVNHU3JkYjJKU09OKHRzdil7XG5cblx0dmFyIGxpbmVzPXRzdi5zcGxpdCgvXFxyP1xcbi8pO1xuXHR2YXIgcmVzdWx0ID0gW107XG5cdHZhciBoZWFkZXJzO1xuXG5cdCQuZWFjaChsaW5lcywgZnVuY3Rpb24oIGluZGV4LCBsaW5lICkge1xuXHRcdHZhciBvYmogPSB7fTtcblx0XHRpZihsaW5lWzBdICE9ICcjJykge1x0XHRcblx0XHRcdHZhciBjdXJyZW50bGluZT1saW5lLnNwbGl0KCdcXHQnKTtcblxuXHRcdFx0aWYgKGN1cnJlbnRsaW5lWzBdID09PSAnYWdlbmN5X2NkJykge1xuXHRcdFx0XHRoZWFkZXJzPWN1cnJlbnRsaW5lO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGN1cnJlbnRsaW5lWzBdICE9PSAnNXMnICYmIGN1cnJlbnRsaW5lWzBdICE9PSAnYWdlbmN5X2NkJykge1xuXHRcdFx0XHQvL2NvbnNvbGUubG9nKGN1cnJlbnRsaW5lKVxuXG5cdFx0XHRcdGZvcih2YXIgaj0wO2o8aGVhZGVycy5sZW5ndGg7aisrKXtcblx0XHRcdFx0XHRvYmpbaGVhZGVyc1tqXV0gPSBjdXJyZW50bGluZVtqXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdC5wdXNoKG9iaikgXG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcbiAgXG5cdC8vcmV0dXJuIHJlc3VsdDsgLy9KYXZhU2NyaXB0IG9iamVjdFxuXHRyZXR1cm4gcmVzdWx0OyAvL0pTT05cbn1cblxuZnVuY3Rpb24gc2V0QmFzZW1hcChiYXNlTWFwKSB7XG5cblx0c3dpdGNoIChiYXNlTWFwKSB7XG5cdFx0Y2FzZSAnU3RyZWV0cyc6IGJhc2VNYXAgPSAnU3RyZWV0cyc7IGJyZWFrO1xuXHRcdGNhc2UgJ1NhdGVsbGl0ZSc6IGJhc2VNYXAgPSAnSW1hZ2VyeSc7IGJyZWFrO1xuXHRcdGNhc2UgJ1RvcG8nOiBiYXNlTWFwID0gJ1RvcG9ncmFwaGljJzsgYnJlYWs7XG5cdFx0Y2FzZSAnVGVycmFpbic6IGJhc2VNYXAgPSAnVGVycmFpbic7IGJyZWFrO1xuXHRcdGNhc2UgJ0dyYXknOiBiYXNlTWFwID0gJ0dyYXknOyBicmVhaztcblx0XHRjYXNlICdOYXRHZW8nOiBiYXNlTWFwID0gJ05hdGlvbmFsR2VvZ3JhcGhpYyc7IGJyZWFrO1xuXHR9XG5cblx0aWYgKGJhc2VNYXBMYXllcikgXHRtYXAucmVtb3ZlTGF5ZXIoYmFzZU1hcExheWVyKTtcblx0YmFzZU1hcExheWVyID0gTC5lc3JpLmJhc2VtYXBMYXllcihiYXNlTWFwKTtcblx0bWFwLmFkZExheWVyKGJhc2VNYXBMYXllcik7XG5cdGlmIChiYXNlbWFwTGF5ZXJMYWJlbHMpIG1hcC5yZW1vdmVMYXllcihiYXNlbWFwTGF5ZXJMYWJlbHMpO1xuXHRpZiAoYmFzZU1hcCA9PT0gJ0dyYXknIHx8IGJhc2VNYXAgPT09ICdJbWFnZXJ5JyB8fCBiYXNlTWFwID09PSAnVGVycmFpbicpIHtcblx0XHRiYXNlbWFwTGF5ZXJMYWJlbHMgPSBMLmVzcmkuYmFzZW1hcExheWVyKGJhc2VNYXAgKyAnTGFiZWxzJyk7XG5cdFx0bWFwLmFkZExheWVyKGJhc2VtYXBMYXllckxhYmVscyk7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVzZXRWaWV3KCkge1xuXG5cdC8vcmVzZXQgZ2VvIEZpbHRlciBmbGFnXG5cdGdlb0ZpbHRlckZsYWcgPSBmYWxzZTtcblxuXHQvL2NsZWFyIGFueSBzZWxlY3Rpb24gZ3JhcGhpY3Ncblx0c2l0ZXNMYXllci5jbGVhckxheWVycygpO1xuXG5cdC8vcmVzZXQgdmlld1xuXHRtYXAuc2V0VmlldyhbTWFwWSwgTWFwWF0sIDcpO1xufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9zY3JpcHRzL2FwcC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ },

/***/ 12:
/***/ function(module, exports) {

	eval("module.exports = \"<!--\\r\\n------------------------------------------------------------------------------\\r\\n----- NY Go2 Mapper ----------------------------------------------------------\\r\\n------------------------------------------------------------------------------\\r\\n\\r\\ncopyright:   2013 Martyn Smith - USGS NY WSC\\r\\n\\r\\nauthors:  Martyn J. Smith - USGS NY WSC\\r\\n\\r\\npurpose:  Web Mapping interface for Go2 Mapper system\\r\\n------------------------------------------------------------------------------\\r\\n-->\\r\\n<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <meta name=\\\"author\\\" content=\\\"Martyn Smith - USGS NY WSC\\\">\\r\\n\\t<link rel=\\\"copyright\\\" href=\\\"license.txt\\\">\\r\\n    <title>NY WSC QW Mapper</title>\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\\\">\\r\\n    <script src=\\\"./scripts/vendor.bundle.min.js\\\"></script>\\r\\n    <script src=\\\"./scripts/bundle.min.js\\\"></script>  \\r\\n  </head>\\r\\n  <body>\\r\\n    <div id=\\\"top-menu\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n            <a class='top-menu-brand' href=\\\"http://www.usgs.gov\\\"><img src=\\\"images/usgs-logo.png\\\"></a>\\r\\n            <span class=\\\"app-name\\\">NY WSC QW Mapper</span> <span class=\\\"app-name-mobile\\\">NY WSC QW Mapper</span> \\r\\n        </div>\\r\\n        <div id=\\\"mobile-main-menu\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-menu-hamburger\\\" ></span>\\r\\n        </div>\\r\\n\\r\\n        <button id=\\\"aboutButton\\\" class=\\\"btn btn-default top-menu-btn pull-right\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-info-sign\\\"></i><span class=\\\"hidden-xs\\\">&nbsp;&nbsp;About</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"main-menu\\\">\\r\\n        <div class=\\\"main-menu-container scrollable\\\">\\r\\n            <div class=\\\"menu-content\\\"> \\r\\n                <div class=\\\"scrollable-content\\\">\\r\\n\\r\\n                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#sitesPanel\\\">\\r\\n                                        Sites\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"sitesPanel\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                                <div class=\\\"panel-body collapse in\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"loadSites\\\" >Load Sites</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-block\\\" id=\\\"resetView\\\" >Reset View</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#filtersPanel\\\">\\r\\n                                        Filters\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"filtersPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">     \\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"resetFilters\\\" >Reset Filters</button>\\r\\n\\r\\n                                    <div id=\\\"filters\\\"></div>\\r\\n                                    <div id=\\\"geoFilterSelect\\\">\\r\\n                                        </br><label>Select one or more of the following geographic filters.  Multiple selections are allowed.</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        </br><label>Parameter Codes:&nbsp;&nbsp;</label><small>(comma separated)</small>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parameterCodes\\\" value=\\\"00940\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"getQWdata\\\" >Filter and get QW Data</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#exportPanel\\\">\\r\\n                                        Export\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"exportPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">     \\r\\n                                    <div id=\\\"export\\\" style=\\\"display:block;\\\">\\r\\n   \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportGeoJSON\\\" >Export GeoJSON&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportKML\\\" >Export KML&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#basemapsPanel\\\">\\r\\n                                        Basemaps\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"basemapsPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <button id=\\\"btnStreets\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/streets.jpg\\\"><br class=\\\"basemapThumb\\\">Streets</button>\\r\\n                                    <button id=\\\"btnSatellite\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/satellite.jpg\\\"><br class=\\\"basemapThumb\\\">Satellite</button>\\r\\n                                    <button id=\\\"btnTopo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/topo.jpg\\\"><br class=\\\"basemapThumb\\\">Topo</button>\\r\\n                                    <button id=\\\"btnTerrain\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/terrain.jpg\\\"><br class=\\\"basemapThumb\\\">Terrain</button>\\r\\n                                    <button id=\\\"btnGray\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize slick-btn-selection\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/gray.jpg\\\"><br class=\\\"basemapThumb\\\">Gray</button>\\r\\n                                    <button id=\\\"btnNatGeo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/natgeo.jpg\\\"><br class=\\\"basemapThumb\\\">NatGeo</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"info\\\" class=\\\"identification pull-right\\\">Developed by USGS NY WSC</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <div id=\\\"aboutModal\\\" class=\\\"modal fade\\\"  tabindex=\\\"-1\\\" role=\\\"dialog\\\" >\\r\\n        <div class=\\\"modal-dialog  modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" style=\\\"color:gray;\\\">&times;</button>\\r\\n                    <h4 class=\\\"modal-title\\\">NY WSC Go2 Mapper</h4>\\r\\n                </div>\\r\\n                <div id=\\\"aboutModalBody\\\" class=\\\"modal-body\\\">\\r\\n                    <ul class=\\\"nav nav-tabs\\\" id=\\\"aboutModalTabs\\\">\\r\\n                        <li role=\\\"presentation\\\" class=\\\"active\\\"><a id=\\\"aboutTab\\\" href=\\\"#aboutTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-question-circle\\\"></i>&nbsp;About the application</a></li>\\r\\n                        <li role=\\\"presentation\\\"><a id=\\\"disclaimerTab\\\" href=\\\"#disclaimerTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-exclamation-circle\\\"></i>&nbsp;Site Information</a></li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"tab-content\\\">\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane active\\\" id=\\\"aboutTabPane\\\"></br>\\r\\n                            <p>Developed by Martyn Smith and Todd Siskin of the NY WSC.  Licensed under <a href=\\\"./license.txt\\\" target=\\\"_blank\\\">Apache 2.0</a></p>\\r\\n                            <p>Portions of this application were developed in conjuction with <a href=\\\"http://wim.usgs.gov\\\" target=\\\"_blank\\\">Web Informatics and Mapping (WiM)</a></p>\\r\\n                            <p>Icons created by David McCulloch, USGS</p></br>\\r\\n                            <span id=\\\"appVersion\\\"></span>\\r\\n                        </div>\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane\\\" id=\\\"disclaimerTabPane\\\"></br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\"><h4>Missing Sites in SiteList.json</h4>\\r\\n                                    <ul id=\\\"missingSites\\\"></ul>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\"><h4>Missing Sites in TripList.json</h4>\\r\\n                                    <ul id=\\\"noTripSites\\\"></ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--<div class=\\\"modal-footer\\\">\\r\\n                </div>-->\\r\\n            </div><!-- /.modal-content -->\\r\\n        </div> <!-- /.modal-dialog -->\\r\\n    </div><!-- /.modal -->\\r\\n\\r\\n    <div id=\\\"mapDiv\\\">\\r\\n        <div id=\\\"NWSlegend\\\"></div>\\r\\n        <div id=\\\"radarTimeStamp\\\" style=\\\"font-size:x-small;\\\"></div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

});