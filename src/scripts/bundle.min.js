webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(toastr, $, __webpack_provided_L_dot_esri, within, tokml) {// ------------------------------------------------------------------------------\n// ----- NY QW Mapper ----------------------------------------------------------\n// ------------------------------------------------------------------------------\n\n// copyright:   2016 Martyn Smith - USGS NY WSC\n\n// authors:  Martyn J. Smith - USGS NY WSC\n\n// purpose:  Web Mapping interface for NY QW data\n\n// updates:\n// 12.02.2016 mjs - Created\n\n//config variables\nvar MapX = '-76.2';\nvar MapY = '42.7';\nvar map;\nvar sitesGeoJSON; //master geoJSON object of universe of sitesGeoJSON\nvar sitesLayer; //leaflet feature group representing current filtered set of sites\nvar baseMapLayer, basemapLayerLabels;\nvar filterGroupList = ['County', 'HUC', 'Aquifer', 'WellDepth'];\nvar geojsonMarkerOptions = {\n\tradius: 4,\n\tfillColor: '#ff7800',\n\tcolor: '#000',\n\tweight: 1,\n\topacity: 1,\n\tfillOpacity: 0.8\n};\nvar geoFilterFlag;\n\nvar layerList = [{ layerID: \"1\", layerName: \"NY WSC Sub-district\", outFields: [\"subdist\", \"FID\"], dropDownID: \"WSCsubDist\" }, { layerID: \"2\", layerName: \"Senate District\", outFields: [\"NAMELSAD\", \"FID\", \"Rep_Name\"], dropDownID: \"SenateDist\" }, { layerID: \"3\", layerName: \"Assembly District\", outFields: [\"NAMELSAD\", \"FID\", \"AD_Name\"], dropDownID: \"AssemDist\" }, { layerID: \"4\", layerName: \"Congressional District\", outFields: [\"NAMELSAD\", \"FID\", \"CD_Name\"], dropDownID: \"CongDist\" }, { layerID: \"5\", layerName: \"County\", outFields: [\"County_Nam\", \"FID\"], dropDownID: \"County\" }, { layerID: \"6\", layerName: \"Hydrologic Unit\", outFields: [\"HUC_8\", \"FID\", \"HU_8_Name\"], dropDownID: \"HUC8\" }];\n\nvar allLayers = [{\n\t\"groupHeading\": \"Filters\",\n\t\"showGroupHeading\": false,\n\t\"includeInLayerList\": false,\n\t\"layers\": {\n\t\t\"Gages\": {\n\t\t\t\"url\": \"https://www.sciencebase.gov/arcgis/rest/services/Catalog/56ba63bae4b08d617f6490d2/MapServer/0\",\n\t\t\t\"visible\": true,\n\t\t\t\"opacity\": 0.8,\n\t\t\t\"wimOptions\": {\n\t\t\t\t\"type\": \"layer\",\n\t\t\t\t\"layerType\": \"agisFeature\",\n\t\t\t\t\"includeInLayerList\": true\n\t\t\t}\n\t\t}\n\t}\n}, {\n\t\"groupHeading\": \"Filters\",\n\t\"showGroupHeading\": true,\n\t\"includeInLayerList\": true,\n\t\"layers\": {\n\t\t\"USGS Sub-district\": {\n\t\t\t\"url\": \"https://www.sciencebase.gov/arcgis/rest/services/Catalog/56ba63bae4b08d617f6490d2/MapServer\",\n\t\t\t\"layers\": [1, 2, 3, 4, 5, 6],\n\t\t\t\"visible\": false,\n\t\t\t\"opacity\": 0.8,\n\t\t\t\"wimOptions\": {\n\t\t\t\t\"type\": \"layer\",\n\t\t\t\t\"layerType\": \"agisDynamic\",\n\t\t\t\t\"includeInLayerList\": true\n\t\t\t}\n\t\t}\n\t}\n}];\n\nvar ny = {\n\t\"type\": \"FeatureCollection\",\n\t\"features\": [{\n\t\t\"type\": \"Feature\",\n\t\t\"properties\": { \"state\": \"ny\" },\n\t\t\"geometry\": {\n\t\t\t\"type\": \"Polygon\",\n\t\t\t\"coordinates\": [[[-80.035400390625, 40.455307212131494], [-80.035400390625, 45.19752230305682], [-71.663818359375, 45.19752230305682], [-71.663818359375, 40.455307212131494], [-80.035400390625, 40.455307212131494]]]\n\t\t}\n\t}]\n};\n\ntoastr.options = {\n\t'positionClass': 'toast-bottom-right'\n};\n\nif (true) {\n\t__webpack_require__(12);\n}\n\n//instantiate map\n$(document).ready(function () {\n\tconsole.log('Application Information: ' + (\"development\") + ' ' + 'version ' + (\"0.0.1\"));\n\t$('#appVersion').html('Application Information: ' + (\"development\") + ' ' + 'version ' + (\"0.0.1\"));\n\n\t//create map\n\tmap = L.map('mapDiv', { zoomControl: false });\n\n\t//add zoom control with your options\n\tL.control.zoom({ position: 'topright' }).addTo(map);\n\tL.control.scale().addTo(map);\n\n\t//basemap\n\tlayer = L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', {\n\t\tattribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ',\n\t\tmaxZoom: 16\n\t}).addTo(map);\n\n\t//set initial view\n\tmap.setView([MapY, MapX], 7);\n\n\t//define layers\n\tsitesLayer = L.featureGroup().addTo(map);\n\n\t//createFilterGroups();\n\tparseBaseLayers();\n\t//loadSites();\n\n\t/*  START EVENT HANDLERS */\n\t$('#mobile-main-menu').click(function () {\n\t\t$('body').toggleClass('isOpenMenu');\n\t});\n\n\t$('.basemapBtn').click(function () {\n\t\t$('.basemapBtn').removeClass('slick-btn-selection');\n\t\t$(this).addClass('slick-btn-selection');\n\t\tvar baseMap = this.id.replace('btn', '');\n\t\tsetBasemap(baseMap);\n\t});\n\n\t$('#loadSites').click(function () {\n\t\tloadSites();\n\t});\n\n\t$('#resetView').click(function () {\n\t\tresetView();\n\t});\n\n\t$('#resetFilters').click(function () {\n\t\tresetFilters();\n\t});\n\n\t$('#aboutButton').click(function () {\n\t\t$('#aboutModal').modal('show');\n\t});\n\n\t$('#getQWdata').click(function () {\n\t\tgetQWdata();\n\t});\n\n\t$('#exportGeoJSON').click(function () {\n\t\tdownloadGeoJSON();\n\t});\n\n\t$('#exportKML').click(function () {\n\t\tdownloadKML();\n\t});\n\n\t$('.NWISselect').on('change', function () {\n\t\tvar selectName = $('option:selected', this).parent().attr('id');\n\t\tvar optionName = $('option:selected', this).text();\n\t\tvar optionValue = $('option:selected', this).attr('value');\n\t\tvar filterInfo = { selectName: selectName, optionName: optionName, optionValue: optionValue };\n\t\tfilterSites(filterInfo);\n\t});\n\n\t$('.geoFilterSelect').change(function (event) {\n\n\t\t$('#loadingResults').show();\n\n\t\tvar layerID = $('#' + event.target.id + ' :selected').attr('layerID');\n\t\tvar value = $('#' + event.target.id + ' :selected').attr('value');\n\t\tvar name = $('#' + event.target.id + ' :selected').text();\n\n\t\tconsole.log('Dropdown filter selected: ', layerID, value, name);\n\t\tif (layerID.length < 1) {\n\t\t\tmap.graphics.clear();\n\t\t\tfeatureLayer.clearSelection();\n\t\t\treturn;\n\t\t}\n\n\t\tmapServer.query().layer(layerID).returnGeometry(true).where(\"FID = \" + value).run(function (error, featureCollection) {\n\t\t\tclipSites(featureCollection);\n\t\t});\n\t});\n\n\t/*  END EVENT HANDLERS */\n});\n\nfunction resetFilters() {\n\tresetView();\n\n\tvar geoJSONlayer = L.geoJSON(sitesGeoJSON, {\n\t\tpointToLayer: function (feature, latlng) {\n\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t},\n\t\tonEachFeature: function (feature, layer) {\n\t\t\tlayer.bindPopup('<b>' + feature.properties.siteID + '</b></br></br>' + feature.properties.siteName + '</br><a href=\"http://waterdata.usgs.gov/nwis/inventory/?site_no=' + feature.properties.siteID + '\" target=\"_blank\">Access Data</a></br></br>');\n\t\t}\n\t});\n\n\tsitesLayer.addLayer(geoJSONlayer);\n\tconsole.log(sitesGeoJSON.features.length, 'sites loaded');\n}\n\nfunction parseBaseLayers() {\n\t$.each(allLayers, function (index, group) {\n\t\tconsole.log('processing: ', group.groupHeading);\n\n\t\t//sub-loop over layers within this groupType\n\t\t$.each(group.layers, function (mapServerName, mapServerDetails) {\n\n\t\t\tif (mapServerDetails.wimOptions.layerType === 'agisFeature') {\n\t\t\t\tfeatureLayer = __webpack_provided_L_dot_esri.featureLayer({ url: mapServerDetails.url });\n\t\t\t\t//addLayer(group.groupHeading, group.showGroupHeading, layer, mapServerName, mapServerDetails);\n\t\t\t} else if (mapServerDetails.wimOptions.layerType === 'agisDynamic') {\n\t\t\t\tmapServer = __webpack_provided_L_dot_esri.dynamicMapLayer(mapServerDetails);\n\t\t\t\t// addMapLayer(mapServer, mapServerName, mapServerDetails);\n\n\t\t\t\tsetupGeoFilters(layerList);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction setupGeoFilters(layerList) {\n\n\t$.each(layerList, function (index, value) {\n\n\t\t//append a new dropdown\n\t\t$(\"#geoFilterSelect\").append(\"<h5>\" + value.layerName + \"</h5><select id='\" + value.dropDownID + \"' class='form-control geoFilterSelect' style='margin-bottom:10px;'></select>\");\n\t\t// $('#filters').append('<select class=\"form-control NWISselect\" id=\"' + filterName + 'Select\"><option selected=\"selected\" value=\"default\">Select a ' + filterName + '</option></select>');\n\n\t\t//execute the query task then populate the dropdown menu with list\n\t\tmapServer.query().layer(value.layerID).returnGeometry(false).fields(value.outFields).where(\"1=1\").run(function (error, featureCollection) {\n\n\t\t\tvar features = featureCollection.features;\n\t\t\tfor (var i = 0; i < features.length; i++) {\n\t\t\t\t//console.log('adding: ',features[i].properties[value.outFields[0]], 'to the div: ',value.dropDownID);\n\n\t\t\t\t$(\"#\" + value.dropDownID).append($('<option></option>').attr('layerID', value.layerID).val(features[i].properties[value.outFields[1]]).html(features[i].properties[value.outFields[0]]));\n\t\t\t}\n\t\t\t//sort the options list \n\t\t\t$(\"#\" + value.dropDownID).html($(\"#\" + value.dropDownID + \" option\").sort(function (a, b) {\n\t\t\t\treturn a.text == b.text ? 0 : a.text < b.text ? -1 : 1;\n\t\t\t}));\n\t\t\t//add the default option\n\t\t\t$(\"#\" + value.dropDownID).prepend(\"<option layerID='' selected='selected'>Select a \" + value.layerName + \"</option>\");\n\t\t});\n\t\t//break the loop for testing\n\t\t//return false;\n\t});\n}\n\nfunction clipSites(polyGeoJSON) {\n\n\t//console.log('selected: ', filterInfo);\n\ttoastr.info('Filtering sites...', { timeOut: 0 });\n\n\t//get the first feature and add to map \n\tif (polyGeoJSON.features.length > 0) {\n\n\t\tvar inputGeoJSON = sitesLayer.toGeoJSON().features[0];\n\t\tconsole.log('clip inputs:', inputGeoJSON, polyGeoJSON);\n\t\tvar ptsWithin = within(inputGeoJSON, polyGeoJSON);\n\t\tconsole.log('clip result:', ptsWithin);\n\n\t\tif (ptsWithin.features.length > 0) {\n\n\t\t\t//clear current display layer\n\t\t\tsitesLayer.clearLayers();\n\n\t\t\tgeoFilterFlag = true;\n\n\t\t\tvar geoJSONlayer = L.geoJson(ptsWithin, {\n\t\t\t\tpointToLayer: function (feature, latlng) {\n\t\t\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t\t\t},\n\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\tlayer.bindPopup('<b>' + feature.properties.siteID + '</b></br></br>' + feature.properties.siteName + '</br><a href=\"http://waterdata.usgs.gov/nwis/inventory/?site_no=' + feature.properties.siteID + '\" target=\"_blank\">Access Data</a></br></br>');\n\t\t\t\t}\n\t\t\t});\n\t\t\tsitesLayer.addLayer(geoJSONlayer);\n\t\t\tmap.fitBounds(sitesLayer.getBounds());\n\t\t} else {\n\t\t\ttoastr.clear();\n\t\t\ttoastr.error('Error', 'No sites to display');\n\t\t}\n\t}\n}\n\nfunction summarizeSites(featureCollection) {\n\n\t//get the first feature and add to map \n\tif (featureCollection.features.length > 0) {\n\n\t\t$.each(featureCollection.features, function (index, value) {\n\n\t\t\tconsole.log(index, value);\n\t\t});\n\t}\n}\n\nfunction filterSites(filterInfo) {\n\n\t//console.log('selected: ', filterInfo);\n\ttoastr.info('Filtering sites...', { timeOut: 0 });\n\n\t//clear current display layer\n\tsitesLayer.clearLayers();\n\n\tvar geoJSONlayer = L.geoJson(sitesGeoJSON, {\n\t\tfilter: function (feature, layer) {\n\t\t\tif (filterInfo.selectName === 'CountySelect') return feature.properties.countyCode === filterInfo.optionValue;\n\t\t\tif (filterInfo.selectName === 'HUCSelect') return feature.properties.hucCode === filterInfo.optionValue;\n\t\t\tif (filterInfo.selectName === 'AquiferSelect') return feature.properties.aquiferCode === filterInfo.optionValue;\n\t\t\tif (filterInfo.selectName === 'WellDepthSelect') return feature.properties.wellDepth === filterInfo.optionValue;\n\t\t},\n\t\tpointToLayer: function (feature, latlng) {\n\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t},\n\t\tonEachFeature: function (feature, layer) {\n\t\t\tlayer.bindPopup('<b>' + feature.properties.siteID + '</b></br></br>' + feature.properties.siteName + '</br><a href=\"http://waterdata.usgs.gov/nwis/inventory/?site_no=' + feature.properties.siteID + '\" target=\"_blank\">Access Data</a></br></br>');\n\t\t}\n\t});\n\n\tsitesLayer.addLayer(geoJSONlayer);\n\tmap.fitBounds(sitesLayer.getBounds());\n\ttoastr.clear();\n}\n\nfunction loadSites() {\n\n\t//reset geo Filter flag\n\tgeoFilterFlag = false;\n\n\tsitesLayer.clearLayers();\n\tsitesGeoJSON = { 'type': 'FeatureCollection', 'features': [] };\n\ttoastr.info('Querying NWIS...', { timeOut: 0 });\n\n\t$.ajax({\n\t\t//url: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata?site_tp_cd=GW&format=sitefile_output&sitefile_output_format=xml&column_name=agency_cd&column_name=site_no&column_name=station_nm&column_name=dec_lat_va&column_name=dec_long_va&column_name=county_cd&column_name=huc_cd&column_name=aqfr_cd&column_name=well_depth_va&inventory_output=0&rdb_inventory_output=file&TZoutput=0&pm_cd_compare=Greater%20than&radio_parm_cds=all_parm_cds&qw_attributes=0&qw_sample_wide=wide&rdb_qw_attributes=0&date_format=YYYY-MM-DD&rdb_compression=file&list_of_search_criteria=site_tp_cd&column_name=site_tp_cd&column_name=dec_lat_va&column_name=dec_long_va&column_name=agency_use_cd'\n\t\turl: './qwdataAll.xml',\n\t\tdataType: 'xml',\n\t\tsuccess: function (xml) {\n\n\t\t\ttoastr.clear();\n\t\t\ttoastr.info('Parsing sites...', { timeOut: 0 });\n\n\t\t\t$(xml).find('site').each(function () {\n\n\t\t\t\t//get properties\n\t\t\t\tvar siteID = $(this).find('site_no').text();\n\t\t\t\tvar siteName = $(this).find('station_nm').text();\n\t\t\t\tvar latDD = $(this).find('dec_lat_va').text();\n\t\t\t\tvar lonDD = $(this).find('dec_long_va').text();\n\t\t\t\tvar agencyCode = $(this).find('agency_cd').text();\n\t\t\t\tvar countyCode = $(this).find('county_cd').text();\n\t\t\t\tvar hucCode = $(this).find('huc_cd').text();\n\t\t\t\tvar aquiferCode = $(this).find('aqfr_cd').text();\n\t\t\t\tvar wellDepth = $(this).find('well_depth_va').text();\n\n\t\t\t\tvar siteGeoJSON = {\n\t\t\t\t\t'type': 'Feature',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'siteID': siteID,\n\t\t\t\t\t\t'siteName': siteName,\n\t\t\t\t\t\t'latDD': latDD,\n\t\t\t\t\t\t'lonDD': lonDD,\n\t\t\t\t\t\t'agencyCode': agencyCode,\n\t\t\t\t\t\t'countyCode': countyCode,\n\t\t\t\t\t\t'hucCode': hucCode,\n\t\t\t\t\t\t'aquiferCode': aquiferCode,\n\t\t\t\t\t\t'wellDepth': wellDepth\n\t\t\t\t\t},\n\t\t\t\t\t'geometry': {\n\t\t\t\t\t\t'type': 'Point',\n\t\t\t\t\t\t'coordinates': [parseFloat(lonDD), parseFloat(latDD)]\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tsitesGeoJSON.features.push(siteGeoJSON);\n\n\t\t\t\t// //add to select dropdown\n\t\t\t\t// $.each(filterGroupList, function(index, filterName) {\n\t\t\t\t// \tif (filterName !== 'WellDepth' && filterName !== 'County') {\n\t\t\t\t// \t\tvar elementName = '#' + filterName + 'Select';\n\t\t\t\t// \t\tvar code;\n\t\t\t\t// \t\tif (filterName === 'HUC') {code = hucCode};\n\t\t\t\t// \t\tif (filterName === 'Aquifer') {code = aquiferCode};\n\t\t\t\t// \t\tif (filterName === 'WellDepth') {code = wellDepth};\n\n\t\t\t\t// \t\t//console.log('here', filterName,code)\n\n\t\t\t\t// \t\t//add it if it doesn't exist\n\t\t\t\t// \t\tif (code && $(elementName + ' option[value=\"' + code + '\"]').length == 0) {\n\t\t\t\t// \t\t\t//console.log('adding an option for:',elementName,code)\n\t\t\t\t// \t\t\t$(elementName).append($('<option></option>').attr('value',code).text(code));\n\t\t\t\t// \t\t}\n\t\t\t\t// \t}\n\t\t\t\t// });\n\t\t\t});\n\n\t\t\ttoastr.clear();\n\t\t\ttoastr.info('Drawing GeoJSON...', { timeOut: 0 });\n\n\t\t\tvar geoJSONlayer = L.geoJSON(sitesGeoJSON, {\n\t\t\t\tpointToLayer: function (feature, latlng) {\n\t\t\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t\t\t},\n\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\tlayer.bindPopup('<b>' + feature.properties.siteID + '</b></br></br>' + feature.properties.siteName + '</br><a href=\"http://waterdata.usgs.gov/nwis/inventory/?site_no=' + feature.properties.siteID + '\" target=\"_blank\">Access Data</a></br></br>');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsitesLayer.addLayer(geoJSONlayer);\n\t\t\tconsole.log(sitesGeoJSON.features.length, 'sites loaded');\n\t\t\ttoastr.clear();\n\n\t\t\t//is there a better way to do this?\n\t\t\t$('#sitesPanel').collapse(\"toggle\");\n\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t}\n\t});\n}\n\nfunction loadSites2() {\n\n\tsitesLayer.clearLayers();\n\n\tvar geojsonMarkerOptions = {\n\t\tradius: 8,\n\t\tfillColor: \"#ff7800\",\n\t\tcolor: \"#000\",\n\t\tweight: 1,\n\t\topacity: 1,\n\t\tfillOpacity: 0.8\n\t};\n\n\t$.getJSON('./siteData.json', function (data) {\n\t\tvar sitesGeoJSONlayer = L.geoJSON(data, {\n\t\t\tpointToLayer: function (feature, latlng) {\n\t\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t\t},\n\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\tconsole.log(feature.properties);\n\t\t\t\tlayer.bindPopup('<b>Site Name:  </b>' + feature.properties.SiteName + '</br><b>Site Number:  </b>' + feature.properties.SiteNo);\n\n\t\t\t\t//create filters\n\t\t\t\tparseFeatureProperties(feature.properties);\n\t\t\t}\n\t\t});\n\n\t\tsitesLayer.addLayer(sitesGeoJSONlayer);\n\t});\n}\n\nfunction parseFeatureProperties(properties) {\n\t$.each(properties, function (filterCategory, filterData) {\n\t\tconsole.log('here', filterCategory, filterData);\n\n\t\tvar wellElement = '#' + filterCategory;\n\t\tif (typeof filterData === 'object' && $(wellElement).length == 0) {\n\t\t\t$('#filters').append('<div class=\"well\" id=\"' + filterCategory + '\"><h5>' + filterCategory + '</h5></div>');\n\t\t}\n\n\t\t$.each(filterData, function (filterName, filterItem) {\n\t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t\tconsole.log('here2', filterName, filterItem, elementName, $(elementName).length);\n\t\t\t// if ($(elementName).length == 0) {\n\t\t\t// \tconsole.log(elementName, 'does not exist yet')\n\n\t\t\t// \t//first create the dropdown\n\t\t\t// \t$(wellElement).append('<select class=\"form-control\" id=\"' + filterName + 'Select\"><option selected=\"selected\" value=\"default\">Select a ' + filterName + '</option></select>');\n\n\t\t\t// \t//then append the value\n\t\t\t// \t$(elementName).append($('<option></option>').attr('value',filterItem).text(filterItem));\n\t\t\t// }\n\t\t\t// else {\n\t\t\t// \tconsole.log(elementName, 'EXISTS')\n\n\t\t\t// \t//just append the value\n\t\t\t// \t$(elementName).append($('<option></option>').attr('value',filterItem).text(filterItem));\n\t\t\t// }\n\t\t});\n\t});\n}\n\nfunction addFilterOptions(properties) {\n\t//add county to dropdown\n\tif (properties.countyCode) {\n\t\tif (checkSelectForItem('#CountySelect', properties.countyCode) == false) {\n\t\t\t$('#CountySelect').append($('<option></option>').attr('value', properties.countyCd).text(properties.countyCd));\n\t\t}\n\n\t\t// if (properties.countyCode === 'County') {\n\t\t// \t//from here: http://www.census.gov/geo/reference/codes/cou.html\n\t\t// \t//then converted to json: http://www.csvjson.com/csv2json\n\t\t// \t$.getJSON('./countyCodesNY.json', function(data) {\n\t\t// \t\t$.each(data, function( index, county ) {\n\t\t// \t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t// \t\t\t$(elementName).append($('<option></option>').attr('value',county.CountyCd).text(county.CountyName.replace(' County','')));\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }\n\t}\n}\n\nfunction checkSelectForItem(select, item) {\n\tvar exists = false;\n\t$(select + ' option').each(function () {\n\t\tif (this.value === item) {\n\t\t\texists = true;\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn exists;\n}\n\nfunction createFilterGroups() {\n\t$.each(filterGroupList, function (index, filterName) {\n\n\t\t//only county for now\n\t\tif (filterName === 'County') {\n\t\t\t$('#filters').append('<select class=\"form-control NWISselect\" id=\"' + filterName + 'Select\"><option selected=\"selected\" value=\"default\">Select a ' + filterName + '</option></select>');\n\n\t\t\t//county is special case so we need a lookup file with codes, other ones get populated in createSites\n\t\t\tif (filterName === 'County') {\n\t\t\t\t//from here: http://www.census.gov/geo/reference/codes/cou.html\n\t\t\t\t//then converted to json: http://www.csvjson.com/csv2json\n\t\t\t\t$.getJSON('./countyCodesNY.json', function (data) {\n\t\t\t\t\t$.each(data, function (index, county) {\n\t\t\t\t\t\tvar elementName = '#' + filterName + 'Select';\n\t\t\t\t\t\t$(elementName).append($('<option></option>').attr('value', county.CountyCd).attr('stateCounty', county.StateCd + county.CountyCd).text(county.CountyName.replace(' County', '')));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction getQWdata() {\n\t//http://stackoverflow.com/questions/35125036/export-leaflet-map-to-geojson\n\n\ttoastr.info('Getting QW Data...', { timeOut: 0 });\n\n\tvar inputGeoJSON = sitesLayer.toGeoJSON();\n\tvar tempGeoJSON = { 'type': 'FeatureCollection', 'features': [] };\n\n\t//after we get a copy of current filter, clear the display\n\tsitesLayer.clearLayers();\n\n\tif (inputGeoJSON.features.length > 0) {\n\t\tconsole.log('querying NWIS...');\n\n\t\tvar stateCounty = $('#CountySelect :selected').attr('stateCounty');\n\t\tvar paramCodes = $('#parameterCodes').val();\n\t\tvar paramCodesArray = paramCodes.split(',');\n\n\t\tvar params = {\n\t\t\t'site_tp_cd': 'GW',\n\t\t\t'param_cd_operator': '',\n\t\t\t'group_key': 'NONE',\n\t\t\t'sitefile_output_format': 'html_table',\n\t\t\t'column_name': 'agency_cd',\n\t\t\t'column_name': 'site_no',\n\t\t\t'column_name': 'station_nm',\n\t\t\t'inventory_output': 0,\n\t\t\t'rdb_inventory_output': 'file',\n\t\t\t'begin_date': '',\n\t\t\t'end_date': '',\n\t\t\t'TZoutput': 0,\n\t\t\t'pm_cd_va_search': '',\n\t\t\t'pm_cd_compare': 'Greater%20than',\n\t\t\t'pm_cd_result_va': '',\n\t\t\t'radio_parm_cds': 'previous_parm_cds',\n\t\t\t'radio_previous_parm_cds': '',\n\t\t\t'radio_multiple_parm_cds': '',\n\t\t\t'radio_parm_cd_file': '',\n\t\t\t'qw_attributes': 0,\n\t\t\t'format': 'rdb',\n\t\t\t'qw_sample_wide': 'wide',\n\t\t\t'rdb_qw_attributes': 0,\n\t\t\t'date_format': 'YYYY-MM-DD',\n\t\t\t'rdb_compression': 'value'\n\t\t};\n\n\t\t//seperate method if we have a geoFilter\n\t\tif (geoFilterFlag) {\n\t\t\t//var inputFile = 'site_no\\n430138074044601\\n425851074085801\\n425731074172901\\n';\n\n\t\t\tvar inputFile = 'site_no\\n';\n\n\t\t\t//get list of siteIDs and write it out to a string\n\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\t\t\t\tinputFile += feature.properties.siteID + '\\n';\n\t\t\t});\n\n\t\t\t//inputFile = encodeURIComponent(inputFile);\n\n\t\t\t//add method specific params\n\n\t\t\tparams.multiple_parameter_cds = paramCodes ? paramCodes : '00940';\n\t\t\tparams.list_of_search_criteria = 'site_no_file_attachment,multiple_parameter_cds,site_tp_cd';\n\t\t\tparams.site_no_file_attachment = {\n\t\t\t\ttype: 'text/plain',\n\t\t\t\tfilename: 'sites.txt',\n\t\t\t\tcontent: inputFile\n\t\t\t};\n\n\t\t\t// var params = { \n\t\t\t// \t'site_no_file_attachment': {\n\t\t\t// \t\ttype: 'text/plain',\n\t\t\t// \t\tfilename: 'sites.txt',\n\t\t\t// \t\tcontent: inputFile\n\t\t\t// \t},\n\t\t\t// \t'multiple_parameter_cds': (paramCodes ? paramCodes : '00940'),\n\t\t\t// \t'group_key': 'NONE', \n\t\t\t// \t'sitefile_output_format': 'html_table',\n\t\t\t// \t'column_name': 'agency_cd',\n\t\t\t// \t'column_name': 'site_no',\n\t\t\t// \t'column_name': 'station_nm',\n\t\t\t// \t'inventory_output': 0,\n\t\t\t// \t'rdb_inventory_output': 'file',\n\t\t\t// \t'begin_date': '',\n\t\t\t// \t'end_date': '',\n\t\t\t// \t'TZoutput': 0,\n\t\t\t// \t'pm_cd_va_search': '',\n\t\t\t// \t'pm_cd_compare': 'Greater%20than',\n\t\t\t// \t'pm_cd_result_va': '',\n\t\t\t// \t'radio_parm_cds': 'previous_parm_cds',\n\t\t\t// \t'radio_previous_parm_cds': '',\n\t\t\t// \t'param_cd_operator': '',\n\t\t\t// \t'radio_multiple_parm_cds': '',\n\t\t\t// \t'radio_parm_cd_file': '',\n\t\t\t// \t'qw_attributes': 0,\n\t\t\t// \t'format': 'rdb',\n\t\t\t// \t'qw_sample_wide': 'wide',\n\t\t\t// \t'rdb_qw_attributes': 0,\n\t\t\t// \t'date_format': 'YYYY-MM-DD',\n\t\t\t// \t'rdb_compression': 'value',\n\t\t\t// \t'list_of_search_criteria': 'site_no_file_attachment,multiple_parameter_cds'\n\t\t\t// }\n\n\t\t\t//console.log(JSON.stringify(params));\n\n\t\t\tvar boundary = '-----------------------------' + Math.floor(Math.random() * Math.pow(10, 8));\n\n\t\t\tvar content = [];\n\t\t\tfor (var i in params) {\n\t\t\t\tcontent.push('--' + boundary);\n\n\t\t\t\tvar mimeHeader = 'Content-Disposition: form-data; name=\"' + i + '\"; ';\n\t\t\t\tif (params[i].filename) mimeHeader += 'filename=\"' + params[i].filename + '\";';\n\t\t\t\tcontent.push(mimeHeader);\n\n\t\t\t\tif (params[i].type) content.push('Content-Type: ' + params[i].type);\n\n\t\t\t\tcontent.push('');\n\t\t\t\tcontent.push(params[i].content || params[i]);\n\t\t\t};\n\n\t\t\tcontent.push('--' + boundary);\n\n\t\t\t/* Use your favorite toolkit here */\n\t\t\t/* it should still work if you can control headers and POST raw data */\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata',\n\t\t\t\tdata: content.join('\\r\\n'),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data; boundary=' + boundary\n\t\t\t\t},\n\t\t\t\tcache: false,\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tsuccess: function (d) {\n\n\t\t\t\t\tvar qwdata = USGSrdb2JSON(d);\n\t\t\t\t\tconsole.log('got a response:', qwdata.length, 'sites');\n\n\t\t\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\n\t\t\t\t\t\t//create a new feature\n\t\t\t\t\t\tvar siteGeoJSON = feature;\n\t\t\t\t\t\tvar matchFound = false;\n\n\t\t\t\t\t\t//loop over qw results\n\t\t\t\t\t\t$.each(qwdata, function (index, qwSite) {\n\n\t\t\t\t\t\t\t//check for a match\n\t\t\t\t\t\t\tif (feature.properties.siteID === qwSite.site_no) {\n\n\t\t\t\t\t\t\t\t$.each(paramCodesArray, function (index, paramCode) {\n\t\t\t\t\t\t\t\t\tif (qwSite.hasOwnProperty('p' + paramCode)) {\n\t\t\t\t\t\t\t\t\t\tsiteGeoJSON.properties['p' + paramCode + '|' + qwSite.sample_dt + ' ' + qwSite.sample_tm + ' ' + qwSite.sample_start_time_datum_cd + '|' + qwSite.medium_cd] = qwSite['p' + paramCode];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t//console.log(siteGeoJSON.properties);\n\n\t\t\t\t\t\t\t\tmatchFound = true;\n\t\t\t\t\t\t\t\t//console.log('match found:', qwSite);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (matchFound) {\n\t\t\t\t\t\t\ttempGeoJSON.features.push(siteGeoJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar geoJSONlayer = L.geoJson(tempGeoJSON, {\n\t\t\t\t\t\tpointToLayer: function (feature, latlng) {\n\t\t\t\t\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\t\t\tvar $popupContent = $('<div>', { id: 'popup' });\n\n\t\t\t\t\t\t\t$.each(feature.properties, function (index, property) {\n\t\t\t\t\t\t\t\t$popupContent.append('<b>' + index + ':</b>  ' + property + '</br>');\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tlayer.bindPopup($popupContent.html());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tsitesLayer.addLayer(geoJSONlayer);\n\n\t\t\t\t\tmap.fitBounds(sitesLayer.getBounds());\n\n\t\t\t\t\tconsole.log(tempGeoJSON.features.length, 'sites loaded');\n\t\t\t\t\ttoastr.clear();\n\n\t\t\t\t\t//is there a better way to do this?\n\t\t\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t\t\t\t$('#exportPanel').collapse(\"toggle\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//otherwise regular paramater request method\n\t\telse {\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: 'https://nwis.waterdata.usgs.gov/ny/nwis/qwdata',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t'county_cd': stateCounty ? stateCounty : '',\n\t\t\t\t\t\t'site_tp_cd': 'GW',\n\t\t\t\t\t\t'group_key': 'NONE',\n\t\t\t\t\t\t'sitefile_output_format': 'html_table',\n\t\t\t\t\t\t'column_name': 'agency_cd',\n\t\t\t\t\t\t'column_name': 'site_no',\n\t\t\t\t\t\t'column_name': 'station_nm',\n\t\t\t\t\t\t'inventory_output': 0,\n\t\t\t\t\t\t'rdb_inventory_output': 'file',\n\t\t\t\t\t\t'TZoutput': 0,\n\t\t\t\t\t\t'pm_cd_compare': 'Greater%20than',\n\t\t\t\t\t\t'radio_parm_cds': 'parm_cd_list',\n\t\t\t\t\t\t'radio_multiple_parm_cds': paramCodes ? paramCodes : '00940',\n\t\t\t\t\t\t'qw_attributes': 0,\n\t\t\t\t\t\t'format': 'rdb',\n\t\t\t\t\t\t'qw_sample_wide': 'wide',\n\t\t\t\t\t\t'rdb_qw_attributes': 0,\n\t\t\t\t\t\t'date_format': 'YYYY-MM-DD',\n\t\t\t\t\t\t'rdb_compression': 'YYYY-MM-DD',\n\t\t\t\t\t\t'list_of_search_criteria': 'site_tp_cd'\n\t\t\t\t\t},\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tsuccess: function (d) {\n\n\t\t\t\t\t\tvar qwdata = USGSrdb2JSON(d);\n\t\t\t\t\t\tconsole.log('got a response:', qwdata.length, 'sites');\n\n\t\t\t\t\t\t$.each(inputGeoJSON.features[0].features, function (index, feature) {\n\n\t\t\t\t\t\t\t//create a new feature\n\t\t\t\t\t\t\tvar siteGeoJSON = feature;\n\t\t\t\t\t\t\tvar matchFound = false;\n\n\t\t\t\t\t\t\t//loop over qw results\n\t\t\t\t\t\t\t$.each(qwdata, function (index, qwSite) {\n\n\t\t\t\t\t\t\t\t//check for a match\n\t\t\t\t\t\t\t\tif (feature.properties.siteID === qwSite.site_no) {\n\n\t\t\t\t\t\t\t\t\t$.each(paramCodesArray, function (index, paramCode) {\n\t\t\t\t\t\t\t\t\t\tif (qwSite.hasOwnProperty('p' + paramCode)) {\n\t\t\t\t\t\t\t\t\t\t\tsiteGeoJSON.properties['p' + paramCode + '|' + qwSite.sample_dt + ' ' + qwSite.sample_tm + ' ' + qwSite.sample_start_time_datum_cd + '|' + qwSite.medium_cd] = qwSite['p' + paramCode];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t//console.log(siteGeoJSON.properties);\n\n\t\t\t\t\t\t\t\t\tmatchFound = true;\n\t\t\t\t\t\t\t\t\t//console.log('match found:', qwSite);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (matchFound) {\n\t\t\t\t\t\t\t\ttempGeoJSON.features.push(siteGeoJSON);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tvar geoJSONlayer = L.geoJson(tempGeoJSON, {\n\t\t\t\t\t\t\tpointToLayer: function (feature, latlng) {\n\t\t\t\t\t\t\t\treturn L.circleMarker(latlng, geojsonMarkerOptions);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonEachFeature: function (feature, layer) {\n\t\t\t\t\t\t\t\tvar $popupContent = $('<div>', { id: 'popup' });\n\n\t\t\t\t\t\t\t\t$.each(feature.properties, function (index, property) {\n\t\t\t\t\t\t\t\t\t$popupContent.append('<b>' + index + ':</b>  ' + property + '</br>');\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tlayer.bindPopup($popupContent.html());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tsitesLayer.addLayer(geoJSONlayer);\n\n\t\t\t\t\t\tmap.fitBounds(sitesLayer.getBounds());\n\n\t\t\t\t\t\tconsole.log(tempGeoJSON.features.length, 'sites loaded');\n\t\t\t\t\t\ttoastr.clear();\n\n\t\t\t\t\t\t//is there a better way to do this?\n\t\t\t\t\t\t$('#filtersPanel').collapse(\"toggle\");\n\t\t\t\t\t\t$('#exportPanel').collapse(\"toggle\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t} else {\n\t\ttoastr.error('Error', 'No sites to display');\n\t}\n}\n\nfunction jsonToTable(json) {\n\n\tvar table = $('<table border=1>');\n\tvar tblHeader = '<tr>';\n\tfor (var k in json[0]) tblHeader += '<th>' + k + '</th>';\n\ttblHeader += '</tr>';\n\t$(tblHeader).appendTo(table);\n\t$.each(json, function (index, value) {\n\t\tvar TableRow = '<tr>';\n\t\t$.each(value, function (key, val) {\n\t\t\tTableRow += '<td>' + val + '</td>';\n\t\t});\n\t\tTableRow += '</tr>';\n\t\t$(table).append(TableRow);\n\t});\n\treturn $(table);\n};\n\nfunction downloadGeoJSON() {\n\n\t//for some reason the leaflet toGeoJSON wraps the geojson in a second feature collection\n\tif (sitesLayer.toGeoJSON().features[0]) {\n\t\tvar GeoJSON = JSON.stringify(sitesLayer.toGeoJSON().features[0]);\n\t\tvar filename = 'data.geojson';\n\t\tdownloadFile(GeoJSON, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export');\n\t}\n}\n\nfunction downloadKML() {\n\t//https://github.com/mapbox/tokml\n\t//http://gis.stackexchange.com/questions/159344/export-to-kml-option-using-leaflet\n\tif (sitesLayer.toGeoJSON().features[0]) {\n\t\tvar GeoJSON = sitesLayer.toGeoJSON().features[0];\n\t\tvar kml = tokml(GeoJSON);\n\t\tvar filename = 'data.kml';\n\t\tdownloadFile(kml, filename);\n\t} else {\n\t\ttoastr.error('Error', 'No sites to export');\n\t}\n}\n\nfunction downloadFile(data, filename) {\n\tvar blob = new Blob([data], { type: 'text/csv;charset=utf-8;' });\n\tif (navigator.msSaveBlob) {\n\t\t// IE 10+\n\t\tnavigator.msSaveBlob(blob, filename);\n\t} else {\n\t\tvar link = document.createElement('a');\n\t\tvar url = URL.createObjectURL(blob);\n\t\tif (link.download !== undefined) {\n\t\t\t// feature detection\n\t\t\t// Browsers that support HTML5 download attribute\n\t\t\tlink.setAttribute('href', url);\n\t\t\tlink.setAttribute('download', filename);\n\t\t\tlink.style.visibility = 'hidden';\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t} else {\n\t\t\twindow.open(url);\n\t\t}\n\t}\n}\n\nfunction USGSrdb2JSON(tsv) {\n\n\tvar lines = tsv.split(/\\r?\\n/);\n\tvar result = [];\n\tvar headers;\n\n\t$.each(lines, function (index, line) {\n\t\tvar obj = {};\n\t\tif (line[0] != '#') {\n\t\t\tvar currentline = line.split('\\t');\n\n\t\t\tif (currentline[0] === 'agency_cd') {\n\t\t\t\theaders = currentline;\n\t\t\t}\n\t\t\tif (currentline[0] !== '5s' && currentline[0] !== 'agency_cd') {\n\t\t\t\t//console.log(currentline)\n\n\t\t\t\tfor (var j = 0; j < headers.length; j++) {\n\t\t\t\t\tobj[headers[j]] = currentline[j];\n\t\t\t\t}\n\n\t\t\t\tresult.push(obj);\n\t\t\t}\n\t\t}\n\t});\n\n\t//return result; //JavaScript object\n\treturn result; //JSON\n}\n\nfunction setBasemap(baseMap) {\n\n\tswitch (baseMap) {\n\t\tcase 'Streets':\n\t\t\tbaseMap = 'Streets';break;\n\t\tcase 'Satellite':\n\t\t\tbaseMap = 'Imagery';break;\n\t\tcase 'Topo':\n\t\t\tbaseMap = 'Topographic';break;\n\t\tcase 'Terrain':\n\t\t\tbaseMap = 'Terrain';break;\n\t\tcase 'Gray':\n\t\t\tbaseMap = 'Gray';break;\n\t\tcase 'NatGeo':\n\t\t\tbaseMap = 'NationalGeographic';break;\n\t}\n\n\tif (baseMapLayer) map.removeLayer(baseMapLayer);\n\tbaseMapLayer = __webpack_provided_L_dot_esri.basemapLayer(baseMap);\n\tmap.addLayer(baseMapLayer);\n\tif (basemapLayerLabels) map.removeLayer(basemapLayerLabels);\n\tif (baseMap === 'Gray' || baseMap === 'Imagery' || baseMap === 'Terrain') {\n\t\tbasemapLayerLabels = __webpack_provided_L_dot_esri.basemapLayer(baseMap + 'Labels');\n\t\tmap.addLayer(basemapLayerLabels);\n\t}\n}\n\nfunction resetView() {\n\n\t//reset geo Filter flag\n\tgeoFilterFlag = false;\n\n\t//clear any selection graphics\n\tsitesLayer.clearLayers();\n\n\t//reset view\n\tmap.setView([MapY, MapX], 7);\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(4), __webpack_require__(6), __webpack_require__(10)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 12:
/***/ function(module, exports) {

	eval("module.exports = \"<!--\\r\\n------------------------------------------------------------------------------\\r\\n----- NY Go2 Mapper ----------------------------------------------------------\\r\\n------------------------------------------------------------------------------\\r\\n\\r\\ncopyright:   2013 Martyn Smith - USGS NY WSC\\r\\n\\r\\nauthors:  Martyn J. Smith - USGS NY WSC\\r\\n\\r\\npurpose:  Web Mapping interface for Go2 Mapper system\\r\\n------------------------------------------------------------------------------\\r\\n-->\\r\\n<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <meta name=\\\"author\\\" content=\\\"Martyn Smith - USGS NY WSC\\\">\\r\\n\\t<link rel=\\\"copyright\\\" href=\\\"license.txt\\\">\\r\\n    <title>NY WSC QW Mapper</title>\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\\\">\\r\\n    <script src=\\\"./scripts/vendor.bundle.min.js\\\"></script>\\r\\n    <script src=\\\"./scripts/bundle.min.js\\\"></script>  \\r\\n  </head>\\r\\n  <body>\\r\\n    <div id=\\\"top-menu\\\">\\r\\n        <div class=\\\"title\\\">\\r\\n            <a class='top-menu-brand' href=\\\"http://www.usgs.gov\\\"><img src=\\\"images/usgs-logo.png\\\"></a>\\r\\n            <span class=\\\"app-name\\\">NY WSC QW Mapper</span> <span class=\\\"app-name-mobile\\\">NY WSC QW Mapper</span> \\r\\n        </div>\\r\\n        <div id=\\\"mobile-main-menu\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-menu-hamburger\\\" ></span>\\r\\n        </div>\\r\\n\\r\\n        <button id=\\\"aboutButton\\\" class=\\\"btn btn-default top-menu-btn pull-right\\\">\\r\\n            <i class=\\\"glyphicon glyphicon-info-sign\\\"></i><span class=\\\"hidden-xs\\\">&nbsp;&nbsp;About</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"main-menu\\\">\\r\\n        <div class=\\\"main-menu-container scrollable\\\">\\r\\n            <div class=\\\"menu-content\\\"> \\r\\n                <div class=\\\"scrollable-content\\\">\\r\\n\\r\\n                    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#sitesPanel\\\">\\r\\n                                        Sites\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"sitesPanel\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n                                <div class=\\\"panel-body collapse in\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"loadSites\\\" >Load Sites</button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default btn-block\\\" id=\\\"resetView\\\" >Reset View</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#filtersPanel\\\">\\r\\n                                        Filters\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"filtersPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">     \\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"resetFilters\\\" >Reset Filters</button>\\r\\n                                    <div id=\\\"filters\\\" style=\\\"display:block;\\\">\\r\\n                                        <div id=\\\"geoFilterSelect\\\"></div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label for=\\\"usr\\\">Parameter Codes:&nbsp;&nbsp;</label><small>(comma separated)</small>\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parameterCodes\\\" value=\\\"00940\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"getQWdata\\\" >Filter and get QW Data</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#exportPanel\\\">\\r\\n                                        Export\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"exportPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">     \\r\\n                                    <div id=\\\"export\\\" style=\\\"display:block;\\\">\\r\\n   \\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportGeoJSON\\\" >Export GeoJSON&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                       <div class=\\\"form-group\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"exportKML\\\" >Export KML&nbsp;&nbsp;<i class=\\\"glyphicon glyphicon-download-alt\\\"></i></button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"panel panel-default sidebar-panel\\\">\\r\\n                            <div class=\\\"panel-heading\\\">\\r\\n                                <h4 class=\\\"panel-title\\\">\\r\\n                                    <a class=\\\"accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#basemapsPanel\\\">\\r\\n                                        Basemaps\\r\\n                                    </a>\\r\\n                                </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"basemapsPanel\\\" class=\\\"panel-collapse collapse\\\">\\r\\n                                <div class=\\\"panel-body\\\">\\r\\n                                    <button id=\\\"btnStreets\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/streets.jpg\\\"><br class=\\\"basemapThumb\\\">Streets</button>\\r\\n                                    <button id=\\\"btnSatellite\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/satellite.jpg\\\"><br class=\\\"basemapThumb\\\">Satellite</button>\\r\\n                                    <button id=\\\"btnTopo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/topo.jpg\\\"><br class=\\\"basemapThumb\\\">Topo</button>\\r\\n                                    <button id=\\\"btnTerrain\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/terrain.jpg\\\"><br class=\\\"basemapThumb\\\">Terrain</button>\\r\\n                                    <button id=\\\"btnGray\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize slick-btn-selection\\\" ><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/gray.jpg\\\"><br class=\\\"basemapThumb\\\">Gray</button>\\r\\n                                    <button id=\\\"btnNatGeo\\\" class=\\\"btn btn-default slick-btn basemapBtn equalize\\\"><img class=\\\"basemapThumb\\\" alt=\\\"\\\" src=\\\"images/natgeo.jpg\\\"><br class=\\\"basemapThumb\\\">NatGeo</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"info\\\" class=\\\"identification pull-right\\\">Developed by USGS NY WSC</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <div id=\\\"aboutModal\\\" class=\\\"modal fade\\\"  tabindex=\\\"-1\\\" role=\\\"dialog\\\" >\\r\\n        <div class=\\\"modal-dialog  modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <button class=\\\"close\\\" type=\\\"button\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\" style=\\\"color:gray;\\\">&times;</button>\\r\\n                    <h4 class=\\\"modal-title\\\">NY WSC Go2 Mapper</h4>\\r\\n                </div>\\r\\n                <div id=\\\"aboutModalBody\\\" class=\\\"modal-body\\\">\\r\\n                    <ul class=\\\"nav nav-tabs\\\" id=\\\"aboutModalTabs\\\">\\r\\n                        <li role=\\\"presentation\\\" class=\\\"active\\\"><a id=\\\"aboutTab\\\" href=\\\"#aboutTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-question-circle\\\"></i>&nbsp;About the application</a></li>\\r\\n                        <li role=\\\"presentation\\\"><a id=\\\"disclaimerTab\\\" href=\\\"#disclaimerTabPane\\\" data-toggle=\\\"tab\\\"><i class=\\\"fa fa-exclamation-circle\\\"></i>&nbsp;Site Information</a></li>\\r\\n                    </ul>\\r\\n                    <div class=\\\"tab-content\\\">\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane active\\\" id=\\\"aboutTabPane\\\"></br>\\r\\n                            <p>Developed by Martyn Smith and Todd Siskin of the NY WSC.  Licensed under <a href=\\\"./license.txt\\\" target=\\\"_blank\\\">Apache 2.0</a></p>\\r\\n                            <p>Portions of this application were developed in conjuction with <a href=\\\"http://wim.usgs.gov\\\" target=\\\"_blank\\\">Web Informatics and Mapping (WiM)</a></p>\\r\\n                            <p>Icons created by David McCulloch, USGS</p></br>\\r\\n                            <span id=\\\"appVersion\\\"></span>\\r\\n                        </div>\\r\\n                        <div role=\\\"tabpanel\\\" class=\\\"tab-pane\\\" id=\\\"disclaimerTabPane\\\"></br>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\"><h4>Missing Sites in SiteList.json</h4>\\r\\n                                    <ul id=\\\"missingSites\\\"></ul>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\"><h4>Missing Sites in TripList.json</h4>\\r\\n                                    <ul id=\\\"noTripSites\\\"></ul>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--<div class=\\\"modal-footer\\\">\\r\\n                </div>-->\\r\\n            </div><!-- /.modal-content -->\\r\\n        </div> <!-- /.modal-dialog -->\\r\\n    </div><!-- /.modal -->\\r\\n\\r\\n    <div id=\\\"mapDiv\\\">\\r\\n        <div id=\\\"NWSlegend\\\"></div>\\r\\n        <div id=\\\"radarTimeStamp\\\" style=\\\"font-size:x-small;\\\"></div>\\r\\n    </div>\\r\\n  </body>\\r\\n</html>\"//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

});